{"version":3,"file":"index.js","sources":["../node_modules/@turf/clone/dist/es/index.js","../node_modules/@turf/helpers/dist/es/index.js","../node_modules/@turf/invariant/dist/es/index.js","../node_modules/@turf/boolean-clockwise/dist/es/index.js","../node_modules/@turf/meta/dist/es/index.js","../node_modules/@turf/rewind/dist/es/index.js","../node_modules/point-in-polygon-hao/dist/pointInPolygon.mjs","../node_modules/robust-predicates/esm/util.js","../node_modules/robust-predicates/esm/orient2d.js","../node_modules/polygon-splitter/dist/polygonsplitter.mjs","../node_modules/@mapbox/mapbox-gl-draw/dist/mapbox-gl-draw.js","../node_modules/@turf/line-segment/dist/es/index.js","../node_modules/geojson-rbush/node_modules/quickselect/index.js","../node_modules/geojson-rbush/node_modules/rbush/index.js","../node_modules/@turf/helpers/dist/js/index.js","../node_modules/@turf/meta/dist/js/index.js","../node_modules/@turf/bbox/dist/js/index.js","../node_modules/geojson-rbush/index.js","../node_modules/@turf/line-intersect/dist/es/index.js","../node_modules/@turf/boolean-point-in-polygon/dist/es/index.js","../node_modules/@turf/polygon-to-line/dist/es/index.js","../node_modules/@turf/boolean-disjoint/dist/es/index.js","../node_modules/@turf/line-offset/dist/es/index.js","../node_modules/@turf/bbox/dist/es/index.js","../node_modules/@turf/line-to-polygon/dist/es/index.js","../node_modules/splaytree/dist/splay.esm.js","../node_modules/polygon-clipping/dist/polygon-clipping.esm.js","../node_modules/@turf/difference/dist/es/index.js","../src/constants.js","../src/mode.js","../src/customDrawStyles.js","../node_modules/mapbox-gl-draw-passing-mode/src/passing_draw_point.js","../node_modules/mapbox-gl-draw-passing-mode/src/passing_draw_line_string.js","../node_modules/mapbox-gl-draw-passing-mode/src/passing_draw_polygon.js","../node_modules/mapbox-gl-draw-select-mode/src/constants.js","../node_modules/mapbox-gl-draw-select-mode/src/mode.js","../node_modules/mapbox-gl-draw-select-mode/src/index.js","../src/index.js"],"sourcesContent":["/**\n * Returns a cloned copy of the passed GeoJSON Object, including possible 'Foreign Members'.\n * ~3-5x faster than the common JSON.parse + JSON.stringify combo method.\n *\n * @name clone\n * @param {GeoJSON} geojson GeoJSON Object\n * @returns {GeoJSON} cloned GeoJSON Object\n * @example\n * var line = turf.lineString([[-74, 40], [-78, 42], [-82, 35]], {color: 'red'});\n *\n * var lineCloned = turf.clone(line);\n */\nfunction clone(geojson) {\n    if (!geojson) {\n        throw new Error(\"geojson is required\");\n    }\n    switch (geojson.type) {\n        case \"Feature\":\n            return cloneFeature(geojson);\n        case \"FeatureCollection\":\n            return cloneFeatureCollection(geojson);\n        case \"Point\":\n        case \"LineString\":\n        case \"Polygon\":\n        case \"MultiPoint\":\n        case \"MultiLineString\":\n        case \"MultiPolygon\":\n        case \"GeometryCollection\":\n            return cloneGeometry(geojson);\n        default:\n            throw new Error(\"unknown GeoJSON type\");\n    }\n}\n/**\n * Clone Feature\n *\n * @private\n * @param {Feature<any>} geojson GeoJSON Feature\n * @returns {Feature<any>} cloned Feature\n */\nfunction cloneFeature(geojson) {\n    var cloned = { type: \"Feature\" };\n    // Preserve Foreign Members\n    Object.keys(geojson).forEach(function (key) {\n        switch (key) {\n            case \"type\":\n            case \"properties\":\n            case \"geometry\":\n                return;\n            default:\n                cloned[key] = geojson[key];\n        }\n    });\n    // Add properties & geometry last\n    cloned.properties = cloneProperties(geojson.properties);\n    cloned.geometry = cloneGeometry(geojson.geometry);\n    return cloned;\n}\n/**\n * Clone Properties\n *\n * @private\n * @param {Object} properties GeoJSON Properties\n * @returns {Object} cloned Properties\n */\nfunction cloneProperties(properties) {\n    var cloned = {};\n    if (!properties) {\n        return cloned;\n    }\n    Object.keys(properties).forEach(function (key) {\n        var value = properties[key];\n        if (typeof value === \"object\") {\n            if (value === null) {\n                // handle null\n                cloned[key] = null;\n            }\n            else if (Array.isArray(value)) {\n                // handle Array\n                cloned[key] = value.map(function (item) {\n                    return item;\n                });\n            }\n            else {\n                // handle generic Object\n                cloned[key] = cloneProperties(value);\n            }\n        }\n        else {\n            cloned[key] = value;\n        }\n    });\n    return cloned;\n}\n/**\n * Clone Feature Collection\n *\n * @private\n * @param {FeatureCollection<any>} geojson GeoJSON Feature Collection\n * @returns {FeatureCollection<any>} cloned Feature Collection\n */\nfunction cloneFeatureCollection(geojson) {\n    var cloned = { type: \"FeatureCollection\" };\n    // Preserve Foreign Members\n    Object.keys(geojson).forEach(function (key) {\n        switch (key) {\n            case \"type\":\n            case \"features\":\n                return;\n            default:\n                cloned[key] = geojson[key];\n        }\n    });\n    // Add features\n    cloned.features = geojson.features.map(function (feature) {\n        return cloneFeature(feature);\n    });\n    return cloned;\n}\n/**\n * Clone Geometry\n *\n * @private\n * @param {Geometry<any>} geometry GeoJSON Geometry\n * @returns {Geometry<any>} cloned Geometry\n */\nfunction cloneGeometry(geometry) {\n    var geom = { type: geometry.type };\n    if (geometry.bbox) {\n        geom.bbox = geometry.bbox;\n    }\n    if (geometry.type === \"GeometryCollection\") {\n        geom.geometries = geometry.geometries.map(function (g) {\n            return cloneGeometry(g);\n        });\n        return geom;\n    }\n    geom.coordinates = deepSlice(geometry.coordinates);\n    return geom;\n}\n/**\n * Deep Slice coordinates\n *\n * @private\n * @param {Coordinates} coords Coordinates\n * @returns {Coordinates} all coordinates sliced\n */\nfunction deepSlice(coords) {\n    var cloned = coords;\n    if (typeof cloned[0] !== \"object\") {\n        return cloned.slice();\n    }\n    return cloned.map(function (coord) {\n        return deepSlice(coord);\n    });\n}\nexport default clone;\n","/**\n * @module helpers\n */\n/**\n * Earth Radius used with the Harvesine formula and approximates using a spherical (non-ellipsoid) Earth.\n *\n * @memberof helpers\n * @type {number}\n */\nexport var earthRadius = 6371008.8;\n/**\n * Unit of measurement factors using a spherical (non-ellipsoid) earth radius.\n *\n * @memberof helpers\n * @type {Object}\n */\nexport var factors = {\n    centimeters: earthRadius * 100,\n    centimetres: earthRadius * 100,\n    degrees: earthRadius / 111325,\n    feet: earthRadius * 3.28084,\n    inches: earthRadius * 39.37,\n    kilometers: earthRadius / 1000,\n    kilometres: earthRadius / 1000,\n    meters: earthRadius,\n    metres: earthRadius,\n    miles: earthRadius / 1609.344,\n    millimeters: earthRadius * 1000,\n    millimetres: earthRadius * 1000,\n    nauticalmiles: earthRadius / 1852,\n    radians: 1,\n    yards: earthRadius * 1.0936,\n};\n/**\n * Units of measurement factors based on 1 meter.\n *\n * @memberof helpers\n * @type {Object}\n */\nexport var unitsFactors = {\n    centimeters: 100,\n    centimetres: 100,\n    degrees: 1 / 111325,\n    feet: 3.28084,\n    inches: 39.37,\n    kilometers: 1 / 1000,\n    kilometres: 1 / 1000,\n    meters: 1,\n    metres: 1,\n    miles: 1 / 1609.344,\n    millimeters: 1000,\n    millimetres: 1000,\n    nauticalmiles: 1 / 1852,\n    radians: 1 / earthRadius,\n    yards: 1.0936133,\n};\n/**\n * Area of measurement factors based on 1 square meter.\n *\n * @memberof helpers\n * @type {Object}\n */\nexport var areaFactors = {\n    acres: 0.000247105,\n    centimeters: 10000,\n    centimetres: 10000,\n    feet: 10.763910417,\n    hectares: 0.0001,\n    inches: 1550.003100006,\n    kilometers: 0.000001,\n    kilometres: 0.000001,\n    meters: 1,\n    metres: 1,\n    miles: 3.86e-7,\n    millimeters: 1000000,\n    millimetres: 1000000,\n    yards: 1.195990046,\n};\n/**\n * Wraps a GeoJSON {@link Geometry} in a GeoJSON {@link Feature}.\n *\n * @name feature\n * @param {Geometry} geometry input geometry\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature} a GeoJSON Feature\n * @example\n * var geometry = {\n *   \"type\": \"Point\",\n *   \"coordinates\": [110, 50]\n * };\n *\n * var feature = turf.feature(geometry);\n *\n * //=feature\n */\nexport function feature(geom, properties, options) {\n    if (options === void 0) { options = {}; }\n    var feat = { type: \"Feature\" };\n    if (options.id === 0 || options.id) {\n        feat.id = options.id;\n    }\n    if (options.bbox) {\n        feat.bbox = options.bbox;\n    }\n    feat.properties = properties || {};\n    feat.geometry = geom;\n    return feat;\n}\n/**\n * Creates a GeoJSON {@link Geometry} from a Geometry string type & coordinates.\n * For GeometryCollection type use `helpers.geometryCollection`\n *\n * @name geometry\n * @param {string} type Geometry Type\n * @param {Array<any>} coordinates Coordinates\n * @param {Object} [options={}] Optional Parameters\n * @returns {Geometry} a GeoJSON Geometry\n * @example\n * var type = \"Point\";\n * var coordinates = [110, 50];\n * var geometry = turf.geometry(type, coordinates);\n * // => geometry\n */\nexport function geometry(type, coordinates, _options) {\n    if (_options === void 0) { _options = {}; }\n    switch (type) {\n        case \"Point\":\n            return point(coordinates).geometry;\n        case \"LineString\":\n            return lineString(coordinates).geometry;\n        case \"Polygon\":\n            return polygon(coordinates).geometry;\n        case \"MultiPoint\":\n            return multiPoint(coordinates).geometry;\n        case \"MultiLineString\":\n            return multiLineString(coordinates).geometry;\n        case \"MultiPolygon\":\n            return multiPolygon(coordinates).geometry;\n        default:\n            throw new Error(type + \" is invalid\");\n    }\n}\n/**\n * Creates a {@link Point} {@link Feature} from a Position.\n *\n * @name point\n * @param {Array<number>} coordinates longitude, latitude position (each in decimal degrees)\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Point>} a Point feature\n * @example\n * var point = turf.point([-75.343, 39.984]);\n *\n * //=point\n */\nexport function point(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    if (!coordinates) {\n        throw new Error(\"coordinates is required\");\n    }\n    if (!Array.isArray(coordinates)) {\n        throw new Error(\"coordinates must be an Array\");\n    }\n    if (coordinates.length < 2) {\n        throw new Error(\"coordinates must be at least 2 numbers long\");\n    }\n    if (!isNumber(coordinates[0]) || !isNumber(coordinates[1])) {\n        throw new Error(\"coordinates must contain numbers\");\n    }\n    var geom = {\n        type: \"Point\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\n/**\n * Creates a {@link Point} {@link FeatureCollection} from an Array of Point coordinates.\n *\n * @name points\n * @param {Array<Array<number>>} coordinates an array of Points\n * @param {Object} [properties={}] Translate these properties to each Feature\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north]\n * associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Point>} Point Feature\n * @example\n * var points = turf.points([\n *   [-75, 39],\n *   [-80, 45],\n *   [-78, 50]\n * ]);\n *\n * //=points\n */\nexport function points(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    return featureCollection(coordinates.map(function (coords) {\n        return point(coords, properties);\n    }), options);\n}\n/**\n * Creates a {@link Polygon} {@link Feature} from an Array of LinearRings.\n *\n * @name polygon\n * @param {Array<Array<Array<number>>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Polygon>} Polygon Feature\n * @example\n * var polygon = turf.polygon([[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]], { name: 'poly1' });\n *\n * //=polygon\n */\nexport function polygon(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    for (var _i = 0, coordinates_1 = coordinates; _i < coordinates_1.length; _i++) {\n        var ring = coordinates_1[_i];\n        if (ring.length < 4) {\n            throw new Error(\"Each LinearRing of a Polygon must have 4 or more Positions.\");\n        }\n        for (var j = 0; j < ring[ring.length - 1].length; j++) {\n            // Check if first point of Polygon contains two numbers\n            if (ring[ring.length - 1][j] !== ring[0][j]) {\n                throw new Error(\"First and last Position are not equivalent.\");\n            }\n        }\n    }\n    var geom = {\n        type: \"Polygon\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\n/**\n * Creates a {@link Polygon} {@link FeatureCollection} from an Array of Polygon coordinates.\n *\n * @name polygons\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygon coordinates\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Polygon>} Polygon FeatureCollection\n * @example\n * var polygons = turf.polygons([\n *   [[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]],\n *   [[[-15, 42], [-14, 46], [-12, 41], [-17, 44], [-15, 42]]],\n * ]);\n *\n * //=polygons\n */\nexport function polygons(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    return featureCollection(coordinates.map(function (coords) {\n        return polygon(coords, properties);\n    }), options);\n}\n/**\n * Creates a {@link LineString} {@link Feature} from an Array of Positions.\n *\n * @name lineString\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<LineString>} LineString Feature\n * @example\n * var linestring1 = turf.lineString([[-24, 63], [-23, 60], [-25, 65], [-20, 69]], {name: 'line 1'});\n * var linestring2 = turf.lineString([[-14, 43], [-13, 40], [-15, 45], [-10, 49]], {name: 'line 2'});\n *\n * //=linestring1\n * //=linestring2\n */\nexport function lineString(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    if (coordinates.length < 2) {\n        throw new Error(\"coordinates must be an array of two or more positions\");\n    }\n    var geom = {\n        type: \"LineString\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\n/**\n * Creates a {@link LineString} {@link FeatureCollection} from an Array of LineString coordinates.\n *\n * @name lineStrings\n * @param {Array<Array<Array<number>>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north]\n * associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<LineString>} LineString FeatureCollection\n * @example\n * var linestrings = turf.lineStrings([\n *   [[-24, 63], [-23, 60], [-25, 65], [-20, 69]],\n *   [[-14, 43], [-13, 40], [-15, 45], [-10, 49]]\n * ]);\n *\n * //=linestrings\n */\nexport function lineStrings(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    return featureCollection(coordinates.map(function (coords) {\n        return lineString(coords, properties);\n    }), options);\n}\n/**\n * Takes one or more {@link Feature|Features} and creates a {@link FeatureCollection}.\n *\n * @name featureCollection\n * @param {Feature[]} features input features\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {FeatureCollection} FeatureCollection of Features\n * @example\n * var locationA = turf.point([-75.343, 39.984], {name: 'Location A'});\n * var locationB = turf.point([-75.833, 39.284], {name: 'Location B'});\n * var locationC = turf.point([-75.534, 39.123], {name: 'Location C'});\n *\n * var collection = turf.featureCollection([\n *   locationA,\n *   locationB,\n *   locationC\n * ]);\n *\n * //=collection\n */\nexport function featureCollection(features, options) {\n    if (options === void 0) { options = {}; }\n    var fc = { type: \"FeatureCollection\" };\n    if (options.id) {\n        fc.id = options.id;\n    }\n    if (options.bbox) {\n        fc.bbox = options.bbox;\n    }\n    fc.features = features;\n    return fc;\n}\n/**\n * Creates a {@link Feature<MultiLineString>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiLineString\n * @param {Array<Array<Array<number>>>} coordinates an array of LineStrings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiLineString>} a MultiLineString feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiLine = turf.multiLineString([[[0,0],[10,10]]]);\n *\n * //=multiLine\n */\nexport function multiLineString(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"MultiLineString\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\n/**\n * Creates a {@link Feature<MultiPoint>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPoint\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPoint>} a MultiPoint feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPt = turf.multiPoint([[0,0],[10,10]]);\n *\n * //=multiPt\n */\nexport function multiPoint(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"MultiPoint\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\n/**\n * Creates a {@link Feature<MultiPolygon>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPolygon\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygons\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPolygon>} a multipolygon feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPoly = turf.multiPolygon([[[[0,0],[0,10],[10,10],[10,0],[0,0]]]]);\n *\n * //=multiPoly\n *\n */\nexport function multiPolygon(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"MultiPolygon\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\n/**\n * Creates a {@link Feature<GeometryCollection>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name geometryCollection\n * @param {Array<Geometry>} geometries an array of GeoJSON Geometries\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<GeometryCollection>} a GeoJSON GeometryCollection Feature\n * @example\n * var pt = turf.geometry(\"Point\", [100, 0]);\n * var line = turf.geometry(\"LineString\", [[101, 0], [102, 1]]);\n * var collection = turf.geometryCollection([pt, line]);\n *\n * // => collection\n */\nexport function geometryCollection(geometries, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"GeometryCollection\",\n        geometries: geometries,\n    };\n    return feature(geom, properties, options);\n}\n/**\n * Round number to precision\n *\n * @param {number} num Number\n * @param {number} [precision=0] Precision\n * @returns {number} rounded number\n * @example\n * turf.round(120.4321)\n * //=120\n *\n * turf.round(120.4321, 2)\n * //=120.43\n */\nexport function round(num, precision) {\n    if (precision === void 0) { precision = 0; }\n    if (precision && !(precision >= 0)) {\n        throw new Error(\"precision must be a positive number\");\n    }\n    var multiplier = Math.pow(10, precision || 0);\n    return Math.round(num * multiplier) / multiplier;\n}\n/**\n * Convert a distance measurement (assuming a spherical Earth) from radians to a more friendly unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name radiansToLength\n * @param {number} radians in radians across the sphere\n * @param {string} [units=\"kilometers\"] can be degrees, radians, miles, inches, yards, metres,\n * meters, kilometres, kilometers.\n * @returns {number} distance\n */\nexport function radiansToLength(radians, units) {\n    if (units === void 0) { units = \"kilometers\"; }\n    var factor = factors[units];\n    if (!factor) {\n        throw new Error(units + \" units is invalid\");\n    }\n    return radians * factor;\n}\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into radians\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name lengthToRadians\n * @param {number} distance in real units\n * @param {string} [units=\"kilometers\"] can be degrees, radians, miles, inches, yards, metres,\n * meters, kilometres, kilometers.\n * @returns {number} radians\n */\nexport function lengthToRadians(distance, units) {\n    if (units === void 0) { units = \"kilometers\"; }\n    var factor = factors[units];\n    if (!factor) {\n        throw new Error(units + \" units is invalid\");\n    }\n    return distance / factor;\n}\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into degrees\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, centimeters, kilometres, feet\n *\n * @name lengthToDegrees\n * @param {number} distance in real units\n * @param {string} [units=\"kilometers\"] can be degrees, radians, miles, inches, yards, metres,\n * meters, kilometres, kilometers.\n * @returns {number} degrees\n */\nexport function lengthToDegrees(distance, units) {\n    return radiansToDegrees(lengthToRadians(distance, units));\n}\n/**\n * Converts any bearing angle from the north line direction (positive clockwise)\n * and returns an angle between 0-360 degrees (positive clockwise), 0 being the north line\n *\n * @name bearingToAzimuth\n * @param {number} bearing angle, between -180 and +180 degrees\n * @returns {number} angle between 0 and 360 degrees\n */\nexport function bearingToAzimuth(bearing) {\n    var angle = bearing % 360;\n    if (angle < 0) {\n        angle += 360;\n    }\n    return angle;\n}\n/**\n * Converts an angle in radians to degrees\n *\n * @name radiansToDegrees\n * @param {number} radians angle in radians\n * @returns {number} degrees between 0 and 360 degrees\n */\nexport function radiansToDegrees(radians) {\n    var degrees = radians % (2 * Math.PI);\n    return (degrees * 180) / Math.PI;\n}\n/**\n * Converts an angle in degrees to radians\n *\n * @name degreesToRadians\n * @param {number} degrees angle between 0 and 360 degrees\n * @returns {number} angle in radians\n */\nexport function degreesToRadians(degrees) {\n    var radians = degrees % 360;\n    return (radians * Math.PI) / 180;\n}\n/**\n * Converts a length to the requested unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @param {number} length to be converted\n * @param {Units} [originalUnit=\"kilometers\"] of the length\n * @param {Units} [finalUnit=\"kilometers\"] returned unit\n * @returns {number} the converted length\n */\nexport function convertLength(length, originalUnit, finalUnit) {\n    if (originalUnit === void 0) { originalUnit = \"kilometers\"; }\n    if (finalUnit === void 0) { finalUnit = \"kilometers\"; }\n    if (!(length >= 0)) {\n        throw new Error(\"length must be a positive number\");\n    }\n    return radiansToLength(lengthToRadians(length, originalUnit), finalUnit);\n}\n/**\n * Converts a area to the requested unit.\n * Valid units: kilometers, kilometres, meters, metres, centimetres, millimeters, acres, miles, yards, feet, inches, hectares\n * @param {number} area to be converted\n * @param {Units} [originalUnit=\"meters\"] of the distance\n * @param {Units} [finalUnit=\"kilometers\"] returned unit\n * @returns {number} the converted area\n */\nexport function convertArea(area, originalUnit, finalUnit) {\n    if (originalUnit === void 0) { originalUnit = \"meters\"; }\n    if (finalUnit === void 0) { finalUnit = \"kilometers\"; }\n    if (!(area >= 0)) {\n        throw new Error(\"area must be a positive number\");\n    }\n    var startFactor = areaFactors[originalUnit];\n    if (!startFactor) {\n        throw new Error(\"invalid original units\");\n    }\n    var finalFactor = areaFactors[finalUnit];\n    if (!finalFactor) {\n        throw new Error(\"invalid final units\");\n    }\n    return (area / startFactor) * finalFactor;\n}\n/**\n * isNumber\n *\n * @param {*} num Number to validate\n * @returns {boolean} true/false\n * @example\n * turf.isNumber(123)\n * //=true\n * turf.isNumber('foo')\n * //=false\n */\nexport function isNumber(num) {\n    return !isNaN(num) && num !== null && !Array.isArray(num);\n}\n/**\n * isObject\n *\n * @param {*} input variable to validate\n * @returns {boolean} true/false\n * @example\n * turf.isObject({elevation: 10})\n * //=true\n * turf.isObject('foo')\n * //=false\n */\nexport function isObject(input) {\n    return !!input && input.constructor === Object;\n}\n/**\n * Validate BBox\n *\n * @private\n * @param {Array<number>} bbox BBox to validate\n * @returns {void}\n * @throws Error if BBox is not valid\n * @example\n * validateBBox([-180, -40, 110, 50])\n * //=OK\n * validateBBox([-180, -40])\n * //=Error\n * validateBBox('Foo')\n * //=Error\n * validateBBox(5)\n * //=Error\n * validateBBox(null)\n * //=Error\n * validateBBox(undefined)\n * //=Error\n */\nexport function validateBBox(bbox) {\n    if (!bbox) {\n        throw new Error(\"bbox is required\");\n    }\n    if (!Array.isArray(bbox)) {\n        throw new Error(\"bbox must be an Array\");\n    }\n    if (bbox.length !== 4 && bbox.length !== 6) {\n        throw new Error(\"bbox must be an Array of 4 or 6 numbers\");\n    }\n    bbox.forEach(function (num) {\n        if (!isNumber(num)) {\n            throw new Error(\"bbox must only contain numbers\");\n        }\n    });\n}\n/**\n * Validate Id\n *\n * @private\n * @param {string|number} id Id to validate\n * @returns {void}\n * @throws Error if Id is not valid\n * @example\n * validateId([-180, -40, 110, 50])\n * //=Error\n * validateId([-180, -40])\n * //=Error\n * validateId('Foo')\n * //=OK\n * validateId(5)\n * //=OK\n * validateId(null)\n * //=Error\n * validateId(undefined)\n * //=Error\n */\nexport function validateId(id) {\n    if (!id) {\n        throw new Error(\"id is required\");\n    }\n    if ([\"string\", \"number\"].indexOf(typeof id) === -1) {\n        throw new Error(\"id must be a number or a string\");\n    }\n}\n","import { isNumber, } from \"@turf/helpers\";\n/**\n * Unwrap a coordinate from a Point Feature, Geometry or a single coordinate.\n *\n * @name getCoord\n * @param {Array<number>|Geometry<Point>|Feature<Point>} coord GeoJSON Point or an Array of numbers\n * @returns {Array<number>} coordinates\n * @example\n * var pt = turf.point([10, 10]);\n *\n * var coord = turf.getCoord(pt);\n * //= [10, 10]\n */\nexport function getCoord(coord) {\n    if (!coord) {\n        throw new Error(\"coord is required\");\n    }\n    if (!Array.isArray(coord)) {\n        if (coord.type === \"Feature\" &&\n            coord.geometry !== null &&\n            coord.geometry.type === \"Point\") {\n            return coord.geometry.coordinates;\n        }\n        if (coord.type === \"Point\") {\n            return coord.coordinates;\n        }\n    }\n    if (Array.isArray(coord) &&\n        coord.length >= 2 &&\n        !Array.isArray(coord[0]) &&\n        !Array.isArray(coord[1])) {\n        return coord;\n    }\n    throw new Error(\"coord must be GeoJSON Point or an Array of numbers\");\n}\n/**\n * Unwrap coordinates from a Feature, Geometry Object or an Array\n *\n * @name getCoords\n * @param {Array<any>|Geometry|Feature} coords Feature, Geometry Object or an Array\n * @returns {Array<any>} coordinates\n * @example\n * var poly = turf.polygon([[[119.32, -8.7], [119.55, -8.69], [119.51, -8.54], [119.32, -8.7]]]);\n *\n * var coords = turf.getCoords(poly);\n * //= [[[119.32, -8.7], [119.55, -8.69], [119.51, -8.54], [119.32, -8.7]]]\n */\nexport function getCoords(coords) {\n    if (Array.isArray(coords)) {\n        return coords;\n    }\n    // Feature\n    if (coords.type === \"Feature\") {\n        if (coords.geometry !== null) {\n            return coords.geometry.coordinates;\n        }\n    }\n    else {\n        // Geometry\n        if (coords.coordinates) {\n            return coords.coordinates;\n        }\n    }\n    throw new Error(\"coords must be GeoJSON Feature, Geometry Object or an Array\");\n}\n/**\n * Checks if coordinates contains a number\n *\n * @name containsNumber\n * @param {Array<any>} coordinates GeoJSON Coordinates\n * @returns {boolean} true if Array contains a number\n */\nexport function containsNumber(coordinates) {\n    if (coordinates.length > 1 &&\n        isNumber(coordinates[0]) &&\n        isNumber(coordinates[1])) {\n        return true;\n    }\n    if (Array.isArray(coordinates[0]) && coordinates[0].length) {\n        return containsNumber(coordinates[0]);\n    }\n    throw new Error(\"coordinates must only contain numbers\");\n}\n/**\n * Enforce expectations about types of GeoJSON objects for Turf.\n *\n * @name geojsonType\n * @param {GeoJSON} value any GeoJSON object\n * @param {string} type expected GeoJSON type\n * @param {string} name name of calling function\n * @throws {Error} if value is not the expected type.\n */\nexport function geojsonType(value, type, name) {\n    if (!type || !name) {\n        throw new Error(\"type and name required\");\n    }\n    if (!value || value.type !== type) {\n        throw new Error(\"Invalid input to \" +\n            name +\n            \": must be a \" +\n            type +\n            \", given \" +\n            value.type);\n    }\n}\n/**\n * Enforce expectations about types of {@link Feature} inputs for Turf.\n * Internally this uses {@link geojsonType} to judge geometry types.\n *\n * @name featureOf\n * @param {Feature} feature a feature with an expected geometry type\n * @param {string} type expected GeoJSON type\n * @param {string} name name of calling function\n * @throws {Error} error if value is not the expected type.\n */\nexport function featureOf(feature, type, name) {\n    if (!feature) {\n        throw new Error(\"No feature passed\");\n    }\n    if (!name) {\n        throw new Error(\".featureOf() requires a name\");\n    }\n    if (!feature || feature.type !== \"Feature\" || !feature.geometry) {\n        throw new Error(\"Invalid input to \" + name + \", Feature with geometry required\");\n    }\n    if (!feature.geometry || feature.geometry.type !== type) {\n        throw new Error(\"Invalid input to \" +\n            name +\n            \": must be a \" +\n            type +\n            \", given \" +\n            feature.geometry.type);\n    }\n}\n/**\n * Enforce expectations about types of {@link FeatureCollection} inputs for Turf.\n * Internally this uses {@link geojsonType} to judge geometry types.\n *\n * @name collectionOf\n * @param {FeatureCollection} featureCollection a FeatureCollection for which features will be judged\n * @param {string} type expected GeoJSON type\n * @param {string} name name of calling function\n * @throws {Error} if value is not the expected type.\n */\nexport function collectionOf(featureCollection, type, name) {\n    if (!featureCollection) {\n        throw new Error(\"No featureCollection passed\");\n    }\n    if (!name) {\n        throw new Error(\".collectionOf() requires a name\");\n    }\n    if (!featureCollection || featureCollection.type !== \"FeatureCollection\") {\n        throw new Error(\"Invalid input to \" + name + \", FeatureCollection required\");\n    }\n    for (var _i = 0, _a = featureCollection.features; _i < _a.length; _i++) {\n        var feature = _a[_i];\n        if (!feature || feature.type !== \"Feature\" || !feature.geometry) {\n            throw new Error(\"Invalid input to \" + name + \", Feature with geometry required\");\n        }\n        if (!feature.geometry || feature.geometry.type !== type) {\n            throw new Error(\"Invalid input to \" +\n                name +\n                \": must be a \" +\n                type +\n                \", given \" +\n                feature.geometry.type);\n        }\n    }\n}\n/**\n * Get Geometry from Feature or Geometry Object\n *\n * @param {Feature|Geometry} geojson GeoJSON Feature or Geometry Object\n * @returns {Geometry|null} GeoJSON Geometry Object\n * @throws {Error} if geojson is not a Feature or Geometry Object\n * @example\n * var point = {\n *   \"type\": \"Feature\",\n *   \"properties\": {},\n *   \"geometry\": {\n *     \"type\": \"Point\",\n *     \"coordinates\": [110, 40]\n *   }\n * }\n * var geom = turf.getGeom(point)\n * //={\"type\": \"Point\", \"coordinates\": [110, 40]}\n */\nexport function getGeom(geojson) {\n    if (geojson.type === \"Feature\") {\n        return geojson.geometry;\n    }\n    return geojson;\n}\n/**\n * Get GeoJSON object's type, Geometry type is prioritize.\n *\n * @param {GeoJSON} geojson GeoJSON object\n * @param {string} [name=\"geojson\"] name of the variable to display in error message (unused)\n * @returns {string} GeoJSON type\n * @example\n * var point = {\n *   \"type\": \"Feature\",\n *   \"properties\": {},\n *   \"geometry\": {\n *     \"type\": \"Point\",\n *     \"coordinates\": [110, 40]\n *   }\n * }\n * var geom = turf.getType(point)\n * //=\"Point\"\n */\nexport function getType(geojson, _name) {\n    if (geojson.type === \"FeatureCollection\") {\n        return \"FeatureCollection\";\n    }\n    if (geojson.type === \"GeometryCollection\") {\n        return \"GeometryCollection\";\n    }\n    if (geojson.type === \"Feature\" && geojson.geometry !== null) {\n        return geojson.geometry.type;\n    }\n    return geojson.type;\n}\n","import { getCoords } from \"@turf/invariant\";\n/**\n * Takes a ring and return true or false whether or not the ring is clockwise or counter-clockwise.\n *\n * @name booleanClockwise\n * @param {Feature<LineString>|LineString|Array<Array<number>>} line to be evaluated\n * @returns {boolean} true/false\n * @example\n * var clockwiseRing = turf.lineString([[0,0],[1,1],[1,0],[0,0]]);\n * var counterClockwiseRing = turf.lineString([[0,0],[1,0],[1,1],[0,0]]);\n *\n * turf.booleanClockwise(clockwiseRing)\n * //=true\n * turf.booleanClockwise(counterClockwiseRing)\n * //=false\n */\nexport default function booleanClockwise(line) {\n    var ring = getCoords(line);\n    var sum = 0;\n    var i = 1;\n    var prev;\n    var cur;\n    while (i < ring.length) {\n        prev = cur || ring[0];\n        cur = ring[i];\n        sum += (cur[0] - prev[0]) * (cur[1] + prev[1]);\n        i++;\n    }\n    return sum > 0;\n}\n","import { feature, lineString, isObject, point } from '@turf/helpers';\n\n/**\n * Callback for coordEach\n *\n * @callback coordEachCallback\n * @param {Array<number>} currentCoord The current coordinate being processed.\n * @param {number} coordIndex The current index of the coordinate being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n */\n\n/**\n * Iterate over coordinates in any GeoJSON object, similar to Array.forEach()\n *\n * @name coordEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentCoord, coordIndex, featureIndex, multiFeatureIndex)\n * @param {boolean} [excludeWrapCoord=false] whether or not to include the final coordinate of LinearRings that wraps the ring in its iteration.\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {\"foo\": \"bar\"}),\n *   turf.point([36, 53], {\"hello\": \"world\"})\n * ]);\n *\n * turf.coordEach(features, function (currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=currentCoord\n *   //=coordIndex\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n * });\n */\nfunction coordEach(geojson, callback, excludeWrapCoord) {\n  // Handles null Geometry -- Skips this GeoJSON\n  if (geojson === null) return;\n  var j,\n    k,\n    l,\n    geometry,\n    stopG,\n    coords,\n    geometryMaybeCollection,\n    wrapShrink = 0,\n    coordIndex = 0,\n    isGeometryCollection,\n    type = geojson.type,\n    isFeatureCollection = type === \"FeatureCollection\",\n    isFeature = type === \"Feature\",\n    stop = isFeatureCollection ? geojson.features.length : 1;\n\n  // This logic may look a little weird. The reason why it is that way\n  // is because it's trying to be fast. GeoJSON supports multiple kinds\n  // of objects at its root: FeatureCollection, Features, Geometries.\n  // This function has the responsibility of handling all of them, and that\n  // means that some of the `for` loops you see below actually just don't apply\n  // to certain inputs. For instance, if you give this just a\n  // Point geometry, then both loops are short-circuited and all we do\n  // is gradually rename the input until it's called 'geometry'.\n  //\n  // This also aims to allocate as few resources as possible: just a\n  // few numbers and booleans, rather than any temporary arrays as would\n  // be required with the normalization approach.\n  for (var featureIndex = 0; featureIndex < stop; featureIndex++) {\n    geometryMaybeCollection = isFeatureCollection\n      ? geojson.features[featureIndex].geometry\n      : isFeature\n      ? geojson.geometry\n      : geojson;\n    isGeometryCollection = geometryMaybeCollection\n      ? geometryMaybeCollection.type === \"GeometryCollection\"\n      : false;\n    stopG = isGeometryCollection\n      ? geometryMaybeCollection.geometries.length\n      : 1;\n\n    for (var geomIndex = 0; geomIndex < stopG; geomIndex++) {\n      var multiFeatureIndex = 0;\n      var geometryIndex = 0;\n      geometry = isGeometryCollection\n        ? geometryMaybeCollection.geometries[geomIndex]\n        : geometryMaybeCollection;\n\n      // Handles null Geometry -- Skips this geometry\n      if (geometry === null) continue;\n      coords = geometry.coordinates;\n      var geomType = geometry.type;\n\n      wrapShrink =\n        excludeWrapCoord &&\n        (geomType === \"Polygon\" || geomType === \"MultiPolygon\")\n          ? 1\n          : 0;\n\n      switch (geomType) {\n        case null:\n          break;\n        case \"Point\":\n          if (\n            callback(\n              coords,\n              coordIndex,\n              featureIndex,\n              multiFeatureIndex,\n              geometryIndex\n            ) === false\n          )\n            return false;\n          coordIndex++;\n          multiFeatureIndex++;\n          break;\n        case \"LineString\":\n        case \"MultiPoint\":\n          for (j = 0; j < coords.length; j++) {\n            if (\n              callback(\n                coords[j],\n                coordIndex,\n                featureIndex,\n                multiFeatureIndex,\n                geometryIndex\n              ) === false\n            )\n              return false;\n            coordIndex++;\n            if (geomType === \"MultiPoint\") multiFeatureIndex++;\n          }\n          if (geomType === \"LineString\") multiFeatureIndex++;\n          break;\n        case \"Polygon\":\n        case \"MultiLineString\":\n          for (j = 0; j < coords.length; j++) {\n            for (k = 0; k < coords[j].length - wrapShrink; k++) {\n              if (\n                callback(\n                  coords[j][k],\n                  coordIndex,\n                  featureIndex,\n                  multiFeatureIndex,\n                  geometryIndex\n                ) === false\n              )\n                return false;\n              coordIndex++;\n            }\n            if (geomType === \"MultiLineString\") multiFeatureIndex++;\n            if (geomType === \"Polygon\") geometryIndex++;\n          }\n          if (geomType === \"Polygon\") multiFeatureIndex++;\n          break;\n        case \"MultiPolygon\":\n          for (j = 0; j < coords.length; j++) {\n            geometryIndex = 0;\n            for (k = 0; k < coords[j].length; k++) {\n              for (l = 0; l < coords[j][k].length - wrapShrink; l++) {\n                if (\n                  callback(\n                    coords[j][k][l],\n                    coordIndex,\n                    featureIndex,\n                    multiFeatureIndex,\n                    geometryIndex\n                  ) === false\n                )\n                  return false;\n                coordIndex++;\n              }\n              geometryIndex++;\n            }\n            multiFeatureIndex++;\n          }\n          break;\n        case \"GeometryCollection\":\n          for (j = 0; j < geometry.geometries.length; j++)\n            if (\n              coordEach(geometry.geometries[j], callback, excludeWrapCoord) ===\n              false\n            )\n              return false;\n          break;\n        default:\n          throw new Error(\"Unknown Geometry Type\");\n      }\n    }\n  }\n}\n\n/**\n * Callback for coordReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback coordReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Array<number>} currentCoord The current coordinate being processed.\n * @param {number} coordIndex The current index of the coordinate being processed.\n * Starts at index 0, if an initialValue is provided, and at index 1 otherwise.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n */\n\n/**\n * Reduce coordinates in any GeoJSON object, similar to Array.reduce()\n *\n * @name coordReduce\n * @param {FeatureCollection|Geometry|Feature} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentCoord, coordIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @param {boolean} [excludeWrapCoord=false] whether or not to include the final coordinate of LinearRings that wraps the ring in its iteration.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {\"foo\": \"bar\"}),\n *   turf.point([36, 53], {\"hello\": \"world\"})\n * ]);\n *\n * turf.coordReduce(features, function (previousValue, currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=previousValue\n *   //=currentCoord\n *   //=coordIndex\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n *   return currentCoord;\n * });\n */\nfunction coordReduce(geojson, callback, initialValue, excludeWrapCoord) {\n  var previousValue = initialValue;\n  coordEach(\n    geojson,\n    function (\n      currentCoord,\n      coordIndex,\n      featureIndex,\n      multiFeatureIndex,\n      geometryIndex\n    ) {\n      if (coordIndex === 0 && initialValue === undefined)\n        previousValue = currentCoord;\n      else\n        previousValue = callback(\n          previousValue,\n          currentCoord,\n          coordIndex,\n          featureIndex,\n          multiFeatureIndex,\n          geometryIndex\n        );\n    },\n    excludeWrapCoord\n  );\n  return previousValue;\n}\n\n/**\n * Callback for propEach\n *\n * @callback propEachCallback\n * @param {Object} currentProperties The current Properties being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Iterate over properties in any GeoJSON object, similar to Array.forEach()\n *\n * @name propEach\n * @param {FeatureCollection|Feature} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentProperties, featureIndex)\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.propEach(features, function (currentProperties, featureIndex) {\n *   //=currentProperties\n *   //=featureIndex\n * });\n */\nfunction propEach(geojson, callback) {\n  var i;\n  switch (geojson.type) {\n    case \"FeatureCollection\":\n      for (i = 0; i < geojson.features.length; i++) {\n        if (callback(geojson.features[i].properties, i) === false) break;\n      }\n      break;\n    case \"Feature\":\n      callback(geojson.properties, 0);\n      break;\n  }\n}\n\n/**\n * Callback for propReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback propReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {*} currentProperties The current Properties being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Reduce properties in any GeoJSON object into a single value,\n * similar to how Array.reduce works. However, in this case we lazily run\n * the reduction, so an array of all properties is unnecessary.\n *\n * @name propReduce\n * @param {FeatureCollection|Feature} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentProperties, featureIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.propReduce(features, function (previousValue, currentProperties, featureIndex) {\n *   //=previousValue\n *   //=currentProperties\n *   //=featureIndex\n *   return currentProperties\n * });\n */\nfunction propReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  propEach(geojson, function (currentProperties, featureIndex) {\n    if (featureIndex === 0 && initialValue === undefined)\n      previousValue = currentProperties;\n    else\n      previousValue = callback(previousValue, currentProperties, featureIndex);\n  });\n  return previousValue;\n}\n\n/**\n * Callback for featureEach\n *\n * @callback featureEachCallback\n * @param {Feature<any>} currentFeature The current Feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Iterate over features in any GeoJSON object, similar to\n * Array.forEach.\n *\n * @name featureEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentFeature, featureIndex)\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {foo: 'bar'}),\n *   turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.featureEach(features, function (currentFeature, featureIndex) {\n *   //=currentFeature\n *   //=featureIndex\n * });\n */\nfunction featureEach(geojson, callback) {\n  if (geojson.type === \"Feature\") {\n    callback(geojson, 0);\n  } else if (geojson.type === \"FeatureCollection\") {\n    for (var i = 0; i < geojson.features.length; i++) {\n      if (callback(geojson.features[i], i) === false) break;\n    }\n  }\n}\n\n/**\n * Callback for featureReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback featureReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature} currentFeature The current Feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Reduce features in any GeoJSON object, similar to Array.reduce().\n *\n * @name featureReduce\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentFeature, featureIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {\"foo\": \"bar\"}),\n *   turf.point([36, 53], {\"hello\": \"world\"})\n * ]);\n *\n * turf.featureReduce(features, function (previousValue, currentFeature, featureIndex) {\n *   //=previousValue\n *   //=currentFeature\n *   //=featureIndex\n *   return currentFeature\n * });\n */\nfunction featureReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  featureEach(geojson, function (currentFeature, featureIndex) {\n    if (featureIndex === 0 && initialValue === undefined)\n      previousValue = currentFeature;\n    else previousValue = callback(previousValue, currentFeature, featureIndex);\n  });\n  return previousValue;\n}\n\n/**\n * Get all coordinates from any GeoJSON object.\n *\n * @name coordAll\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @returns {Array<Array<number>>} coordinate position array\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {foo: 'bar'}),\n *   turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * var coords = turf.coordAll(features);\n * //= [[26, 37], [36, 53]]\n */\nfunction coordAll(geojson) {\n  var coords = [];\n  coordEach(geojson, function (coord) {\n    coords.push(coord);\n  });\n  return coords;\n}\n\n/**\n * Callback for geomEach\n *\n * @callback geomEachCallback\n * @param {Geometry} currentGeometry The current Geometry being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {Object} featureProperties The current Feature Properties being processed.\n * @param {Array<number>} featureBBox The current Feature BBox being processed.\n * @param {number|string} featureId The current Feature Id being processed.\n */\n\n/**\n * Iterate over each geometry in any GeoJSON object, similar to Array.forEach()\n *\n * @name geomEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentGeometry, featureIndex, featureProperties, featureBBox, featureId)\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.geomEach(features, function (currentGeometry, featureIndex, featureProperties, featureBBox, featureId) {\n *   //=currentGeometry\n *   //=featureIndex\n *   //=featureProperties\n *   //=featureBBox\n *   //=featureId\n * });\n */\nfunction geomEach(geojson, callback) {\n  var i,\n    j,\n    g,\n    geometry,\n    stopG,\n    geometryMaybeCollection,\n    isGeometryCollection,\n    featureProperties,\n    featureBBox,\n    featureId,\n    featureIndex = 0,\n    isFeatureCollection = geojson.type === \"FeatureCollection\",\n    isFeature = geojson.type === \"Feature\",\n    stop = isFeatureCollection ? geojson.features.length : 1;\n\n  // This logic may look a little weird. The reason why it is that way\n  // is because it's trying to be fast. GeoJSON supports multiple kinds\n  // of objects at its root: FeatureCollection, Features, Geometries.\n  // This function has the responsibility of handling all of them, and that\n  // means that some of the `for` loops you see below actually just don't apply\n  // to certain inputs. For instance, if you give this just a\n  // Point geometry, then both loops are short-circuited and all we do\n  // is gradually rename the input until it's called 'geometry'.\n  //\n  // This also aims to allocate as few resources as possible: just a\n  // few numbers and booleans, rather than any temporary arrays as would\n  // be required with the normalization approach.\n  for (i = 0; i < stop; i++) {\n    geometryMaybeCollection = isFeatureCollection\n      ? geojson.features[i].geometry\n      : isFeature\n      ? geojson.geometry\n      : geojson;\n    featureProperties = isFeatureCollection\n      ? geojson.features[i].properties\n      : isFeature\n      ? geojson.properties\n      : {};\n    featureBBox = isFeatureCollection\n      ? geojson.features[i].bbox\n      : isFeature\n      ? geojson.bbox\n      : undefined;\n    featureId = isFeatureCollection\n      ? geojson.features[i].id\n      : isFeature\n      ? geojson.id\n      : undefined;\n    isGeometryCollection = geometryMaybeCollection\n      ? geometryMaybeCollection.type === \"GeometryCollection\"\n      : false;\n    stopG = isGeometryCollection\n      ? geometryMaybeCollection.geometries.length\n      : 1;\n\n    for (g = 0; g < stopG; g++) {\n      geometry = isGeometryCollection\n        ? geometryMaybeCollection.geometries[g]\n        : geometryMaybeCollection;\n\n      // Handle null Geometry\n      if (geometry === null) {\n        if (\n          callback(\n            null,\n            featureIndex,\n            featureProperties,\n            featureBBox,\n            featureId\n          ) === false\n        )\n          return false;\n        continue;\n      }\n      switch (geometry.type) {\n        case \"Point\":\n        case \"LineString\":\n        case \"MultiPoint\":\n        case \"Polygon\":\n        case \"MultiLineString\":\n        case \"MultiPolygon\": {\n          if (\n            callback(\n              geometry,\n              featureIndex,\n              featureProperties,\n              featureBBox,\n              featureId\n            ) === false\n          )\n            return false;\n          break;\n        }\n        case \"GeometryCollection\": {\n          for (j = 0; j < geometry.geometries.length; j++) {\n            if (\n              callback(\n                geometry.geometries[j],\n                featureIndex,\n                featureProperties,\n                featureBBox,\n                featureId\n              ) === false\n            )\n              return false;\n          }\n          break;\n        }\n        default:\n          throw new Error(\"Unknown Geometry Type\");\n      }\n    }\n    // Only increase `featureIndex` per each feature\n    featureIndex++;\n  }\n}\n\n/**\n * Callback for geomReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback geomReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Geometry} currentGeometry The current Geometry being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {Object} featureProperties The current Feature Properties being processed.\n * @param {Array<number>} featureBBox The current Feature BBox being processed.\n * @param {number|string} featureId The current Feature Id being processed.\n */\n\n/**\n * Reduce geometry in any GeoJSON object, similar to Array.reduce().\n *\n * @name geomReduce\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentGeometry, featureIndex, featureProperties, featureBBox, featureId)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.geomReduce(features, function (previousValue, currentGeometry, featureIndex, featureProperties, featureBBox, featureId) {\n *   //=previousValue\n *   //=currentGeometry\n *   //=featureIndex\n *   //=featureProperties\n *   //=featureBBox\n *   //=featureId\n *   return currentGeometry\n * });\n */\nfunction geomReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  geomEach(\n    geojson,\n    function (\n      currentGeometry,\n      featureIndex,\n      featureProperties,\n      featureBBox,\n      featureId\n    ) {\n      if (featureIndex === 0 && initialValue === undefined)\n        previousValue = currentGeometry;\n      else\n        previousValue = callback(\n          previousValue,\n          currentGeometry,\n          featureIndex,\n          featureProperties,\n          featureBBox,\n          featureId\n        );\n    }\n  );\n  return previousValue;\n}\n\n/**\n * Callback for flattenEach\n *\n * @callback flattenEachCallback\n * @param {Feature} currentFeature The current flattened feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n */\n\n/**\n * Iterate over flattened features in any GeoJSON object, similar to\n * Array.forEach.\n *\n * @name flattenEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentFeature, featureIndex, multiFeatureIndex)\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.multiPoint([[40, 30], [36, 53]], {hello: 'world'})\n * ]);\n *\n * turf.flattenEach(features, function (currentFeature, featureIndex, multiFeatureIndex) {\n *   //=currentFeature\n *   //=featureIndex\n *   //=multiFeatureIndex\n * });\n */\nfunction flattenEach(geojson, callback) {\n  geomEach(geojson, function (geometry, featureIndex, properties, bbox, id) {\n    // Callback for single geometry\n    var type = geometry === null ? null : geometry.type;\n    switch (type) {\n      case null:\n      case \"Point\":\n      case \"LineString\":\n      case \"Polygon\":\n        if (\n          callback(\n            feature(geometry, properties, { bbox: bbox, id: id }),\n            featureIndex,\n            0\n          ) === false\n        )\n          return false;\n        return;\n    }\n\n    var geomType;\n\n    // Callback for multi-geometry\n    switch (type) {\n      case \"MultiPoint\":\n        geomType = \"Point\";\n        break;\n      case \"MultiLineString\":\n        geomType = \"LineString\";\n        break;\n      case \"MultiPolygon\":\n        geomType = \"Polygon\";\n        break;\n    }\n\n    for (\n      var multiFeatureIndex = 0;\n      multiFeatureIndex < geometry.coordinates.length;\n      multiFeatureIndex++\n    ) {\n      var coordinate = geometry.coordinates[multiFeatureIndex];\n      var geom = {\n        type: geomType,\n        coordinates: coordinate,\n      };\n      if (\n        callback(feature(geom, properties), featureIndex, multiFeatureIndex) ===\n        false\n      )\n        return false;\n    }\n  });\n}\n\n/**\n * Callback for flattenReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback flattenReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature} currentFeature The current Feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n */\n\n/**\n * Reduce flattened features in any GeoJSON object, similar to Array.reduce().\n *\n * @name flattenReduce\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentFeature, featureIndex, multiFeatureIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.multiPoint([[40, 30], [36, 53]], {hello: 'world'})\n * ]);\n *\n * turf.flattenReduce(features, function (previousValue, currentFeature, featureIndex, multiFeatureIndex) {\n *   //=previousValue\n *   //=currentFeature\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   return currentFeature\n * });\n */\nfunction flattenReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  flattenEach(\n    geojson,\n    function (currentFeature, featureIndex, multiFeatureIndex) {\n      if (\n        featureIndex === 0 &&\n        multiFeatureIndex === 0 &&\n        initialValue === undefined\n      )\n        previousValue = currentFeature;\n      else\n        previousValue = callback(\n          previousValue,\n          currentFeature,\n          featureIndex,\n          multiFeatureIndex\n        );\n    }\n  );\n  return previousValue;\n}\n\n/**\n * Callback for segmentEach\n *\n * @callback segmentEachCallback\n * @param {Feature<LineString>} currentSegment The current Segment being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n * @param {number} segmentIndex The current index of the Segment being processed.\n * @returns {void}\n */\n\n/**\n * Iterate over 2-vertex line segment in any GeoJSON object, similar to Array.forEach()\n * (Multi)Point geometries do not contain segments therefore they are ignored during this operation.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON\n * @param {Function} callback a method that takes (currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex)\n * @returns {void}\n * @example\n * var polygon = turf.polygon([[[-50, 5], [-40, -10], [-50, -10], [-40, 5], [-50, 5]]]);\n *\n * // Iterate over GeoJSON by 2-vertex segments\n * turf.segmentEach(polygon, function (currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex) {\n *   //=currentSegment\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n *   //=segmentIndex\n * });\n *\n * // Calculate the total number of segments\n * var total = 0;\n * turf.segmentEach(polygon, function () {\n *     total++;\n * });\n */\nfunction segmentEach(geojson, callback) {\n  flattenEach(geojson, function (feature, featureIndex, multiFeatureIndex) {\n    var segmentIndex = 0;\n\n    // Exclude null Geometries\n    if (!feature.geometry) return;\n    // (Multi)Point geometries do not contain segments therefore they are ignored during this operation.\n    var type = feature.geometry.type;\n    if (type === \"Point\" || type === \"MultiPoint\") return;\n\n    // Generate 2-vertex line segments\n    var previousCoords;\n    var previousFeatureIndex = 0;\n    var previousMultiIndex = 0;\n    var prevGeomIndex = 0;\n    if (\n      coordEach(\n        feature,\n        function (\n          currentCoord,\n          coordIndex,\n          featureIndexCoord,\n          multiPartIndexCoord,\n          geometryIndex\n        ) {\n          // Simulating a meta.coordReduce() since `reduce` operations cannot be stopped by returning `false`\n          if (\n            previousCoords === undefined ||\n            featureIndex > previousFeatureIndex ||\n            multiPartIndexCoord > previousMultiIndex ||\n            geometryIndex > prevGeomIndex\n          ) {\n            previousCoords = currentCoord;\n            previousFeatureIndex = featureIndex;\n            previousMultiIndex = multiPartIndexCoord;\n            prevGeomIndex = geometryIndex;\n            segmentIndex = 0;\n            return;\n          }\n          var currentSegment = lineString(\n            [previousCoords, currentCoord],\n            feature.properties\n          );\n          if (\n            callback(\n              currentSegment,\n              featureIndex,\n              multiFeatureIndex,\n              geometryIndex,\n              segmentIndex\n            ) === false\n          )\n            return false;\n          segmentIndex++;\n          previousCoords = currentCoord;\n        }\n      ) === false\n    )\n      return false;\n  });\n}\n\n/**\n * Callback for segmentReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback segmentReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature<LineString>} currentSegment The current Segment being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n * @param {number} segmentIndex The current index of the Segment being processed.\n */\n\n/**\n * Reduce 2-vertex line segment in any GeoJSON object, similar to Array.reduce()\n * (Multi)Point geometries do not contain segments therefore they are ignored during this operation.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON\n * @param {Function} callback a method that takes (previousValue, currentSegment, currentIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {void}\n * @example\n * var polygon = turf.polygon([[[-50, 5], [-40, -10], [-50, -10], [-40, 5], [-50, 5]]]);\n *\n * // Iterate over GeoJSON by 2-vertex segments\n * turf.segmentReduce(polygon, function (previousSegment, currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex) {\n *   //= previousSegment\n *   //= currentSegment\n *   //= featureIndex\n *   //= multiFeatureIndex\n *   //= geometryIndex\n *   //= segmentIndex\n *   return currentSegment\n * });\n *\n * // Calculate the total number of segments\n * var initialValue = 0\n * var total = turf.segmentReduce(polygon, function (previousValue) {\n *     previousValue++;\n *     return previousValue;\n * }, initialValue);\n */\nfunction segmentReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  var started = false;\n  segmentEach(\n    geojson,\n    function (\n      currentSegment,\n      featureIndex,\n      multiFeatureIndex,\n      geometryIndex,\n      segmentIndex\n    ) {\n      if (started === false && initialValue === undefined)\n        previousValue = currentSegment;\n      else\n        previousValue = callback(\n          previousValue,\n          currentSegment,\n          featureIndex,\n          multiFeatureIndex,\n          geometryIndex,\n          segmentIndex\n        );\n      started = true;\n    }\n  );\n  return previousValue;\n}\n\n/**\n * Callback for lineEach\n *\n * @callback lineEachCallback\n * @param {Feature<LineString>} currentLine The current LineString|LinearRing being processed\n * @param {number} featureIndex The current index of the Feature being processed\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed\n * @param {number} geometryIndex The current index of the Geometry being processed\n */\n\n/**\n * Iterate over line or ring coordinates in LineString, Polygon, MultiLineString, MultiPolygon Features or Geometries,\n * similar to Array.forEach.\n *\n * @name lineEach\n * @param {Geometry|Feature<LineString|Polygon|MultiLineString|MultiPolygon>} geojson object\n * @param {Function} callback a method that takes (currentLine, featureIndex, multiFeatureIndex, geometryIndex)\n * @example\n * var multiLine = turf.multiLineString([\n *   [[26, 37], [35, 45]],\n *   [[36, 53], [38, 50], [41, 55]]\n * ]);\n *\n * turf.lineEach(multiLine, function (currentLine, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=currentLine\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n * });\n */\nfunction lineEach(geojson, callback) {\n  // validation\n  if (!geojson) throw new Error(\"geojson is required\");\n\n  flattenEach(geojson, function (feature, featureIndex, multiFeatureIndex) {\n    if (feature.geometry === null) return;\n    var type = feature.geometry.type;\n    var coords = feature.geometry.coordinates;\n    switch (type) {\n      case \"LineString\":\n        if (callback(feature, featureIndex, multiFeatureIndex, 0, 0) === false)\n          return false;\n        break;\n      case \"Polygon\":\n        for (\n          var geometryIndex = 0;\n          geometryIndex < coords.length;\n          geometryIndex++\n        ) {\n          if (\n            callback(\n              lineString(coords[geometryIndex], feature.properties),\n              featureIndex,\n              multiFeatureIndex,\n              geometryIndex\n            ) === false\n          )\n            return false;\n        }\n        break;\n    }\n  });\n}\n\n/**\n * Callback for lineReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback lineReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature<LineString>} currentLine The current LineString|LinearRing being processed.\n * @param {number} featureIndex The current index of the Feature being processed\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed\n * @param {number} geometryIndex The current index of the Geometry being processed\n */\n\n/**\n * Reduce features in any GeoJSON object, similar to Array.reduce().\n *\n * @name lineReduce\n * @param {Geometry|Feature<LineString|Polygon|MultiLineString|MultiPolygon>} geojson object\n * @param {Function} callback a method that takes (previousValue, currentLine, featureIndex, multiFeatureIndex, geometryIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var multiPoly = turf.multiPolygon([\n *   turf.polygon([[[12,48],[2,41],[24,38],[12,48]], [[9,44],[13,41],[13,45],[9,44]]]),\n *   turf.polygon([[[5, 5], [0, 0], [2, 2], [4, 4], [5, 5]]])\n * ]);\n *\n * turf.lineReduce(multiPoly, function (previousValue, currentLine, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=previousValue\n *   //=currentLine\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n *   return currentLine\n * });\n */\nfunction lineReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  lineEach(\n    geojson,\n    function (currentLine, featureIndex, multiFeatureIndex, geometryIndex) {\n      if (featureIndex === 0 && initialValue === undefined)\n        previousValue = currentLine;\n      else\n        previousValue = callback(\n          previousValue,\n          currentLine,\n          featureIndex,\n          multiFeatureIndex,\n          geometryIndex\n        );\n    }\n  );\n  return previousValue;\n}\n\n/**\n * Finds a particular 2-vertex LineString Segment from a GeoJSON using `@turf/meta` indexes.\n *\n * Negative indexes are permitted.\n * Point & MultiPoint will always return null.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson Any GeoJSON Feature or Geometry\n * @param {Object} [options={}] Optional parameters\n * @param {number} [options.featureIndex=0] Feature Index\n * @param {number} [options.multiFeatureIndex=0] Multi-Feature Index\n * @param {number} [options.geometryIndex=0] Geometry Index\n * @param {number} [options.segmentIndex=0] Segment Index\n * @param {Object} [options.properties={}] Translate Properties to output LineString\n * @param {BBox} [options.bbox={}] Translate BBox to output LineString\n * @param {number|string} [options.id={}] Translate Id to output LineString\n * @returns {Feature<LineString>} 2-vertex GeoJSON Feature LineString\n * @example\n * var multiLine = turf.multiLineString([\n *     [[10, 10], [50, 30], [30, 40]],\n *     [[-10, -10], [-50, -30], [-30, -40]]\n * ]);\n *\n * // First Segment (defaults are 0)\n * turf.findSegment(multiLine);\n * // => Feature<LineString<[[10, 10], [50, 30]]>>\n *\n * // First Segment of 2nd Multi Feature\n * turf.findSegment(multiLine, {multiFeatureIndex: 1});\n * // => Feature<LineString<[[-10, -10], [-50, -30]]>>\n *\n * // Last Segment of Last Multi Feature\n * turf.findSegment(multiLine, {multiFeatureIndex: -1, segmentIndex: -1});\n * // => Feature<LineString<[[-50, -30], [-30, -40]]>>\n */\nfunction findSegment(geojson, options) {\n  // Optional Parameters\n  options = options || {};\n  if (!isObject(options)) throw new Error(\"options is invalid\");\n  var featureIndex = options.featureIndex || 0;\n  var multiFeatureIndex = options.multiFeatureIndex || 0;\n  var geometryIndex = options.geometryIndex || 0;\n  var segmentIndex = options.segmentIndex || 0;\n\n  // Find FeatureIndex\n  var properties = options.properties;\n  var geometry;\n\n  switch (geojson.type) {\n    case \"FeatureCollection\":\n      if (featureIndex < 0)\n        featureIndex = geojson.features.length + featureIndex;\n      properties = properties || geojson.features[featureIndex].properties;\n      geometry = geojson.features[featureIndex].geometry;\n      break;\n    case \"Feature\":\n      properties = properties || geojson.properties;\n      geometry = geojson.geometry;\n      break;\n    case \"Point\":\n    case \"MultiPoint\":\n      return null;\n    case \"LineString\":\n    case \"Polygon\":\n    case \"MultiLineString\":\n    case \"MultiPolygon\":\n      geometry = geojson;\n      break;\n    default:\n      throw new Error(\"geojson is invalid\");\n  }\n\n  // Find SegmentIndex\n  if (geometry === null) return null;\n  var coords = geometry.coordinates;\n  switch (geometry.type) {\n    case \"Point\":\n    case \"MultiPoint\":\n      return null;\n    case \"LineString\":\n      if (segmentIndex < 0) segmentIndex = coords.length + segmentIndex - 1;\n      return lineString(\n        [coords[segmentIndex], coords[segmentIndex + 1]],\n        properties,\n        options\n      );\n    case \"Polygon\":\n      if (geometryIndex < 0) geometryIndex = coords.length + geometryIndex;\n      if (segmentIndex < 0)\n        segmentIndex = coords[geometryIndex].length + segmentIndex - 1;\n      return lineString(\n        [\n          coords[geometryIndex][segmentIndex],\n          coords[geometryIndex][segmentIndex + 1],\n        ],\n        properties,\n        options\n      );\n    case \"MultiLineString\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (segmentIndex < 0)\n        segmentIndex = coords[multiFeatureIndex].length + segmentIndex - 1;\n      return lineString(\n        [\n          coords[multiFeatureIndex][segmentIndex],\n          coords[multiFeatureIndex][segmentIndex + 1],\n        ],\n        properties,\n        options\n      );\n    case \"MultiPolygon\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (geometryIndex < 0)\n        geometryIndex = coords[multiFeatureIndex].length + geometryIndex;\n      if (segmentIndex < 0)\n        segmentIndex =\n          coords[multiFeatureIndex][geometryIndex].length - segmentIndex - 1;\n      return lineString(\n        [\n          coords[multiFeatureIndex][geometryIndex][segmentIndex],\n          coords[multiFeatureIndex][geometryIndex][segmentIndex + 1],\n        ],\n        properties,\n        options\n      );\n  }\n  throw new Error(\"geojson is invalid\");\n}\n\n/**\n * Finds a particular Point from a GeoJSON using `@turf/meta` indexes.\n *\n * Negative indexes are permitted.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson Any GeoJSON Feature or Geometry\n * @param {Object} [options={}] Optional parameters\n * @param {number} [options.featureIndex=0] Feature Index\n * @param {number} [options.multiFeatureIndex=0] Multi-Feature Index\n * @param {number} [options.geometryIndex=0] Geometry Index\n * @param {number} [options.coordIndex=0] Coord Index\n * @param {Object} [options.properties={}] Translate Properties to output Point\n * @param {BBox} [options.bbox={}] Translate BBox to output Point\n * @param {number|string} [options.id={}] Translate Id to output Point\n * @returns {Feature<Point>} 2-vertex GeoJSON Feature Point\n * @example\n * var multiLine = turf.multiLineString([\n *     [[10, 10], [50, 30], [30, 40]],\n *     [[-10, -10], [-50, -30], [-30, -40]]\n * ]);\n *\n * // First Segment (defaults are 0)\n * turf.findPoint(multiLine);\n * // => Feature<Point<[10, 10]>>\n *\n * // First Segment of the 2nd Multi-Feature\n * turf.findPoint(multiLine, {multiFeatureIndex: 1});\n * // => Feature<Point<[-10, -10]>>\n *\n * // Last Segment of last Multi-Feature\n * turf.findPoint(multiLine, {multiFeatureIndex: -1, coordIndex: -1});\n * // => Feature<Point<[-30, -40]>>\n */\nfunction findPoint(geojson, options) {\n  // Optional Parameters\n  options = options || {};\n  if (!isObject(options)) throw new Error(\"options is invalid\");\n  var featureIndex = options.featureIndex || 0;\n  var multiFeatureIndex = options.multiFeatureIndex || 0;\n  var geometryIndex = options.geometryIndex || 0;\n  var coordIndex = options.coordIndex || 0;\n\n  // Find FeatureIndex\n  var properties = options.properties;\n  var geometry;\n\n  switch (geojson.type) {\n    case \"FeatureCollection\":\n      if (featureIndex < 0)\n        featureIndex = geojson.features.length + featureIndex;\n      properties = properties || geojson.features[featureIndex].properties;\n      geometry = geojson.features[featureIndex].geometry;\n      break;\n    case \"Feature\":\n      properties = properties || geojson.properties;\n      geometry = geojson.geometry;\n      break;\n    case \"Point\":\n    case \"MultiPoint\":\n      return null;\n    case \"LineString\":\n    case \"Polygon\":\n    case \"MultiLineString\":\n    case \"MultiPolygon\":\n      geometry = geojson;\n      break;\n    default:\n      throw new Error(\"geojson is invalid\");\n  }\n\n  // Find Coord Index\n  if (geometry === null) return null;\n  var coords = geometry.coordinates;\n  switch (geometry.type) {\n    case \"Point\":\n      return point(coords, properties, options);\n    case \"MultiPoint\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      return point(coords[multiFeatureIndex], properties, options);\n    case \"LineString\":\n      if (coordIndex < 0) coordIndex = coords.length + coordIndex;\n      return point(coords[coordIndex], properties, options);\n    case \"Polygon\":\n      if (geometryIndex < 0) geometryIndex = coords.length + geometryIndex;\n      if (coordIndex < 0)\n        coordIndex = coords[geometryIndex].length + coordIndex;\n      return point(coords[geometryIndex][coordIndex], properties, options);\n    case \"MultiLineString\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (coordIndex < 0)\n        coordIndex = coords[multiFeatureIndex].length + coordIndex;\n      return point(coords[multiFeatureIndex][coordIndex], properties, options);\n    case \"MultiPolygon\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (geometryIndex < 0)\n        geometryIndex = coords[multiFeatureIndex].length + geometryIndex;\n      if (coordIndex < 0)\n        coordIndex =\n          coords[multiFeatureIndex][geometryIndex].length - coordIndex;\n      return point(\n        coords[multiFeatureIndex][geometryIndex][coordIndex],\n        properties,\n        options\n      );\n  }\n  throw new Error(\"geojson is invalid\");\n}\n\nexport { coordAll, coordEach, coordReduce, featureEach, featureReduce, findPoint, findSegment, flattenEach, flattenReduce, geomEach, geomReduce, lineEach, lineReduce, propEach, propReduce, segmentEach, segmentReduce };\n","import clone from '@turf/clone';\nimport booleanClockwise from '@turf/boolean-clockwise';\nimport { featureEach, geomEach } from '@turf/meta';\nimport { getCoords } from '@turf/invariant';\nimport { isObject, featureCollection } from '@turf/helpers';\n\n/**\n * Rewind {@link LineString|(Multi)LineString} or {@link Polygon|(Multi)Polygon} outer ring counterclockwise and inner rings clockwise (Uses {@link http://en.wikipedia.org/wiki/Shoelace_formula|Shoelace Formula}).\n *\n * @name rewind\n * @param {GeoJSON} geojson input GeoJSON Polygon\n * @param {Object} [options={}] Optional parameters\n * @param {boolean} [options.reverse=false] enable reverse winding\n * @param {boolean} [options.mutate=false] allows GeoJSON input to be mutated (significant performance increase if true)\n * @returns {GeoJSON} rewind Polygon\n * @example\n * var polygon = turf.polygon([[[121, -29], [138, -29], [138, -18], [121, -18], [121, -29]]]);\n *\n * var rewind = turf.rewind(polygon);\n *\n * //addToMap\n * var addToMap = [rewind];\n */\nfunction rewind(geojson, options) {\n  // Optional parameters\n  options = options || {};\n  if (!isObject(options)) throw new Error(\"options is invalid\");\n  var reverse = options.reverse || false;\n  var mutate = options.mutate || false;\n\n  // validation\n  if (!geojson) throw new Error(\"<geojson> is required\");\n  if (typeof reverse !== \"boolean\")\n    throw new Error(\"<reverse> must be a boolean\");\n  if (typeof mutate !== \"boolean\")\n    throw new Error(\"<mutate> must be a boolean\");\n\n  // prevent input mutation\n  if (mutate === false) geojson = clone(geojson);\n\n  // Support Feature Collection or Geometry Collection\n  var results = [];\n  switch (geojson.type) {\n    case \"GeometryCollection\":\n      geomEach(geojson, function (geometry) {\n        rewindFeature(geometry, reverse);\n      });\n      return geojson;\n    case \"FeatureCollection\":\n      featureEach(geojson, function (feature) {\n        featureEach(rewindFeature(feature, reverse), function (result) {\n          results.push(result);\n        });\n      });\n      return featureCollection(results);\n  }\n  // Support Feature or Geometry Objects\n  return rewindFeature(geojson, reverse);\n}\n\n/**\n * Rewind\n *\n * @private\n * @param {Geometry|Feature<any>} geojson Geometry or Feature\n * @param {Boolean} [reverse=false] enable reverse winding\n * @returns {Geometry|Feature<any>} rewind Geometry or Feature\n */\nfunction rewindFeature(geojson, reverse) {\n  var type = geojson.type === \"Feature\" ? geojson.geometry.type : geojson.type;\n\n  // Support all GeoJSON Geometry Objects\n  switch (type) {\n    case \"GeometryCollection\":\n      geomEach(geojson, function (geometry) {\n        rewindFeature(geometry, reverse);\n      });\n      return geojson;\n    case \"LineString\":\n      rewindLineString(getCoords(geojson), reverse);\n      return geojson;\n    case \"Polygon\":\n      rewindPolygon(getCoords(geojson), reverse);\n      return geojson;\n    case \"MultiLineString\":\n      getCoords(geojson).forEach(function (lineCoords) {\n        rewindLineString(lineCoords, reverse);\n      });\n      return geojson;\n    case \"MultiPolygon\":\n      getCoords(geojson).forEach(function (lineCoords) {\n        rewindPolygon(lineCoords, reverse);\n      });\n      return geojson;\n    case \"Point\":\n    case \"MultiPoint\":\n      return geojson;\n  }\n}\n\n/**\n * Rewind LineString - outer ring clockwise\n *\n * @private\n * @param {Array<Array<number>>} coords GeoJSON LineString geometry coordinates\n * @param {Boolean} [reverse=false] enable reverse winding\n * @returns {void} mutates coordinates\n */\nfunction rewindLineString(coords, reverse) {\n  if (booleanClockwise(coords) === reverse) coords.reverse();\n}\n\n/**\n * Rewind Polygon - outer ring counterclockwise and inner rings clockwise.\n *\n * @private\n * @param {Array<Array<Array<number>>>} coords GeoJSON Polygon geometry coordinates\n * @param {Boolean} [reverse=false] enable reverse winding\n * @returns {void} mutates coordinates\n */\nfunction rewindPolygon(coords, reverse) {\n  // outer ring\n  if (booleanClockwise(coords[0]) !== reverse) {\n    coords[0].reverse();\n  }\n  // inner rings\n  for (var i = 1; i < coords.length; i++) {\n    if (booleanClockwise(coords[i]) === reverse) {\n      coords[i].reverse();\n    }\n  }\n}\n\nexport default rewind;\n","function pointInPolygon(p, polygon) {\n    var i = 0;\n    var ii = 0;\n    var k = 0;\n    var f = 0;\n    var u1 = 0;\n    var v1 = 0;\n    var u2 = 0;\n    var v2 = 0;\n    var currentP = null;\n    var nextP = null;\n\n    var x = p[0];\n    var y = p[1];\n\n    var numContours = polygon.length;\n    for (i; i < numContours; i++) {\n        ii = 0;\n        var contourLen = polygon[i].length - 1;\n        var contour = polygon[i];\n\n        currentP = contour[0];\n        if (currentP[0] !== contour[contourLen][0] &&\n            currentP[1] !== contour[contourLen][1]) {\n            throw new Error('First and last coordinates in a ring must be the same')\n        }\n\n        u1 = currentP[0] - x;\n        v1 = currentP[1] - y;\n\n        for (ii; ii < contourLen; ii++) {\n            nextP = contour[ii + 1];\n\n            v2 = nextP[1] - y;\n\n            if ((v1 < 0 && v2 < 0) || (v1 > 0 && v2 > 0)) {\n                currentP = nextP;\n                v1 = v2;\n                u1 = currentP[0] - x;\n                continue\n            }\n\n            u2 = nextP[0] - p[0];\n\n            if (v2 > 0 && v1 <= 0) {\n                f = (u1 * v2) - (u2 * v1);\n                if (f > 0) { k = k + 1; }\n                else if (f === 0) { return 0 }\n            } else if (v1 > 0 && v2 <= 0) {\n                f = (u1 * v2) - (u2 * v1);\n                if (f < 0) { k = k + 1; }\n                else if (f === 0) { return 0 }\n            } else if (v2 === 0 && v1 < 0) {\n                f = (u1 * v2) - (u2 * v1);\n                if (f === 0) { return 0 }\n            } else if (v1 === 0 && v2 < 0) {\n                f = u1 * v2 - u2 * v1;\n                if (f === 0) { return 0 }\n            } else if (v1 === 0 && v2 === 0) {\n                if (u2 <= 0 && u1 >= 0) {\n                    return 0\n                } else if (u1 <= 0 && u2 >= 0) {\n                    return 0\n                }\n            }\n            currentP = nextP;\n            v1 = v2;\n            u1 = u2;\n        }\n    }\n\n    if (k % 2 === 0) { return false }\n    return true\n}\n\nexport default pointInPolygon;\n","export const epsilon = 1.1102230246251565e-16;\nexport const splitter = 134217729;\nexport const resulterrbound = (3 + 8 * epsilon) * epsilon;\n\n// fast_expansion_sum_zeroelim routine from oritinal code\nexport function sum(elen, e, flen, f, h) {\n    let Q, Qnew, hh, bvirt;\n    let enow = e[0];\n    let fnow = f[0];\n    let eindex = 0;\n    let findex = 0;\n    if ((fnow > enow) === (fnow > -enow)) {\n        Q = enow;\n        enow = e[++eindex];\n    } else {\n        Q = fnow;\n        fnow = f[++findex];\n    }\n    let hindex = 0;\n    if (eindex < elen && findex < flen) {\n        if ((fnow > enow) === (fnow > -enow)) {\n            Qnew = enow + Q;\n            hh = Q - (Qnew - enow);\n            enow = e[++eindex];\n        } else {\n            Qnew = fnow + Q;\n            hh = Q - (Qnew - fnow);\n            fnow = f[++findex];\n        }\n        Q = Qnew;\n        if (hh !== 0) {\n            h[hindex++] = hh;\n        }\n        while (eindex < elen && findex < flen) {\n            if ((fnow > enow) === (fnow > -enow)) {\n                Qnew = Q + enow;\n                bvirt = Qnew - Q;\n                hh = Q - (Qnew - bvirt) + (enow - bvirt);\n                enow = e[++eindex];\n            } else {\n                Qnew = Q + fnow;\n                bvirt = Qnew - Q;\n                hh = Q - (Qnew - bvirt) + (fnow - bvirt);\n                fnow = f[++findex];\n            }\n            Q = Qnew;\n            if (hh !== 0) {\n                h[hindex++] = hh;\n            }\n        }\n    }\n    while (eindex < elen) {\n        Qnew = Q + enow;\n        bvirt = Qnew - Q;\n        hh = Q - (Qnew - bvirt) + (enow - bvirt);\n        enow = e[++eindex];\n        Q = Qnew;\n        if (hh !== 0) {\n            h[hindex++] = hh;\n        }\n    }\n    while (findex < flen) {\n        Qnew = Q + fnow;\n        bvirt = Qnew - Q;\n        hh = Q - (Qnew - bvirt) + (fnow - bvirt);\n        fnow = f[++findex];\n        Q = Qnew;\n        if (hh !== 0) {\n            h[hindex++] = hh;\n        }\n    }\n    if (Q !== 0 || hindex === 0) {\n        h[hindex++] = Q;\n    }\n    return hindex;\n}\n\nexport function sum_three(alen, a, blen, b, clen, c, tmp, out) {\n    return sum(sum(alen, a, blen, b, tmp), tmp, clen, c, out);\n}\n\n// scale_expansion_zeroelim routine from oritinal code\nexport function scale(elen, e, b, h) {\n    let Q, sum, hh, product1, product0;\n    let bvirt, c, ahi, alo, bhi, blo;\n\n    c = splitter * b;\n    bhi = c - (c - b);\n    blo = b - bhi;\n    let enow = e[0];\n    Q = enow * b;\n    c = splitter * enow;\n    ahi = c - (c - enow);\n    alo = enow - ahi;\n    hh = alo * blo - (Q - ahi * bhi - alo * bhi - ahi * blo);\n    let hindex = 0;\n    if (hh !== 0) {\n        h[hindex++] = hh;\n    }\n    for (let i = 1; i < elen; i++) {\n        enow = e[i];\n        product1 = enow * b;\n        c = splitter * enow;\n        ahi = c - (c - enow);\n        alo = enow - ahi;\n        product0 = alo * blo - (product1 - ahi * bhi - alo * bhi - ahi * blo);\n        sum = Q + product0;\n        bvirt = sum - Q;\n        hh = Q - (sum - bvirt) + (product0 - bvirt);\n        if (hh !== 0) {\n            h[hindex++] = hh;\n        }\n        Q = product1 + sum;\n        hh = sum - (Q - product1);\n        if (hh !== 0) {\n            h[hindex++] = hh;\n        }\n    }\n    if (Q !== 0 || hindex === 0) {\n        h[hindex++] = Q;\n    }\n    return hindex;\n}\n\nexport function negate(elen, e) {\n    for (let i = 0; i < elen; i++) e[i] = -e[i];\n    return elen;\n}\n\nexport function estimate(elen, e) {\n    let Q = e[0];\n    for (let i = 1; i < elen; i++) Q += e[i];\n    return Q;\n}\n\nexport function vec(n) {\n    return new Float64Array(n);\n}\n","import {epsilon, splitter, resulterrbound, estimate, vec, sum} from './util.js';\n\nconst ccwerrboundA = (3 + 16 * epsilon) * epsilon;\nconst ccwerrboundB = (2 + 12 * epsilon) * epsilon;\nconst ccwerrboundC = (9 + 64 * epsilon) * epsilon * epsilon;\n\nconst B = vec(4);\nconst C1 = vec(8);\nconst C2 = vec(12);\nconst D = vec(16);\nconst u = vec(4);\n\nfunction orient2dadapt(ax, ay, bx, by, cx, cy, detsum) {\n    let acxtail, acytail, bcxtail, bcytail;\n    let bvirt, c, ahi, alo, bhi, blo, _i, _j, _0, s1, s0, t1, t0, u3;\n\n    const acx = ax - cx;\n    const bcx = bx - cx;\n    const acy = ay - cy;\n    const bcy = by - cy;\n\n    s1 = acx * bcy;\n    c = splitter * acx;\n    ahi = c - (c - acx);\n    alo = acx - ahi;\n    c = splitter * bcy;\n    bhi = c - (c - bcy);\n    blo = bcy - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = acy * bcx;\n    c = splitter * acy;\n    ahi = c - (c - acy);\n    alo = acy - ahi;\n    c = splitter * bcx;\n    bhi = c - (c - bcx);\n    blo = bcx - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    B[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    B[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    B[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    B[3] = u3;\n\n    let det = estimate(4, B);\n    let errbound = ccwerrboundB * detsum;\n    if (det >= errbound || -det >= errbound) {\n        return det;\n    }\n\n    bvirt = ax - acx;\n    acxtail = ax - (acx + bvirt) + (bvirt - cx);\n    bvirt = bx - bcx;\n    bcxtail = bx - (bcx + bvirt) + (bvirt - cx);\n    bvirt = ay - acy;\n    acytail = ay - (acy + bvirt) + (bvirt - cy);\n    bvirt = by - bcy;\n    bcytail = by - (bcy + bvirt) + (bvirt - cy);\n\n    if (acxtail === 0 && acytail === 0 && bcxtail === 0 && bcytail === 0) {\n        return det;\n    }\n\n    errbound = ccwerrboundC * detsum + resulterrbound * Math.abs(det);\n    det += (acx * bcytail + bcy * acxtail) - (acy * bcxtail + bcx * acytail);\n    if (det >= errbound || -det >= errbound) return det;\n\n    s1 = acxtail * bcy;\n    c = splitter * acxtail;\n    ahi = c - (c - acxtail);\n    alo = acxtail - ahi;\n    c = splitter * bcy;\n    bhi = c - (c - bcy);\n    blo = bcy - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = acytail * bcx;\n    c = splitter * acytail;\n    ahi = c - (c - acytail);\n    alo = acytail - ahi;\n    c = splitter * bcx;\n    bhi = c - (c - bcx);\n    blo = bcx - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    u[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    u[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    u[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    u[3] = u3;\n    const C1len = sum(4, B, 4, u, C1);\n\n    s1 = acx * bcytail;\n    c = splitter * acx;\n    ahi = c - (c - acx);\n    alo = acx - ahi;\n    c = splitter * bcytail;\n    bhi = c - (c - bcytail);\n    blo = bcytail - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = acy * bcxtail;\n    c = splitter * acy;\n    ahi = c - (c - acy);\n    alo = acy - ahi;\n    c = splitter * bcxtail;\n    bhi = c - (c - bcxtail);\n    blo = bcxtail - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    u[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    u[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    u[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    u[3] = u3;\n    const C2len = sum(C1len, C1, 4, u, C2);\n\n    s1 = acxtail * bcytail;\n    c = splitter * acxtail;\n    ahi = c - (c - acxtail);\n    alo = acxtail - ahi;\n    c = splitter * bcytail;\n    bhi = c - (c - bcytail);\n    blo = bcytail - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = acytail * bcxtail;\n    c = splitter * acytail;\n    ahi = c - (c - acytail);\n    alo = acytail - ahi;\n    c = splitter * bcxtail;\n    bhi = c - (c - bcxtail);\n    blo = bcxtail - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    u[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    u[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    u[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    u[3] = u3;\n    const Dlen = sum(C2len, C2, 4, u, D);\n\n    return D[Dlen - 1];\n}\n\nexport function orient2d(ax, ay, bx, by, cx, cy) {\n    const detleft = (ay - cy) * (bx - cx);\n    const detright = (ax - cx) * (by - cy);\n    const det = detleft - detright;\n\n    if (detleft === 0 || detright === 0 || (detleft > 0) !== (detright > 0)) return det;\n\n    const detsum = Math.abs(detleft + detright);\n    if (Math.abs(det) >= ccwerrboundA * detsum) return det;\n\n    return -orient2dadapt(ax, ay, bx, by, cx, cy, detsum);\n}\n\nexport function orient2dfast(ax, ay, bx, by, cx, cy) {\n    return (ay - cy) * (bx - cx) - (ax - cx) * (by - cy);\n}\n","import rewind from '@turf/rewind';\nimport inside from 'point-in-polygon-hao';\nimport { orient2d } from 'robust-predicates';\n\nvar Edge = function Edge(p1, p2, edgeType, index, contourId) {\r\n  this.p1 = p1;\r\n  this.p2 = p2;\r\n  this.edgeType = edgeType;\r\n  this.originalIndex = index;\r\n\r\n  this.polygonContourId = contourId;\r\n  this.interiorRing = false;\r\n\r\n  this.minX = Math.min(p1.p[0], p2.p[0]);\r\n  this.minY = Math.min(p1.p[1], p2.p[1]);\r\n\r\n  this.maxX = Math.max(p1.p[0], p2.p[0]);\r\n  this.maxY = Math.max(p1.p[1], p2.p[1]);\r\n\r\n  this.intersectionPoints = [];\r\n  this.nextEdge = null;\r\n};\n\nvar Point = function Point(p) {\r\n  this.p = p;\r\n};\n\nvar Contour = function Contour(contourId, coords) {\n  this.id = contourId;\n  this.rawCoords = coords;\n};\n\nfunction fillQueue(polygon, line, polyEdges, lineEdges, polylineBbox) {\r\n  var numberOfRingsInPolygon = 0;\r\n  var contours = [];\r\n\r\n  var linegeom = line.type === 'Feature' ? line.geometry : line;\r\n  var linecoords = linegeom.type === 'LineString' ? [linegeom.coordinates] : linegeom.coordinates;\r\n\r\n  var edgeCount = 0;\r\n\r\n  for (var i = 0; i < linecoords.length; i++) {\r\n\r\n    var lineLength = linecoords[i].length - 1;\r\n    var p1 = new Point(linecoords[i][0]);\r\n    var p2 = null;\r\n    var prevEdge = {nextEdge: null};\r\n\r\n    for (var ii = 0; ii < lineLength; ii++) {\r\n      p2 = new Point(linecoords[i][ii + 1]);\r\n      p1.nextPoint = p2;\r\n      p2.prevPoint = p1;\r\n      var e = new Edge(p1, p2, 'polyline', edgeCount, null);\r\n      lineEdges.push(e);\r\n      prevEdge.nextEdge = e;\r\n      e.prevEdge = prevEdge;\r\n      polylineBbox[0] = Math.min(polylineBbox[0], p1.p[0]);\r\n      polylineBbox[1] = Math.min(polylineBbox[1], p1.p[1]);\r\n      polylineBbox[2] = Math.max(polylineBbox[2], p1.p[0]);\r\n      polylineBbox[3] = Math.max(polylineBbox[3], p1.p[1]);\r\n\r\n      p1 = p2;\r\n      edgeCount = edgeCount + 1;\r\n      prevEdge = e;\r\n    }\r\n    polylineBbox[0] = Math.min(polylineBbox[0], linecoords[i][lineLength][0]);\r\n    polylineBbox[1] = Math.min(polylineBbox[1], linecoords[i][lineLength][1]);\r\n    polylineBbox[2] = Math.max(polylineBbox[2], linecoords[i][lineLength][0]);\r\n    polylineBbox[3] = Math.max(polylineBbox[3], linecoords[i][lineLength][1]);\r\n  }\r\n\r\n  var polygeom = polygon.type === 'Feature' ? polygon.geometry : polygon;\r\n  var polycoords = polygeom.type === 'Polygon' ? [polygeom.coordinates] : polygeom.coordinates;\r\n\r\n  var polyLength = polycoords.length;\r\n\r\n  for (var i$1 = 0; i$1 < polyLength; i$1++) {\r\n\r\n    var polyLenth2 = polycoords[i$1].length;\r\n\r\n    for (var ii$1 = 0; ii$1 < polyLenth2; ii$1++) {\r\n      numberOfRingsInPolygon = numberOfRingsInPolygon + 1;\r\n\r\n      var polygonSet = polycoords[i$1][ii$1];\r\n      var polyLenth3 = polygonSet.length;\r\n      \r\n      contours.push(new Contour(numberOfRingsInPolygon, polygonSet));\r\n\r\n      var firstPoint = new Point(polygonSet[0]);\r\n      var p1$1 = firstPoint;\r\n      var p2$1 = (void 0), e$1 = null;\r\n      var prevEdge$1 = {nextEdge: null, prevEdge: null};\r\n      var firstEdge = null;\r\n\r\n      for (var iii = 1; iii < polyLenth3; iii++) {\r\n        p2$1 = new Point(polygonSet[iii]);\r\n        p1$1.nextPoint = p2$1;\r\n        p2$1.prevPoint = p1$1;\r\n\r\n        e$1 = new Edge(p1$1, p2$1, 'polygon', edgeCount, numberOfRingsInPolygon);\r\n        prevEdge$1.nextEdge = e$1;\r\n        e$1.prevEdge = prevEdge$1;\r\n        if (iii === 1) { firstEdge = e$1; }\r\n\r\n        if (ii$1 > 0) { e$1.interiorRing = true; }\r\n        e$1.intersectPolylineBbox = edgeIntersectsBbox(e$1, polylineBbox);\r\n        polyEdges.push(e$1);\r\n\r\n        p1$1 = p2$1;\r\n        edgeCount = edgeCount + 1;\r\n        prevEdge$1 = e$1;\r\n      }\r\n\r\n      e$1.nextEdge = firstEdge;\r\n      firstEdge.prevEdge = e$1;\r\n      p2$1.nextPoint = firstPoint.nextPoint;\r\n      firstPoint.prevPoint = p2$1.prevPoint;\r\n    }\r\n  }\r\n  return contours\r\n}\r\n\r\nfunction edgeIntersectsBbox(edge, bbox) {\r\n  if (edge.maxX < bbox[0]) { return false }\r\n  if (edge.minX > bbox[2]) { return false }\r\n  if (edge.maxY < bbox[1]) { return false }\r\n  if (edge.minY > bbox[3]) { return false }\r\n  return true\r\n}\n\nvar IntersectionPoint = function IntersectionPoint(p, edge1, edge2, isHeadingIn) {\r\n  this.p = p;\r\n  this.polylineEdge = edge1;\r\n  this.polygonEdge = edge2;\r\n  this.isHeadingIn = isHeadingIn;\r\n\r\n  this.distanceFromPolylineEdgeStart = distance(this.polylineEdge.p1.p, this.p);\r\n  this.distanceFromPolygonEdgeStart = distance(this.polygonEdge.p1.p, this.p);\r\n\r\n  this.polygonEdge.intersectionPoints.push(this);\r\n  this.polylineEdge.intersectionPoints.push(this);\r\n\r\n  this.visitCount = 0;\r\n};\r\n\r\nIntersectionPoint.prototype.incrementVisitCount = function incrementVisitCount () {\r\n  this.visitCount = this.visitCount + 1;\r\n};\r\n\r\nfunction distance(p1, p2) {\r\n  var xs = p2[0] - p1[0];\r\n  var ys = p2[1] - p1[1];\r\n  xs *= xs;\r\n  ys *= ys;\r\n\r\n  return Math.sqrt(xs + ys)\r\n}\n\nfunction findIntersectionPoints(polygonEdges, lineEdges, intersectingPoints) {\r\n  var i, ii, iii;\r\n  var count = lineEdges.length;\r\n  var polyCount = polygonEdges.length;\r\n  for (i = 0; i < count; i++) {\r\n    var lineEdge = lineEdges[i];\r\n\r\n    for (ii = 0; ii < polyCount; ii++) {\r\n      var polygonEdge = polygonEdges[ii];\r\n      if (!polygonEdge.intersectPolylineBbox) { continue }\r\n\r\n      if (polygonEdge.maxX < lineEdge.minX || polygonEdge.minX > lineEdge.maxX) { continue }\r\n      if (polygonEdge.maxY < lineEdge.minY || polygonEdge.minY > lineEdge.maxY) { continue }\r\n      var intersection = getEdgeIntersection(lineEdge, polygonEdge);\r\n      if (intersection !== null) {\r\n        for (iii = 0; iii < intersection.length; iii++) {\r\n          var isHeadingIn = orient2d(polygonEdge.p1.p[0], polygonEdge.p1.p[1], polygonEdge.p2.p[0], polygonEdge.p2.p[1], lineEdge.p1.p[0], lineEdge.p1.p[1]);\r\n          var ip = new IntersectionPoint(intersection[iii], lineEdge, polygonEdge, isHeadingIn > 0);\r\n          intersectingPoints.push(ip);\r\n        }\r\n      }\r\n    }\r\n  }\r\n  lineEdges.forEach(function (edge) {\r\n    edge.intersectionPoints.sort(function (a, b) {\r\n      return a.distanceFromPolylineEdgeStart - b.distanceFromPolylineEdgeStart\r\n    });\r\n  });\r\n\r\n  polygonEdges.forEach(function (edge) {\r\n    edge.intersectionPoints.sort(function (a, b) {\r\n      return a.distanceFromPolygonEdgeStart - b.distanceFromPolygonEdgeStart\r\n    });\r\n  });\r\n}\r\n\r\nvar EPSILON = 1e-9;\r\n\r\nfunction crossProduct(a, b) {\r\n  return (a[0] * b[1]) - (a[1] * b[0])\r\n}\r\n\r\nfunction dotProduct(a, b) {\r\n  return (a[0] * b[0]) + (a[1] * b[1])\r\n}\r\n\r\nfunction toPoint(p, s, d) {\r\n  return [\r\n    p[0] + s * d[0],\r\n    p[1] + s * d[1]\r\n  ]\r\n}\r\n\r\nfunction getEdgeIntersection(lineEdge, potentialEdge, noEndpointTouch) {\r\n  var va = [lineEdge.p2.p[0] - lineEdge.p1.p[0], lineEdge.p2.p[1] - lineEdge.p1.p[1]];\r\n  var vb = [potentialEdge.p2.p[0] - potentialEdge.p1.p[0], potentialEdge.p2.p[1] - potentialEdge.p1.p[1]];\r\n\r\n  var e = [potentialEdge.p1.p[0] - lineEdge.p1.p[0], potentialEdge.p1.p[1] - lineEdge.p1.p[1]];\r\n  var kross = crossProduct(va, vb);\r\n  var sqrKross = kross * kross;\r\n  var sqrLenA  = dotProduct(va, va);\r\n\r\n  if (sqrKross > 0) {\r\n\r\n    var s = crossProduct(e, vb) / kross;\r\n    if (s < 0 || s > 1) { return null }\r\n    var t = crossProduct(e, va) / kross;\r\n    if (t < 0 || t > 1) { return null }\r\n    if (s === 0 || s === 1) {\r\n      // on an endpoint of line segment a\r\n      return noEndpointTouch ? null : [toPoint(lineEdge.p1.p, s, va)]\r\n    }\r\n    if (t === 0 || t === 1) {\r\n      // on an endpoint of line segment b\r\n      return noEndpointTouch ? null : [toPoint(potentialEdge.p1.p, t, vb)]\r\n    }\r\n    return [toPoint(lineEdge.p1.p, s, va)]\r\n  }\r\n\r\n  var sqrLenE = dotProduct(e, e);\r\n  kross = crossProduct(e, va);\r\n  sqrKross = kross * kross;\r\n\r\n  if (sqrKross > EPSILON * sqrLenA * sqrLenE) { return null }\r\n\r\n  var sa = dotProduct(va, e) / sqrLenA;\r\n  var sb = sa + dotProduct(va, vb) / sqrLenA;\r\n  var smin = Math.min(sa, sb);\r\n  var smax = Math.max(sa, sb);\r\n\r\n  if (smin <= 1 && smax >= 0) {\r\n\r\n    if (smin === 1) { return noEndpointTouch ? null : [toPoint(lineEdge.p1.p, smin > 0 ? smin : 0, va)] }\r\n\r\n    if (smax === 0) { return noEndpointTouch ? null : [toPoint(lineEdge.p1.p, smax < 1 ? smax : 1, va)] }\r\n\r\n    if (noEndpointTouch && smin === 0 && smax === 1) { return null }\r\n\r\n    return [\r\n      toPoint(lineEdge.p1.p, smin > 0 ? smin : 0, va),\r\n      toPoint(lineEdge.p1.p, smax < 1 ? smax : 1, va)\r\n    ]\r\n  }\r\n\r\n  return null\r\n}\n\n// import { _debugCandidatePoly, _debugIntersectionPoint, _debugLinePoints, _debugIntersectionPoints, _debugPolyStart } from './debug'\r\n\r\nfunction index (polygon, line) {\r\n  var poly = rewind(polygon);\r\n\r\n  var intersections = [];\r\n  var polygonEdges = [];\r\n  var polylineEdges = [];\r\n  var polylineBbox = [Infinity, Infinity, Infinity, Infinity];\r\n\r\n  var contours = fillQueue(poly, line, polygonEdges, polylineEdges, polylineBbox);\r\n\r\n  findIntersectionPoints(polygonEdges, polylineEdges, intersections);\r\n\r\n  if (intersections.length === 0) {\r\n    return polygon\r\n  }\r\n\r\n  // Track the number of intersections per contour\r\n  // This is useful for holes or outerrings that aren't intersected\r\n  // so that we can manually add them back in at the end\r\n  var numberIntersectionsByRing = {};\r\n  contours.forEach(function (c) { return numberIntersectionsByRing[c.id] = 0; }); //eslint-disable-line\r\n  intersections.forEach(function (i) {\r\n    var id = i.polygonEdge.polygonContourId;\r\n    numberIntersectionsByRing[id] = numberIntersectionsByRing[id] + 1;\r\n  });\r\n\r\n\r\n  var infiniteLoopGuard = 0;\r\n  var outPolys = [];\r\n  // _debugIntersectionPoints(intersections)\r\n  // Start the rewiring of the outputs from the first intersection point along the polyline line\r\n  // This step makes a difference (eg see the another.geojson harness file)\r\n  var firstPolyStart = null;\r\n  for (var index = 0; index < polylineEdges.length; index++) {\r\n    var pe = polylineEdges[index];\r\n    if (pe.intersectionPoints.length > 0) {\r\n      firstPolyStart = pe.intersectionPoints[0];\r\n      break\r\n    }\r\n  }\r\n\r\n  var polyStart = firstPolyStart;\r\n  var nextPolyStart = {visitCount: 1};\r\n  // Basically we're going to walk our way around the outside of the polygon\r\n  // to find new output polygons until we get back to the beginning\r\n  while (firstPolyStart !== nextPolyStart) {\r\n    if (infiniteLoopGuard > intersections.length * 2) {\r\n      break\r\n    }\r\n    infiniteLoopGuard = infiniteLoopGuard++;\r\n\r\n    // If we've already visited this intersection point a couple of times we've\r\n    // already used it in it's two output polygons\r\n\r\n    if (nextPolyStart.visitCount >= 2) {\r\n      var unvisitedPolyFound = false;\r\n      for (var index$1 = 0; index$1 < intersections.length; index$1++) {\r\n        var intersection = intersections[index$1];\r\n        if (intersection.visitCount < 2) {\r\n          polyStart = intersection;\r\n          unvisitedPolyFound = true;\r\n          break\r\n        }\r\n      }\r\n      if (!unvisitedPolyFound) { break }\r\n    }\r\n\r\n    polyStart.visitCount = polyStart.visitCount + 1;\r\n    var outPoly = [];\r\n    outPolys.push(outPoly);\r\n    outPoly.push(polyStart.p);\r\n\r\n    polyStart.visitCount = polyStart.visitCount + 1;\r\n    var nextIntersection = walkPolygonForwards(polyStart, outPoly);\r\n    // _debugCandidatePoly(outPolys)\r\n    // After we've walked the first stretch of the polygon we now have the\r\n    // starting point for our next output polygon\r\n    nextPolyStart = nextIntersection;\r\n\r\n\r\n    // Although sometimes we walk all the way around the outside\r\n    // because our split line goes from outer to inner ring\r\n    var override = false;\r\n    if (nextIntersection === nextPolyStart && intersections.length === 2) {\r\n      for (var index$2 = 0; index$2 < intersections.length; index$2++) {\r\n        var intersection$1 = intersections[index$2];\r\n        if (intersection$1.visitCount < 2) {\r\n          override = true;\r\n        }\r\n      }\r\n    }\r\n\r\n    // An ouput polygon has to contain at least 1 stretch from the original polygon\r\n    // and one stretch from the polyline\r\n    // However it can contain many stretches of each\r\n    // So we walk continually from polyline to polygon collecting the output\r\n    while (nextIntersection !== polyStart || override) {\r\n      var methodForPolyline = nextIntersection.isHeadingIn ? walkPolylineForwards : walkPolylineBackwards;\r\n      nextIntersection = methodForPolyline(nextIntersection, outPoly);\r\n      // _debugCandidatePoly(outPolys)\r\n\r\n      if (nextIntersection !== polyStart) {\r\n        nextIntersection = walkPolygonForwards(nextIntersection, outPoly);\r\n        // _debugCandidatePoly(outPolys)\r\n      }\r\n      override = false;\r\n    }\r\n\r\n    if (nextPolyStart.visitCount >= 2) {\r\n      var unvisitedPolyFound$1 = false;\r\n      for (var index$3 = 0; index$3 < intersections.length; index$3++) {\r\n        var intersection$2 = intersections[index$3];\r\n        if (intersection$2.visitCount < 2) {\r\n          polyStart = intersection$2;\r\n          unvisitedPolyFound$1 = true;\r\n          break\r\n        }\r\n      }\r\n      if (unvisitedPolyFound$1) {\r\n        nextPolyStart = polyStart;\r\n      }\r\n    }\r\n\r\n    // Finally we set the next start point based on what we found earlier\r\n    polyStart = nextPolyStart;\r\n  }\r\n\r\n  var outCoordinates = outPolys.map(function (poly) { return [poly]; });\r\n\r\n  var keys = Object.keys(numberIntersectionsByRing);\r\n  for (var index$4 = 0; index$4 < keys.length; index$4++) {\r\n    var key = keys[index$4];\r\n    var value = numberIntersectionsByRing[key];\r\n    if (value === 0) {\r\n      var edge = findFirstPolygonEdge(polygonEdges, parseInt(key));\r\n      var ring = findRingFromEdge(edge, contours);\r\n      createAsHoleOrAddAsNewOuterRing(ring, outCoordinates);\r\n    }\r\n  }\r\n\r\n  return {\r\n    type: 'Feature',\r\n    properties: {},\r\n    geometry: {\r\n      type: 'MultiPolygon',\r\n      coordinates: outCoordinates\r\n    }\r\n  }\r\n}\r\n\r\nfunction findFirstPolygonEdge(polygonEdges, contourId) {\r\n  for (var index = 0; index < polygonEdges.length; index++) {\r\n    var edge = polygonEdges[index];\r\n    if (edge.polygonContourId === contourId) { return edge }\r\n  }\r\n}\r\n\r\nfunction findRingFromEdge(edge, contours) {\r\n  var contour = contours.find(function (c) { return c.id === edge.polygonContourId; });\r\n  return contour.rawCoords\r\n}\r\n\r\nfunction createAsHoleOrAddAsNewOuterRing(unusedRing, outCoordinates) {\r\n  for (var index = 0; index < outCoordinates.length; index++) {\r\n    var existingRing = outCoordinates[index];\r\n    if (inside(unusedRing[0], [existingRing[0]])) {\r\n      existingRing.push(unusedRing);\r\n      return\r\n    }\r\n  }\r\n  // If no match is found push it as a new outer ring\r\n  outCoordinates.push([unusedRing]);\r\n}\r\n\r\n// Walk around the polygon collecting vertices\r\nfunction walkPolygonForwards(intersectionPoint, outPoly) {\r\n  var nextEdge = intersectionPoint.polygonEdge;\r\n  if (nextEdge.intersectionPoints.length > 1) {\r\n    // _debugIntersectionPoint(intersectionPoint)\r\n    var lastPointOnEdge = nextEdge.intersectionPoints[nextEdge.intersectionPoints.length - 1];\r\n    if (lastPointOnEdge !== intersectionPoint) {\r\n      var currentIndex = findIndexOfIntersectionPoint(intersectionPoint, nextEdge.intersectionPoints);\r\n      var nextIp = nextEdge.intersectionPoints[currentIndex + 1];\r\n      outPoly.push(nextIp.p);\r\n      nextIp.incrementVisitCount();\r\n      return nextIp\r\n    }\r\n  }\r\n  var condition = true;\r\n  while (condition) {\r\n    outPoly.push(nextEdge.p2.p);\r\n    nextEdge = nextEdge.nextEdge;\r\n    if (nextEdge === null) { return intersectionPoint }\r\n    else if (nextEdge.intersectionPoints.length > 0) { condition = false; }\r\n  }\r\n  nextEdge.intersectionPoints[0].incrementVisitCount();\r\n  outPoly.push(nextEdge.intersectionPoints[0].p);\r\n  return nextEdge.intersectionPoints[0]\r\n}\r\n\r\n// Given a set of intersections find the next one\r\nfunction findIndexOfIntersectionPoint(intersection, intersections) {\r\n  for (var index = 0; index < intersections.length; index++) {\r\n    var int = intersections[index];\r\n    if (int === intersection) { return index }\r\n  }\r\n  return null\r\n}\r\n\r\n\r\nfunction walkPolylineBackwards(intersectionPoint, outPoly) {\r\n  var nextEdge = intersectionPoint.polylineEdge;\r\n  if (nextEdge.intersectionPoints.length === 2) {\r\n    var lastPointOnEdge = nextEdge.intersectionPoints[nextEdge.intersectionPoints.length - 1];\r\n    // debugger\r\n    if (lastPointOnEdge === intersectionPoint) {\r\n      var nextIntersection = nextEdge.intersectionPoints[0];\r\n      outPoly.push(nextIntersection.p);\r\n      nextIntersection.incrementVisitCount();\r\n      return nextIntersection\r\n    } else {\r\n      outPoly.push(lastPointOnEdge.p);\r\n      lastPointOnEdge.incrementVisitCount();\r\n      return lastPointOnEdge\r\n    }\r\n  } else if (nextEdge.intersectionPoints.length > 2) {\r\n    // _debugIntersectionPoint(intersectionPoint)\r\n\r\n    var lastPointOnEdge$1 = nextEdge.intersectionPoints[0];\r\n    if (lastPointOnEdge$1 !== intersectionPoint) {\r\n      var currentIndex = findIndexOfIntersectionPoint(intersectionPoint, nextEdge.intersectionPoints);\r\n      var nextIntersection$1 = nextEdge.intersectionPoints[currentIndex - 1];\r\n      outPoly.push(nextIntersection$1.p);\r\n      nextIntersection$1.incrementVisitCount();\r\n      return nextIntersection$1\r\n    }\r\n  }\r\n  var condition = true;\r\n  while (condition) {\r\n    outPoly.push(nextEdge.p1.p);\r\n    nextEdge = nextEdge.prevEdge;\r\n    if (nextEdge.originalIndex === undefined) { return intersectionPoint }\r\n    else if (nextEdge.intersectionPoints.length > 0) {\r\n      condition = false;\r\n    }\r\n  }\r\n  if (nextEdge.originalIndex === undefined) { return intersectionPoint }\r\n  var lastIntersection = nextEdge.intersectionPoints[nextEdge.intersectionPoints.length - 1];\r\n  lastIntersection.incrementVisitCount();\r\n  outPoly.push(lastIntersection.p);\r\n  return lastIntersection\r\n}\r\n\r\nfunction walkPolylineForwards(intersectionPoint, outPoly) {\r\n  var nextEdge = intersectionPoint.polylineEdge;\r\n\r\n  if (nextEdge.intersectionPoints.length > 1) {\r\n    // _debugIntersectionPoint(intersectionPoint)\r\n    var lastPointOnEdge = nextEdge.intersectionPoints[nextEdge.intersectionPoints.length - 1];\r\n    if (lastPointOnEdge !== intersectionPoint) {\r\n      var currentIndex = findIndexOfIntersectionPoint(intersectionPoint, nextEdge.intersectionPoints);\r\n      var nextIp = nextEdge.intersectionPoints[currentIndex + 1];\r\n      outPoly.push(nextIp.p);\r\n      nextIp.incrementVisitCount();\r\n      return nextIp\r\n    }\r\n  }\r\n  var condition = true;\r\n  while (condition) {\r\n    outPoly.push(nextEdge.p2.p);\r\n    nextEdge = nextEdge.nextEdge;\r\n    if (nextEdge === null) { return intersectionPoint }\r\n    else if (nextEdge.intersectionPoints.length > 0) { condition = false; }\r\n  }\r\n  if (nextEdge === undefined) { return intersectionPoint }\r\n  var lastIntersection = nextEdge.intersectionPoints[0];\r\n  lastIntersection.incrementVisitCount();\r\n  outPoly.push(lastIntersection.p);\r\n  return lastIntersection\r\n}\n\nexport { index as default };\n","!function(t,e){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=e():\"function\"==typeof define&&define.amd?define(e):(t=\"undefined\"!=typeof globalThis?globalThis:t||self).MapboxDraw=e()}(this,(function(){\"use strict\";var t=function(t,e){var n={drag:[],click:[],mousemove:[],mousedown:[],mouseup:[],mouseout:[],keydown:[],keyup:[],touchstart:[],touchmove:[],touchend:[],tap:[]},o={on:function(t,e,o){if(void 0===n[t])throw new Error(\"Invalid event type: \"+t);n[t].push({selector:e,fn:o})},render:function(t){e.store.featureChanged(t)}},r=function(t,r){for(var i=n[t],a=i.length;a--;){var s=i[a];if(s.selector(r)){s.fn.call(o,r)||e.store.render(),e.ui.updateMapClasses();break}}};return t.start.call(o),{render:t.render,stop:function(){t.stop&&t.stop()},trash:function(){t.trash&&(t.trash(),e.store.render())},combineFeatures:function(){t.combineFeatures&&t.combineFeatures()},uncombineFeatures:function(){t.uncombineFeatures&&t.uncombineFeatures()},drag:function(t){r(\"drag\",t)},click:function(t){r(\"click\",t)},mousemove:function(t){r(\"mousemove\",t)},mousedown:function(t){r(\"mousedown\",t)},mouseup:function(t){r(\"mouseup\",t)},mouseout:function(t){r(\"mouseout\",t)},keydown:function(t){r(\"keydown\",t)},keyup:function(t){r(\"keyup\",t)},touchstart:function(t){r(\"touchstart\",t)},touchmove:function(t){r(\"touchmove\",t)},touchend:function(t){r(\"touchend\",t)},tap:function(t){r(\"tap\",t)}}};function e(t){return t&&t.__esModule&&Object.prototype.hasOwnProperty.call(t,\"default\")?t.default:t}function n(t){if(t.__esModule)return t;var e=t.default;if(\"function\"==typeof e){var n=function t(){if(this instanceof t){var n=[null];n.push.apply(n,arguments);var o=Function.bind.apply(e,n);return new o}return e.apply(this,arguments)};n.prototype=e.prototype}else n={};return Object.defineProperty(n,\"__esModule\",{value:!0}),Object.keys(t).forEach((function(e){var o=Object.getOwnPropertyDescriptor(t,e);Object.defineProperty(n,e,o.get?o:{enumerable:!0,get:function(){return t[e]}})})),n}var o={},r={RADIUS:6378137,FLATTENING:1/298.257223563,POLAR_RADIUS:6356752.3142},i=r;function a(t){var e=0;if(t&&t.length>0){e+=Math.abs(s(t[0]));for(var n=1;n<t.length;n++)e-=Math.abs(s(t[n]))}return e}function s(t){var e,n,o,r,a,s,c=0,l=t.length;if(l>2){for(s=0;s<l;s++)s===l-2?(o=l-2,r=l-1,a=0):s===l-1?(o=l-1,r=0,a=1):(o=s,r=s+1,a=s+2),e=t[o],n=t[r],c+=(u(t[a][0])-u(e[0]))*Math.sin(u(n[1]));c=c*i.RADIUS*i.RADIUS/2}return c}function u(t){return t*Math.PI/180}o.geometry=function t(e){var n,o=0;switch(e.type){case\"Polygon\":return a(e.coordinates);case\"MultiPolygon\":for(n=0;n<e.coordinates.length;n++)o+=a(e.coordinates[n]);return o;case\"Point\":case\"MultiPoint\":case\"LineString\":case\"MultiLineString\":return 0;case\"GeometryCollection\":for(n=0;n<e.geometries.length;n++)o+=t(e.geometries[n]);return o}},o.ring=s;var c={CONTROL_BASE:\"mapboxgl-ctrl\",CONTROL_PREFIX:\"mapboxgl-ctrl-\",CONTROL_BUTTON:\"mapbox-gl-draw_ctrl-draw-btn\",CONTROL_BUTTON_LINE:\"mapbox-gl-draw_line\",CONTROL_BUTTON_POLYGON:\"mapbox-gl-draw_polygon\",CONTROL_BUTTON_POINT:\"mapbox-gl-draw_point\",CONTROL_BUTTON_TRASH:\"mapbox-gl-draw_trash\",CONTROL_BUTTON_COMBINE_FEATURES:\"mapbox-gl-draw_combine\",CONTROL_BUTTON_UNCOMBINE_FEATURES:\"mapbox-gl-draw_uncombine\",CONTROL_GROUP:\"mapboxgl-ctrl-group\",ATTRIBUTION:\"mapboxgl-ctrl-attrib\",ACTIVE_BUTTON:\"active\",BOX_SELECT:\"mapbox-gl-draw_boxselect\"},l={HOT:\"mapbox-gl-draw-hot\",COLD:\"mapbox-gl-draw-cold\"},d={ADD:\"add\",MOVE:\"move\",DRAG:\"drag\",POINTER:\"pointer\",NONE:\"none\"},p={POLYGON:\"polygon\",LINE:\"line_string\",POINT:\"point\"},f={FEATURE:\"Feature\",POLYGON:\"Polygon\",LINE_STRING:\"LineString\",POINT:\"Point\",FEATURE_COLLECTION:\"FeatureCollection\",MULTI_PREFIX:\"Multi\",MULTI_POINT:\"MultiPoint\",MULTI_LINE_STRING:\"MultiLineString\",MULTI_POLYGON:\"MultiPolygon\"},h={DRAW_LINE_STRING:\"draw_line_string\",DRAW_POLYGON:\"draw_polygon\",DRAW_POINT:\"draw_point\",SIMPLE_SELECT:\"simple_select\",DIRECT_SELECT:\"direct_select\",STATIC:\"static\"},g={CREATE:\"draw.create\",DELETE:\"draw.delete\",UPDATE:\"draw.update\",SELECTION_CHANGE:\"draw.selectionchange\",MODE_CHANGE:\"draw.modechange\",ACTIONABLE:\"draw.actionable\",RENDER:\"draw.render\",COMBINE_FEATURES:\"draw.combine\",UNCOMBINE_FEATURES:\"draw.uncombine\"},y={MOVE:\"move\",CHANGE_COORDINATES:\"change_coordinates\"},v={FEATURE:\"feature\",MIDPOINT:\"midpoint\",VERTEX:\"vertex\"},m={ACTIVE:\"true\",INACTIVE:\"false\"},_=[\"scrollZoom\",\"boxZoom\",\"dragRotate\",\"dragPan\",\"keyboard\",\"doubleClickZoom\",\"touchZoomRotate\"],b=-85,E=Object.freeze({__proto__:null,classes:c,sources:l,cursors:d,types:p,geojsonTypes:f,modes:h,events:g,updateActions:y,meta:v,activeStates:m,interactions:_,LAT_MIN:-90,LAT_RENDERED_MIN:b,LAT_MAX:90,LAT_RENDERED_MAX:85,LNG_MIN:-270,LNG_MAX:270}),T={Point:0,LineString:1,MultiLineString:1,Polygon:2};function C(t,e){var n=T[t.geometry.type]-T[e.geometry.type];return 0===n&&t.geometry.type===f.POLYGON?t.area-e.area:n}function O(t){return t.map((function(t){return t.geometry.type===f.POLYGON&&(t.area=o.geometry({type:f.FEATURE,property:{},geometry:t.geometry})),t})).sort(C).map((function(t){return delete t.area,t}))}function S(t,e){return void 0===e&&(e=0),[[t.point.x-e,t.point.y-e],[t.point.x+e,t.point.y+e]]}function I(t){if(this._items={},this._nums={},this._length=t?t.length:0,t)for(var e=0,n=t.length;e<n;e++)this.add(t[e]),void 0!==t[e]&&(\"string\"==typeof t[e]?this._items[t[e]]=e:this._nums[t[e]]=e)}I.prototype.add=function(t){return this.has(t)||(this._length++,\"string\"==typeof t?this._items[t]=this._length:this._nums[t]=this._length),this},I.prototype.delete=function(t){return!1===this.has(t)||(this._length--,delete this._items[t],delete this._nums[t]),this},I.prototype.has=function(t){return(\"string\"==typeof t||\"number\"==typeof t)&&(void 0!==this._items[t]||void 0!==this._nums[t])},I.prototype.values=function(){var t=this,e=[];return Object.keys(this._items).forEach((function(n){e.push({k:n,v:t._items[n]})})),Object.keys(this._nums).forEach((function(n){e.push({k:JSON.parse(n),v:t._nums[n]})})),e.sort((function(t,e){return t.v-e.v})).map((function(t){return t.k}))},I.prototype.clear=function(){return this._length=0,this._items={},this._nums={},this};var x=[v.FEATURE,v.MIDPOINT,v.VERTEX],M={click:function(t,e,n){return L(t,e,n,n.options.clickBuffer)},touch:function(t,e,n){return L(t,e,n,n.options.touchBuffer)}};function L(t,e,n,o){if(null===n.map)return[];var r=t?S(t,o):e,i={};n.options.styles&&(i.layers=n.options.styles.map((function(t){return t.id})).filter((function(t){return null!=n.map.getLayer(t)})));var a=n.map.queryRenderedFeatures(r,i).filter((function(t){return-1!==x.indexOf(t.properties.meta)})),s=new I,u=[];return a.forEach((function(t){var e=t.properties.id;s.has(e)||(s.add(e),u.push(t))})),O(u)}function N(t,e){var n=M.click(t,null,e),o={mouse:d.NONE};return n[0]&&(o.mouse=n[0].properties.active===m.ACTIVE?d.MOVE:d.POINTER,o.feature=n[0].properties.meta),-1!==e.events.currentModeName().indexOf(\"draw\")&&(o.mouse=d.ADD),e.ui.queueMapClasses(o),e.ui.updateMapClasses(),n[0]}function A(t,e){var n=t.x-e.x,o=t.y-e.y;return Math.sqrt(n*n+o*o)}function P(t,e,n){void 0===n&&(n={});var o=null!=n.fineTolerance?n.fineTolerance:4,r=null!=n.grossTolerance?n.grossTolerance:12,i=null!=n.interval?n.interval:500;t.point=t.point||e.point,t.time=t.time||e.time;var a=A(t.point,e.point);return a<o||a<r&&e.time-t.time<i}function F(t,e,n){void 0===n&&(n={});var o=null!=n.tolerance?n.tolerance:25,r=null!=n.interval?n.interval:250;return t.point=t.point||e.point,t.time=t.time||e.time,A(t.point,e.point)<o&&e.time-t.time<r}var w={exports:{}},R=w.exports=function(t,e){if(e||(e=16),void 0===t&&(t=128),t<=0)return\"0\";for(var n=Math.log(Math.pow(2,t))/Math.log(e),o=2;n===1/0;o*=2)n=Math.log(Math.pow(2,t/o))/Math.log(e)*o;var r=n-Math.floor(n),i=\"\";for(o=0;o<Math.floor(n);o++){i=Math.floor(Math.random()*e).toString(e)+i}if(r){var a=Math.pow(e,r);i=Math.floor(Math.random()*a).toString(e)+i}var s=parseInt(i,e);return s!==1/0&&s>=Math.pow(2,t)?R(t,e):i};R.rack=function(t,e,n){var o=function(o){var i=0;do{if(i++>10){if(!n)throw new Error(\"too many ID collisions, use more bits\");t+=n}var a=R(t,e)}while(Object.hasOwnProperty.call(r,a));return r[a]=o,a},r=o.hats={};return o.get=function(t){return o.hats[t]},o.set=function(t,e){return o.hats[t]=e,o},o.bits=t||128,o.base=e||16,o};var k=e(w.exports),D=function(t,e){this.ctx=t,this.properties=e.properties||{},this.coordinates=e.geometry.coordinates,this.id=e.id||k(),this.type=e.geometry.type};D.prototype.changed=function(){this.ctx.store.featureChanged(this.id)},D.prototype.incomingCoords=function(t){this.setCoordinates(t)},D.prototype.setCoordinates=function(t){this.coordinates=t,this.changed()},D.prototype.getCoordinates=function(){return JSON.parse(JSON.stringify(this.coordinates))},D.prototype.setProperty=function(t,e){this.properties[t]=e},D.prototype.toGeoJSON=function(){return JSON.parse(JSON.stringify({id:this.id,type:f.FEATURE,properties:this.properties,geometry:{coordinates:this.getCoordinates(),type:this.type}}))},D.prototype.internal=function(t){var e={id:this.id,meta:v.FEATURE,\"meta:type\":this.type,active:m.INACTIVE,mode:t};if(this.ctx.options.userProperties)for(var n in this.properties)e[\"user_\"+n]=this.properties[n];return{type:f.FEATURE,properties:e,geometry:{coordinates:this.getCoordinates(),type:this.type}}};var U=function(t,e){D.call(this,t,e)};(U.prototype=Object.create(D.prototype)).isValid=function(){return\"number\"==typeof this.coordinates[0]&&\"number\"==typeof this.coordinates[1]},U.prototype.updateCoordinate=function(t,e,n){this.coordinates=3===arguments.length?[e,n]:[t,e],this.changed()},U.prototype.getCoordinate=function(){return this.getCoordinates()};var j=function(t,e){D.call(this,t,e)};(j.prototype=Object.create(D.prototype)).isValid=function(){return this.coordinates.length>1},j.prototype.addCoordinate=function(t,e,n){this.changed();var o=parseInt(t,10);this.coordinates.splice(o,0,[e,n])},j.prototype.getCoordinate=function(t){var e=parseInt(t,10);return JSON.parse(JSON.stringify(this.coordinates[e]))},j.prototype.removeCoordinate=function(t){this.changed(),this.coordinates.splice(parseInt(t,10),1)},j.prototype.updateCoordinate=function(t,e,n){var o=parseInt(t,10);this.coordinates[o]=[e,n],this.changed()};var V=function(t,e){D.call(this,t,e),this.coordinates=this.coordinates.map((function(t){return t.slice(0,-1)}))};(V.prototype=Object.create(D.prototype)).isValid=function(){return 0!==this.coordinates.length&&this.coordinates.every((function(t){return t.length>2}))},V.prototype.incomingCoords=function(t){this.coordinates=t.map((function(t){return t.slice(0,-1)})),this.changed()},V.prototype.setCoordinates=function(t){this.coordinates=t,this.changed()},V.prototype.addCoordinate=function(t,e,n){this.changed();var o=t.split(\".\").map((function(t){return parseInt(t,10)}));this.coordinates[o[0]].splice(o[1],0,[e,n])},V.prototype.removeCoordinate=function(t){this.changed();var e=t.split(\".\").map((function(t){return parseInt(t,10)})),n=this.coordinates[e[0]];n&&(n.splice(e[1],1),n.length<3&&this.coordinates.splice(e[0],1))},V.prototype.getCoordinate=function(t){var e=t.split(\".\").map((function(t){return parseInt(t,10)})),n=this.coordinates[e[0]];return JSON.parse(JSON.stringify(n[e[1]]))},V.prototype.getCoordinates=function(){return this.coordinates.map((function(t){return t.concat([t[0]])}))},V.prototype.updateCoordinate=function(t,e,n){this.changed();var o=t.split(\".\"),r=parseInt(o[0],10),i=parseInt(o[1],10);void 0===this.coordinates[r]&&(this.coordinates[r]=[]),this.coordinates[r][i]=[e,n]};var B={MultiPoint:U,MultiLineString:j,MultiPolygon:V},G=function(t,e,n,o,r){var i=n.split(\".\"),a=parseInt(i[0],10),s=i[1]?i.slice(1).join(\".\"):null;return t[a][e](s,o,r)},J=function(t,e){if(D.call(this,t,e),delete this.coordinates,this.model=B[e.geometry.type],void 0===this.model)throw new TypeError(e.geometry.type+\" is not a valid type\");this.features=this._coordinatesToFeatures(e.geometry.coordinates)};function z(t){this.map=t.map,this.drawConfig=JSON.parse(JSON.stringify(t.options||{})),this._ctx=t}(J.prototype=Object.create(D.prototype))._coordinatesToFeatures=function(t){var e=this,n=this.model.bind(this);return t.map((function(t){return new n(e.ctx,{id:k(),type:f.FEATURE,properties:{},geometry:{coordinates:t,type:e.type.replace(\"Multi\",\"\")}})}))},J.prototype.isValid=function(){return this.features.every((function(t){return t.isValid()}))},J.prototype.setCoordinates=function(t){this.features=this._coordinatesToFeatures(t),this.changed()},J.prototype.getCoordinate=function(t){return G(this.features,\"getCoordinate\",t)},J.prototype.getCoordinates=function(){return JSON.parse(JSON.stringify(this.features.map((function(t){return t.type===f.POLYGON?t.getCoordinates():t.coordinates}))))},J.prototype.updateCoordinate=function(t,e,n){G(this.features,\"updateCoordinate\",t,e,n),this.changed()},J.prototype.addCoordinate=function(t,e,n){G(this.features,\"addCoordinate\",t,e,n),this.changed()},J.prototype.removeCoordinate=function(t){G(this.features,\"removeCoordinate\",t),this.changed()},J.prototype.getFeatures=function(){return this.features},z.prototype.setSelected=function(t){return this._ctx.store.setSelected(t)},z.prototype.setSelectedCoordinates=function(t){var e=this;this._ctx.store.setSelectedCoordinates(t),t.reduce((function(t,n){return void 0===t[n.feature_id]&&(t[n.feature_id]=!0,e._ctx.store.get(n.feature_id).changed()),t}),{})},z.prototype.getSelected=function(){return this._ctx.store.getSelected()},z.prototype.getSelectedIds=function(){return this._ctx.store.getSelectedIds()},z.prototype.isSelected=function(t){return this._ctx.store.isSelected(t)},z.prototype.getFeature=function(t){return this._ctx.store.get(t)},z.prototype.select=function(t){return this._ctx.store.select(t)},z.prototype.deselect=function(t){return this._ctx.store.deselect(t)},z.prototype.deleteFeature=function(t,e){return void 0===e&&(e={}),this._ctx.store.delete(t,e)},z.prototype.addFeature=function(t){return this._ctx.store.add(t)},z.prototype.clearSelectedFeatures=function(){return this._ctx.store.clearSelected()},z.prototype.clearSelectedCoordinates=function(){return this._ctx.store.clearSelectedCoordinates()},z.prototype.setActionableState=function(t){void 0===t&&(t={});var e={trash:t.trash||!1,combineFeatures:t.combineFeatures||!1,uncombineFeatures:t.uncombineFeatures||!1};return this._ctx.events.actionable(e)},z.prototype.changeMode=function(t,e,n){return void 0===e&&(e={}),void 0===n&&(n={}),this._ctx.events.changeMode(t,e,n)},z.prototype.updateUIClasses=function(t){return this._ctx.ui.queueMapClasses(t)},z.prototype.activateUIButton=function(t){return this._ctx.ui.setActiveButton(t)},z.prototype.featuresAt=function(t,e,n){if(void 0===n&&(n=\"click\"),\"click\"!==n&&\"touch\"!==n)throw new Error(\"invalid buffer type\");return M[n](t,e,this._ctx)},z.prototype.newFeature=function(t){var e=t.geometry.type;return e===f.POINT?new U(this._ctx,t):e===f.LINE_STRING?new j(this._ctx,t):e===f.POLYGON?new V(this._ctx,t):new J(this._ctx,t)},z.prototype.isInstanceOf=function(t,e){if(t===f.POINT)return e instanceof U;if(t===f.LINE_STRING)return e instanceof j;if(t===f.POLYGON)return e instanceof V;if(\"MultiFeature\"===t)return e instanceof J;throw new Error(\"Unknown feature class: \"+t)},z.prototype.doRender=function(t){return this._ctx.store.featureChanged(t)},z.prototype.onSetup=function(){},z.prototype.onDrag=function(){},z.prototype.onClick=function(){},z.prototype.onMouseMove=function(){},z.prototype.onMouseDown=function(){},z.prototype.onMouseUp=function(){},z.prototype.onMouseOut=function(){},z.prototype.onKeyUp=function(){},z.prototype.onKeyDown=function(){},z.prototype.onTouchStart=function(){},z.prototype.onTouchMove=function(){},z.prototype.onTouchEnd=function(){},z.prototype.onTap=function(){},z.prototype.onStop=function(){},z.prototype.onTrash=function(){},z.prototype.onCombineFeature=function(){},z.prototype.onUncombineFeature=function(){},z.prototype.toDisplayFeatures=function(){throw new Error(\"You must overwrite toDisplayFeatures\")};var Y={drag:\"onDrag\",click:\"onClick\",mousemove:\"onMouseMove\",mousedown:\"onMouseDown\",mouseup:\"onMouseUp\",mouseout:\"onMouseOut\",keyup:\"onKeyUp\",keydown:\"onKeyDown\",touchstart:\"onTouchStart\",touchmove:\"onTouchMove\",touchend:\"onTouchEnd\",tap:\"onTap\"},$=Object.keys(Y);function q(t){var e=Object.keys(t);return function(n,o){void 0===o&&(o={});var r={},i=e.reduce((function(e,n){return e[n]=t[n],e}),new z(n));return{start:function(){var e=this;r=i.onSetup(o),$.forEach((function(n){var o,a=Y[n],s=function(){return!1};t[a]&&(s=function(){return!0}),e.on(n,s,(o=a,function(t){return i[o](r,t)}))}))},stop:function(){i.onStop(r)},trash:function(){i.onTrash(r)},combineFeatures:function(){i.onCombineFeatures(r)},uncombineFeatures:function(){i.onUncombineFeatures(r)},render:function(t,e){i.toDisplayFeatures(r,t,e)}}}}function H(t){return[].concat(t).filter((function(t){return void 0!==t}))}function X(){var t=this;if(!(t.ctx.map&&void 0!==t.ctx.map.getSource(l.HOT)))return u();var e=t.ctx.events.currentModeName();t.ctx.ui.queueMapClasses({mode:e});var n=[],o=[];t.isDirty?o=t.getAllIds():(n=t.getChangedIds().filter((function(e){return void 0!==t.get(e)})),o=t.sources.hot.filter((function(e){return e.properties.id&&-1===n.indexOf(e.properties.id)&&void 0!==t.get(e.properties.id)})).map((function(t){return t.properties.id}))),t.sources.hot=[];var r=t.sources.cold.length;t.sources.cold=t.isDirty?[]:t.sources.cold.filter((function(t){var e=t.properties.id||t.properties.parent;return-1===n.indexOf(e)}));var i=r!==t.sources.cold.length||o.length>0;function a(n,o){var r=t.get(n).internal(e);t.ctx.events.currentModeRender(r,(function(e){t.sources[o].push(e)}))}if(n.forEach((function(t){return a(t,\"hot\")})),o.forEach((function(t){return a(t,\"cold\")})),i&&t.ctx.map.getSource(l.COLD).setData({type:f.FEATURE_COLLECTION,features:t.sources.cold}),t.ctx.map.getSource(l.HOT).setData({type:f.FEATURE_COLLECTION,features:t.sources.hot}),t._emitSelectionChange&&(t.ctx.map.fire(g.SELECTION_CHANGE,{features:t.getSelected().map((function(t){return t.toGeoJSON()})),points:t.getSelectedCoordinates().map((function(t){return{type:f.FEATURE,properties:{},geometry:{type:f.POINT,coordinates:t.coordinates}}}))}),t._emitSelectionChange=!1),t._deletedFeaturesToEmit.length){var s=t._deletedFeaturesToEmit.map((function(t){return t.toGeoJSON()}));t._deletedFeaturesToEmit=[],t.ctx.map.fire(g.DELETE,{features:s})}function u(){t.isDirty=!1,t.clearChangedIds()}u(),t.ctx.map.fire(g.RENDER,{})}function Z(t){var e,n=this;this._features={},this._featureIds=new I,this._selectedFeatureIds=new I,this._selectedCoordinates=[],this._changedFeatureIds=new I,this._deletedFeaturesToEmit=[],this._emitSelectionChange=!1,this._mapInitialConfig={},this.ctx=t,this.sources={hot:[],cold:[]},this.render=function(){e||(e=requestAnimationFrame((function(){e=null,X.call(n)})))},this.isDirty=!1}function W(t,e){var n=t._selectedCoordinates.filter((function(e){return t._selectedFeatureIds.has(e.feature_id)}));t._selectedCoordinates.length===n.length||e.silent||(t._emitSelectionChange=!0),t._selectedCoordinates=n}Z.prototype.createRenderBatch=function(){var t=this,e=this.render,n=0;return this.render=function(){n++},function(){t.render=e,n>0&&t.render()}},Z.prototype.setDirty=function(){return this.isDirty=!0,this},Z.prototype.featureChanged=function(t){return this._changedFeatureIds.add(t),this},Z.prototype.getChangedIds=function(){return this._changedFeatureIds.values()},Z.prototype.clearChangedIds=function(){return this._changedFeatureIds.clear(),this},Z.prototype.getAllIds=function(){return this._featureIds.values()},Z.prototype.add=function(t){return this.featureChanged(t.id),this._features[t.id]=t,this._featureIds.add(t.id),this},Z.prototype.delete=function(t,e){var n=this;return void 0===e&&(e={}),H(t).forEach((function(t){n._featureIds.has(t)&&(n._featureIds.delete(t),n._selectedFeatureIds.delete(t),e.silent||-1===n._deletedFeaturesToEmit.indexOf(n._features[t])&&n._deletedFeaturesToEmit.push(n._features[t]),delete n._features[t],n.isDirty=!0)})),W(this,e),this},Z.prototype.get=function(t){return this._features[t]},Z.prototype.getAll=function(){var t=this;return Object.keys(this._features).map((function(e){return t._features[e]}))},Z.prototype.select=function(t,e){var n=this;return void 0===e&&(e={}),H(t).forEach((function(t){n._selectedFeatureIds.has(t)||(n._selectedFeatureIds.add(t),n._changedFeatureIds.add(t),e.silent||(n._emitSelectionChange=!0))})),this},Z.prototype.deselect=function(t,e){var n=this;return void 0===e&&(e={}),H(t).forEach((function(t){n._selectedFeatureIds.has(t)&&(n._selectedFeatureIds.delete(t),n._changedFeatureIds.add(t),e.silent||(n._emitSelectionChange=!0))})),W(this,e),this},Z.prototype.clearSelected=function(t){return void 0===t&&(t={}),this.deselect(this._selectedFeatureIds.values(),{silent:t.silent}),this},Z.prototype.setSelected=function(t,e){var n=this;return void 0===e&&(e={}),t=H(t),this.deselect(this._selectedFeatureIds.values().filter((function(e){return-1===t.indexOf(e)})),{silent:e.silent}),this.select(t.filter((function(t){return!n._selectedFeatureIds.has(t)})),{silent:e.silent}),this},Z.prototype.setSelectedCoordinates=function(t){return this._selectedCoordinates=t,this._emitSelectionChange=!0,this},Z.prototype.clearSelectedCoordinates=function(){return this._selectedCoordinates=[],this._emitSelectionChange=!0,this},Z.prototype.getSelectedIds=function(){return this._selectedFeatureIds.values()},Z.prototype.getSelected=function(){var t=this;return this._selectedFeatureIds.values().map((function(e){return t.get(e)}))},Z.prototype.getSelectedCoordinates=function(){var t=this;return this._selectedCoordinates.map((function(e){return{coordinates:t.get(e.feature_id).getCoordinate(e.coord_path)}}))},Z.prototype.isSelected=function(t){return this._selectedFeatureIds.has(t)},Z.prototype.setFeatureProperty=function(t,e,n){this.get(t).setProperty(e,n),this.featureChanged(t)},Z.prototype.storeMapConfig=function(){var t=this;_.forEach((function(e){t.ctx.map[e]&&(t._mapInitialConfig[e]=t.ctx.map[e].isEnabled())}))},Z.prototype.restoreMapConfig=function(){var t=this;Object.keys(this._mapInitialConfig).forEach((function(e){t._mapInitialConfig[e]?t.ctx.map[e].enable():t.ctx.map[e].disable()}))},Z.prototype.getInitialConfigValue=function(t){return void 0===this._mapInitialConfig[t]||this._mapInitialConfig[t]};var K=function(){for(var t=arguments,e={},n=0;n<arguments.length;n++){var o=t[n];for(var r in o)Q.call(o,r)&&(e[r]=o[r])}return e},Q=Object.prototype.hasOwnProperty;var tt=e(K),et=[\"mode\",\"feature\",\"mouse\"];function nt(e){var n=null,o=null,r={onRemove:function(){return e.map.off(\"load\",r.connect),clearInterval(o),r.removeLayers(),e.store.restoreMapConfig(),e.ui.removeButtons(),e.events.removeEventListeners(),e.ui.clearMapClasses(),e.boxZoomInitial&&e.map.boxZoom.enable(),e.map=null,e.container=null,e.store=null,n&&n.parentNode&&n.parentNode.removeChild(n),n=null,this},connect:function(){e.map.off(\"load\",r.connect),clearInterval(o),r.addLayers(),e.store.storeMapConfig(),e.events.addEventListeners()},onAdd:function(i){var a=i.fire;return i.fire=function(t,e){var n=arguments;return 1===a.length&&1!==arguments.length&&(n=[tt({},{type:t},e)]),a.apply(i,n)},e.map=i,e.events=function(e){var n=Object.keys(e.options.modes).reduce((function(t,n){return t[n]=q(e.options.modes[n]),t}),{}),o={},r={},i={},a=null,s=null;i.drag=function(t,n){n({point:t.point,time:(new Date).getTime()})?(e.ui.queueMapClasses({mouse:d.DRAG}),s.drag(t)):t.originalEvent.stopPropagation()},i.mousedrag=function(t){i.drag(t,(function(t){return!P(o,t)}))},i.touchdrag=function(t){i.drag(t,(function(t){return!F(r,t)}))},i.mousemove=function(t){if(1===(void 0!==t.originalEvent.buttons?t.originalEvent.buttons:t.originalEvent.which))return i.mousedrag(t);var n=N(t,e);t.featureTarget=n,s.mousemove(t)},i.mousedown=function(t){o={time:(new Date).getTime(),point:t.point};var n=N(t,e);t.featureTarget=n,s.mousedown(t)},i.mouseup=function(t){var n=N(t,e);t.featureTarget=n,P(o,{point:t.point,time:(new Date).getTime()})?s.click(t):s.mouseup(t)},i.mouseout=function(t){s.mouseout(t)},i.touchstart=function(t){if(e.options.touchEnabled){r={time:(new Date).getTime(),point:t.point};var n=M.touch(t,null,e)[0];t.featureTarget=n,s.touchstart(t)}},i.touchmove=function(t){if(e.options.touchEnabled)return s.touchmove(t),i.touchdrag(t)},i.touchend=function(t){if(t.originalEvent.preventDefault(),e.options.touchEnabled){var n=M.touch(t,null,e)[0];t.featureTarget=n,F(r,{time:(new Date).getTime(),point:t.point})?s.tap(t):s.touchend(t)}};var u=function(t){return!(8===t||46===t||t>=48&&t<=57)};function c(o,r,i){void 0===i&&(i={}),s.stop();var u=n[o];if(void 0===u)throw new Error(o+\" is not valid\");a=o;var c=u(e,r);s=t(c,e),i.silent||e.map.fire(g.MODE_CHANGE,{mode:o}),e.store.setDirty(),e.store.render()}i.keydown=function(t){(t.srcElement||t.target).classList.contains(\"mapboxgl-canvas\")&&(8!==t.keyCode&&46!==t.keyCode||!e.options.controls.trash?u(t.keyCode)?s.keydown(t):49===t.keyCode&&e.options.controls.point?c(h.DRAW_POINT):50===t.keyCode&&e.options.controls.line_string?c(h.DRAW_LINE_STRING):51===t.keyCode&&e.options.controls.polygon&&c(h.DRAW_POLYGON):(t.preventDefault(),s.trash()))},i.keyup=function(t){u(t.keyCode)&&s.keyup(t)},i.zoomend=function(){e.store.changeZoom()},i.data=function(t){if(\"style\"===t.dataType){var n=e.setup,o=e.map,r=e.options,i=e.store;r.styles.some((function(t){return o.getLayer(t.id)}))||(n.addLayers(),i.setDirty(),i.render())}};var l={trash:!1,combineFeatures:!1,uncombineFeatures:!1};return{start:function(){a=e.options.defaultMode,s=t(n[a](e),e)},changeMode:c,actionable:function(t){var n=!1;Object.keys(t).forEach((function(e){if(void 0===l[e])throw new Error(\"Invalid action type\");l[e]!==t[e]&&(n=!0),l[e]=t[e]})),n&&e.map.fire(g.ACTIONABLE,{actions:l})},currentModeName:function(){return a},currentModeRender:function(t,e){return s.render(t,e)},fire:function(t,e){i[t]&&i[t](e)},addEventListeners:function(){e.map.on(\"mousemove\",i.mousemove),e.map.on(\"mousedown\",i.mousedown),e.map.on(\"mouseup\",i.mouseup),e.map.on(\"data\",i.data),e.map.on(\"touchmove\",i.touchmove),e.map.on(\"touchstart\",i.touchstart),e.map.on(\"touchend\",i.touchend),e.container.addEventListener(\"mouseout\",i.mouseout),e.options.keybindings&&(e.container.addEventListener(\"keydown\",i.keydown),e.container.addEventListener(\"keyup\",i.keyup))},removeEventListeners:function(){e.map.off(\"mousemove\",i.mousemove),e.map.off(\"mousedown\",i.mousedown),e.map.off(\"mouseup\",i.mouseup),e.map.off(\"data\",i.data),e.map.off(\"touchmove\",i.touchmove),e.map.off(\"touchstart\",i.touchstart),e.map.off(\"touchend\",i.touchend),e.container.removeEventListener(\"mouseout\",i.mouseout),e.options.keybindings&&(e.container.removeEventListener(\"keydown\",i.keydown),e.container.removeEventListener(\"keyup\",i.keyup))},trash:function(t){s.trash(t)},combineFeatures:function(){s.combineFeatures()},uncombineFeatures:function(){s.uncombineFeatures()},getMode:function(){return a}}}(e),e.ui=function(t){var e={},n=null,o={mode:null,feature:null,mouse:null},r={mode:null,feature:null,mouse:null};function i(t){r=tt(r,t)}function a(){var e,n;if(t.container){var i=[],a=[];et.forEach((function(t){r[t]!==o[t]&&(i.push(t+\"-\"+o[t]),null!==r[t]&&a.push(t+\"-\"+r[t]))})),i.length>0&&(e=t.container.classList).remove.apply(e,i),a.length>0&&(n=t.container.classList).add.apply(n,a),o=tt(o,r)}}function s(t,e){void 0===e&&(e={});var o=document.createElement(\"button\");return o.className=c.CONTROL_BUTTON+\" \"+e.className,o.setAttribute(\"title\",e.title),e.container.appendChild(o),o.addEventListener(\"click\",(function(o){if(o.preventDefault(),o.stopPropagation(),o.target===n)return u(),void e.onDeactivate();l(t),e.onActivate()}),!0),o}function u(){n&&(n.classList.remove(c.ACTIVE_BUTTON),n=null)}function l(t){u();var o=e[t];o&&o&&\"trash\"!==t&&(o.classList.add(c.ACTIVE_BUTTON),n=o)}return{setActiveButton:l,queueMapClasses:i,updateMapClasses:a,clearMapClasses:function(){i({mode:null,feature:null,mouse:null}),a()},addButtons:function(){var n=t.options.controls,o=document.createElement(\"div\");return o.className=c.CONTROL_GROUP+\" \"+c.CONTROL_BASE,n?(n[p.LINE]&&(e[p.LINE]=s(p.LINE,{container:o,className:c.CONTROL_BUTTON_LINE,title:\"LineString tool \"+(t.options.keybindings?\"(l)\":\"\"),onActivate:function(){return t.events.changeMode(h.DRAW_LINE_STRING)},onDeactivate:function(){return t.events.trash()}})),n[p.POLYGON]&&(e[p.POLYGON]=s(p.POLYGON,{container:o,className:c.CONTROL_BUTTON_POLYGON,title:\"Polygon tool \"+(t.options.keybindings?\"(p)\":\"\"),onActivate:function(){return t.events.changeMode(h.DRAW_POLYGON)},onDeactivate:function(){return t.events.trash()}})),n[p.POINT]&&(e[p.POINT]=s(p.POINT,{container:o,className:c.CONTROL_BUTTON_POINT,title:\"Marker tool \"+(t.options.keybindings?\"(m)\":\"\"),onActivate:function(){return t.events.changeMode(h.DRAW_POINT)},onDeactivate:function(){return t.events.trash()}})),n.trash&&(e.trash=s(\"trash\",{container:o,className:c.CONTROL_BUTTON_TRASH,title:\"Delete\",onActivate:function(){t.events.trash()}})),n.combine_features&&(e.combine_features=s(\"combineFeatures\",{container:o,className:c.CONTROL_BUTTON_COMBINE_FEATURES,title:\"Combine\",onActivate:function(){t.events.combineFeatures()}})),n.uncombine_features&&(e.uncombine_features=s(\"uncombineFeatures\",{container:o,className:c.CONTROL_BUTTON_UNCOMBINE_FEATURES,title:\"Uncombine\",onActivate:function(){t.events.uncombineFeatures()}})),o):o},removeButtons:function(){Object.keys(e).forEach((function(t){var n=e[t];n.parentNode&&n.parentNode.removeChild(n),delete e[t]}))}}}(e),e.container=i.getContainer(),e.store=new Z(e),n=e.ui.addButtons(),e.options.boxSelect&&(e.boxZoomInitial=i.boxZoom.isEnabled(),i.boxZoom.disable(),i.dragPan.disable(),i.dragPan.enable()),i.loaded()?r.connect():(i.on(\"load\",r.connect),o=setInterval((function(){i.loaded()&&r.connect()}),16)),e.events.start(),n},addLayers:function(){e.map.addSource(l.COLD,{data:{type:f.FEATURE_COLLECTION,features:[]},type:\"geojson\"}),e.map.addSource(l.HOT,{data:{type:f.FEATURE_COLLECTION,features:[]},type:\"geojson\"}),e.options.styles.forEach((function(t){e.map.addLayer(t)})),e.store.setDirty(!0),e.store.render()},removeLayers:function(){e.options.styles.forEach((function(t){e.map.getLayer(t.id)&&e.map.removeLayer(t.id)})),e.map.getSource(l.COLD)&&e.map.removeSource(l.COLD),e.map.getSource(l.HOT)&&e.map.removeSource(l.HOT)}};return e.setup=r,r}var ot=[{id:\"gl-draw-polygon-fill-inactive\",type:\"fill\",filter:[\"all\",[\"==\",\"active\",\"false\"],[\"==\",\"$type\",\"Polygon\"],[\"!=\",\"mode\",\"static\"]],paint:{\"fill-color\":\"#3bb2d0\",\"fill-outline-color\":\"#3bb2d0\",\"fill-opacity\":.1}},{id:\"gl-draw-polygon-fill-active\",type:\"fill\",filter:[\"all\",[\"==\",\"active\",\"true\"],[\"==\",\"$type\",\"Polygon\"]],paint:{\"fill-color\":\"#fbb03b\",\"fill-outline-color\":\"#fbb03b\",\"fill-opacity\":.1}},{id:\"gl-draw-polygon-midpoint\",type:\"circle\",filter:[\"all\",[\"==\",\"$type\",\"Point\"],[\"==\",\"meta\",\"midpoint\"]],paint:{\"circle-radius\":3,\"circle-color\":\"#fbb03b\"}},{id:\"gl-draw-polygon-stroke-inactive\",type:\"line\",filter:[\"all\",[\"==\",\"active\",\"false\"],[\"==\",\"$type\",\"Polygon\"],[\"!=\",\"mode\",\"static\"]],layout:{\"line-cap\":\"round\",\"line-join\":\"round\"},paint:{\"line-color\":\"#3bb2d0\",\"line-width\":2}},{id:\"gl-draw-polygon-stroke-active\",type:\"line\",filter:[\"all\",[\"==\",\"active\",\"true\"],[\"==\",\"$type\",\"Polygon\"]],layout:{\"line-cap\":\"round\",\"line-join\":\"round\"},paint:{\"line-color\":\"#fbb03b\",\"line-dasharray\":[.2,2],\"line-width\":2}},{id:\"gl-draw-line-inactive\",type:\"line\",filter:[\"all\",[\"==\",\"active\",\"false\"],[\"==\",\"$type\",\"LineString\"],[\"!=\",\"mode\",\"static\"]],layout:{\"line-cap\":\"round\",\"line-join\":\"round\"},paint:{\"line-color\":\"#3bb2d0\",\"line-width\":2}},{id:\"gl-draw-line-active\",type:\"line\",filter:[\"all\",[\"==\",\"$type\",\"LineString\"],[\"==\",\"active\",\"true\"]],layout:{\"line-cap\":\"round\",\"line-join\":\"round\"},paint:{\"line-color\":\"#fbb03b\",\"line-dasharray\":[.2,2],\"line-width\":2}},{id:\"gl-draw-polygon-and-line-vertex-stroke-inactive\",type:\"circle\",filter:[\"all\",[\"==\",\"meta\",\"vertex\"],[\"==\",\"$type\",\"Point\"],[\"!=\",\"mode\",\"static\"]],paint:{\"circle-radius\":5,\"circle-color\":\"#fff\"}},{id:\"gl-draw-polygon-and-line-vertex-inactive\",type:\"circle\",filter:[\"all\",[\"==\",\"meta\",\"vertex\"],[\"==\",\"$type\",\"Point\"],[\"!=\",\"mode\",\"static\"]],paint:{\"circle-radius\":3,\"circle-color\":\"#fbb03b\"}},{id:\"gl-draw-point-point-stroke-inactive\",type:\"circle\",filter:[\"all\",[\"==\",\"active\",\"false\"],[\"==\",\"$type\",\"Point\"],[\"==\",\"meta\",\"feature\"],[\"!=\",\"mode\",\"static\"]],paint:{\"circle-radius\":5,\"circle-opacity\":1,\"circle-color\":\"#fff\"}},{id:\"gl-draw-point-inactive\",type:\"circle\",filter:[\"all\",[\"==\",\"active\",\"false\"],[\"==\",\"$type\",\"Point\"],[\"==\",\"meta\",\"feature\"],[\"!=\",\"mode\",\"static\"]],paint:{\"circle-radius\":3,\"circle-color\":\"#3bb2d0\"}},{id:\"gl-draw-point-stroke-active\",type:\"circle\",filter:[\"all\",[\"==\",\"$type\",\"Point\"],[\"==\",\"active\",\"true\"],[\"!=\",\"meta\",\"midpoint\"]],paint:{\"circle-radius\":7,\"circle-color\":\"#fff\"}},{id:\"gl-draw-point-active\",type:\"circle\",filter:[\"all\",[\"==\",\"$type\",\"Point\"],[\"!=\",\"meta\",\"midpoint\"],[\"==\",\"active\",\"true\"]],paint:{\"circle-radius\":5,\"circle-color\":\"#fbb03b\"}},{id:\"gl-draw-polygon-fill-static\",type:\"fill\",filter:[\"all\",[\"==\",\"mode\",\"static\"],[\"==\",\"$type\",\"Polygon\"]],paint:{\"fill-color\":\"#404040\",\"fill-outline-color\":\"#404040\",\"fill-opacity\":.1}},{id:\"gl-draw-polygon-stroke-static\",type:\"line\",filter:[\"all\",[\"==\",\"mode\",\"static\"],[\"==\",\"$type\",\"Polygon\"]],layout:{\"line-cap\":\"round\",\"line-join\":\"round\"},paint:{\"line-color\":\"#404040\",\"line-width\":2}},{id:\"gl-draw-line-static\",type:\"line\",filter:[\"all\",[\"==\",\"mode\",\"static\"],[\"==\",\"$type\",\"LineString\"]],layout:{\"line-cap\":\"round\",\"line-join\":\"round\"},paint:{\"line-color\":\"#404040\",\"line-width\":2}},{id:\"gl-draw-point-static\",type:\"circle\",filter:[\"all\",[\"==\",\"mode\",\"static\"],[\"==\",\"$type\",\"Point\"]],paint:{\"circle-radius\":5,\"circle-color\":\"#404040\"}}];function rt(t){return function(e){var n=e.featureTarget;return!!n&&(!!n.properties&&n.properties.meta===t)}}function it(t){return!!t.originalEvent&&(!!t.originalEvent.shiftKey&&0===t.originalEvent.button)}function at(t){return!!t.featureTarget&&(!!t.featureTarget.properties&&(t.featureTarget.properties.active===m.ACTIVE&&t.featureTarget.properties.meta===v.FEATURE))}function st(t){return!!t.featureTarget&&(!!t.featureTarget.properties&&(t.featureTarget.properties.active===m.INACTIVE&&t.featureTarget.properties.meta===v.FEATURE))}function ut(t){return void 0===t.featureTarget}function ct(t){return!!t.featureTarget&&(!!t.featureTarget.properties&&t.featureTarget.properties.meta===v.FEATURE)}function lt(t){var e=t.featureTarget;return!!e&&(!!e.properties&&e.properties.meta===v.VERTEX)}function dt(t){return!!t.originalEvent&&!0===t.originalEvent.shiftKey}function pt(t){return 27===t.keyCode}function ft(t){return 13===t.keyCode}var ht=Object.freeze({__proto__:null,isOfMetaType:rt,isShiftMousedown:it,isActiveFeature:at,isInactiveFeature:st,noTarget:ut,isFeature:ct,isVertex:lt,isShiftDown:dt,isEscapeKey:pt,isEnterKey:ft,isTrue:function(){return!0}}),gt=yt;function yt(t,e){this.x=t,this.y=e}yt.prototype={clone:function(){return new yt(this.x,this.y)},add:function(t){return this.clone()._add(t)},sub:function(t){return this.clone()._sub(t)},multByPoint:function(t){return this.clone()._multByPoint(t)},divByPoint:function(t){return this.clone()._divByPoint(t)},mult:function(t){return this.clone()._mult(t)},div:function(t){return this.clone()._div(t)},rotate:function(t){return this.clone()._rotate(t)},rotateAround:function(t,e){return this.clone()._rotateAround(t,e)},matMult:function(t){return this.clone()._matMult(t)},unit:function(){return this.clone()._unit()},perp:function(){return this.clone()._perp()},round:function(){return this.clone()._round()},mag:function(){return Math.sqrt(this.x*this.x+this.y*this.y)},equals:function(t){return this.x===t.x&&this.y===t.y},dist:function(t){return Math.sqrt(this.distSqr(t))},distSqr:function(t){var e=t.x-this.x,n=t.y-this.y;return e*e+n*n},angle:function(){return Math.atan2(this.y,this.x)},angleTo:function(t){return Math.atan2(this.y-t.y,this.x-t.x)},angleWith:function(t){return this.angleWithSep(t.x,t.y)},angleWithSep:function(t,e){return Math.atan2(this.x*e-this.y*t,this.x*t+this.y*e)},_matMult:function(t){var e=t[0]*this.x+t[1]*this.y,n=t[2]*this.x+t[3]*this.y;return this.x=e,this.y=n,this},_add:function(t){return this.x+=t.x,this.y+=t.y,this},_sub:function(t){return this.x-=t.x,this.y-=t.y,this},_mult:function(t){return this.x*=t,this.y*=t,this},_div:function(t){return this.x/=t,this.y/=t,this},_multByPoint:function(t){return this.x*=t.x,this.y*=t.y,this},_divByPoint:function(t){return this.x/=t.x,this.y/=t.y,this},_unit:function(){return this._div(this.mag()),this},_perp:function(){var t=this.y;return this.y=this.x,this.x=-t,this},_rotate:function(t){var e=Math.cos(t),n=Math.sin(t),o=e*this.x-n*this.y,r=n*this.x+e*this.y;return this.x=o,this.y=r,this},_rotateAround:function(t,e){var n=Math.cos(t),o=Math.sin(t),r=e.x+n*(this.x-e.x)-o*(this.y-e.y),i=e.y+o*(this.x-e.x)+n*(this.y-e.y);return this.x=r,this.y=i,this},_round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}},yt.convert=function(t){return t instanceof yt?t:Array.isArray(t)?new yt(t[0],t[1]):t};var vt=e(gt);function mt(t,e){var n=e.getBoundingClientRect();return new vt(t.clientX-n.left-(e.clientLeft||0),t.clientY-n.top-(e.clientTop||0))}function _t(t,e,n,o){return{type:f.FEATURE,properties:{meta:v.VERTEX,parent:t,coord_path:n,active:o?m.ACTIVE:m.INACTIVE},geometry:{type:f.POINT,coordinates:e}}}function bt(t,e,n){var o=e.geometry.coordinates,r=n.geometry.coordinates;if(o[1]>85||o[1]<b||r[1]>85||r[1]<b)return null;var i={lng:(o[0]+r[0])/2,lat:(o[1]+r[1])/2};return{type:f.FEATURE,properties:{meta:v.MIDPOINT,parent:t,lng:i.lng,lat:i.lat,coord_path:n.properties.coord_path},geometry:{type:f.POINT,coordinates:[i.lng,i.lat]}}}function Et(t,e,n){void 0===e&&(e={}),void 0===n&&(n=null);var o,r=t.geometry,i=r.type,a=r.coordinates,s=t.properties&&t.properties.id,u=[];function c(t,n){var o=\"\",r=null;t.forEach((function(t,i){var a=null!=n?n+\".\"+i:String(i),c=_t(s,t,a,l(a));if(e.midpoints&&r){var d=bt(s,r,c);d&&u.push(d)}r=c;var p=JSON.stringify(t);o!==p&&u.push(c),0===i&&(o=p)}))}function l(t){return!!e.selectedPaths&&-1!==e.selectedPaths.indexOf(t)}return i===f.POINT?u.push(_t(s,a,n,l(n))):i===f.POLYGON?a.forEach((function(t,e){c(t,null!==n?n+\".\"+e:String(e))})):i===f.LINE_STRING?c(a,n):0===i.indexOf(f.MULTI_PREFIX)&&(o=i.replace(f.MULTI_PREFIX,\"\"),a.forEach((function(n,r){var i={type:f.FEATURE,properties:t.properties,geometry:{type:o,coordinates:n}};u=u.concat(Et(i,e,r))}))),u}var Tt={enable:function(t){setTimeout((function(){t.map&&t.map.doubleClickZoom&&t._ctx&&t._ctx.store&&t._ctx.store.getInitialConfigValue&&t._ctx.store.getInitialConfigValue(\"doubleClickZoom\")&&t.map.doubleClickZoom.enable()}),0)},disable:function(t){setTimeout((function(){t.map&&t.map.doubleClickZoom&&t.map.doubleClickZoom.disable()}),0)}},Ct={exports:{}},Ot=function(t){if(!t||!t.type)return null;var e=St[t.type];if(!e)return null;if(\"geometry\"===e)return{type:\"FeatureCollection\",features:[{type:\"Feature\",properties:{},geometry:t}]};if(\"feature\"===e)return{type:\"FeatureCollection\",features:[t]};if(\"featurecollection\"===e)return t},St={Point:\"geometry\",MultiPoint:\"geometry\",LineString:\"geometry\",MultiLineString:\"geometry\",Polygon:\"geometry\",MultiPolygon:\"geometry\",GeometryCollection:\"geometry\",Feature:\"feature\",FeatureCollection:\"featurecollection\"};var It=e(Ot);var xt=Object.freeze({__proto__:null,default:function t(e){switch(e&&e.type||null){case\"FeatureCollection\":return e.features=e.features.reduce((function(e,n){return e.concat(t(n))}),[]),e;case\"Feature\":return e.geometry?t(e.geometry).map((function(t){var n={type:\"Feature\",properties:JSON.parse(JSON.stringify(e.properties)),geometry:t};return void 0!==e.id&&(n.id=e.id),n})):[e];case\"MultiPoint\":return e.coordinates.map((function(t){return{type:\"Point\",coordinates:t}}));case\"MultiPolygon\":return e.coordinates.map((function(t){return{type:\"Polygon\",coordinates:t}}));case\"MultiLineString\":return e.coordinates.map((function(t){return{type:\"LineString\",coordinates:t}}));case\"GeometryCollection\":return e.geometries.map(t).reduce((function(t,e){return t.concat(e)}),[]);case\"Point\":case\"Polygon\":case\"LineString\":return[e]}}}),Mt=Ot,Lt=n(xt),Nt=function(t){return function t(e){if(Array.isArray(e)&&e.length&&\"number\"==typeof e[0])return[e];return e.reduce((function(e,n){return Array.isArray(n)&&Array.isArray(n[0])?e.concat(t(n)):(e.push(n),e)}),[])}(t)};Lt instanceof Function||(Lt=Lt.default);var At={exports:{}},Pt=At.exports=function(t){return new Ft(t)};function Ft(t){this.value=t}function wt(t,e,n){var o=[],r=[],i=!0;return function t(a){var s=n?Rt(a):a,u={},c=!0,l={node:s,node_:a,path:[].concat(o),parent:r[r.length-1],parents:r,key:o.slice(-1)[0],isRoot:0===o.length,level:o.length,circular:null,update:function(t,e){l.isRoot||(l.parent.node[l.key]=t),l.node=t,e&&(c=!1)},delete:function(t){delete l.parent.node[l.key],t&&(c=!1)},remove:function(t){Ut(l.parent.node)?l.parent.node.splice(l.key,1):delete l.parent.node[l.key],t&&(c=!1)},keys:null,before:function(t){u.before=t},after:function(t){u.after=t},pre:function(t){u.pre=t},post:function(t){u.post=t},stop:function(){i=!1},block:function(){c=!1}};if(!i)return l;function d(){if(\"object\"==typeof l.node&&null!==l.node){l.keys&&l.node_===l.node||(l.keys=kt(l.node)),l.isLeaf=0==l.keys.length;for(var t=0;t<r.length;t++)if(r[t].node_===a){l.circular=r[t];break}}else l.isLeaf=!0,l.keys=null;l.notLeaf=!l.isLeaf,l.notRoot=!l.isRoot}d();var p=e.call(l,l.node);return void 0!==p&&l.update&&l.update(p),u.before&&u.before.call(l,l.node),c?(\"object\"!=typeof l.node||null===l.node||l.circular||(r.push(l),d(),jt(l.keys,(function(e,r){o.push(e),u.pre&&u.pre.call(l,l.node[e],e);var i=t(l.node[e]);n&&Vt.call(l.node,e)&&(l.node[e]=i.node),i.isLast=r==l.keys.length-1,i.isFirst=0==r,u.post&&u.post.call(l,i),o.pop()})),r.pop()),u.after&&u.after.call(l,l.node),l):l}(t).node}function Rt(t){if(\"object\"==typeof t&&null!==t){var e;if(Ut(t))e=[];else if(\"[object Date]\"===Dt(t))e=new Date(t.getTime?t.getTime():t);else if(function(t){return\"[object RegExp]\"===Dt(t)}(t))e=new RegExp(t);else if(function(t){return\"[object Error]\"===Dt(t)}(t))e={message:t.message};else if(function(t){return\"[object Boolean]\"===Dt(t)}(t))e=new Boolean(t);else if(function(t){return\"[object Number]\"===Dt(t)}(t))e=new Number(t);else if(function(t){return\"[object String]\"===Dt(t)}(t))e=new String(t);else if(Object.create&&Object.getPrototypeOf)e=Object.create(Object.getPrototypeOf(t));else if(t.constructor===Object)e={};else{var n=t.constructor&&t.constructor.prototype||t.__proto__||{},o=function(){};o.prototype=n,e=new o}return jt(kt(t),(function(n){e[n]=t[n]})),e}return t}Ft.prototype.get=function(t){for(var e=this.value,n=0;n<t.length;n++){var o=t[n];if(!e||!Vt.call(e,o)){e=void 0;break}e=e[o]}return e},Ft.prototype.has=function(t){for(var e=this.value,n=0;n<t.length;n++){var o=t[n];if(!e||!Vt.call(e,o))return!1;e=e[o]}return!0},Ft.prototype.set=function(t,e){for(var n=this.value,o=0;o<t.length-1;o++){var r=t[o];Vt.call(n,r)||(n[r]={}),n=n[r]}return n[t[o]]=e,e},Ft.prototype.map=function(t){return wt(this.value,t,!0)},Ft.prototype.forEach=function(t){return this.value=wt(this.value,t,!1),this.value},Ft.prototype.reduce=function(t,e){var n=1===arguments.length,o=n?this.value:e;return this.forEach((function(e){this.isRoot&&n||(o=t.call(this,o,e))})),o},Ft.prototype.paths=function(){var t=[];return this.forEach((function(e){t.push(this.path)})),t},Ft.prototype.nodes=function(){var t=[];return this.forEach((function(e){t.push(this.node)})),t},Ft.prototype.clone=function(){var t=[],e=[];return function n(o){for(var r=0;r<t.length;r++)if(t[r]===o)return e[r];if(\"object\"==typeof o&&null!==o){var i=Rt(o);return t.push(o),e.push(i),jt(kt(o),(function(t){i[t]=n(o[t])})),t.pop(),e.pop(),i}return o}(this.value)};var kt=Object.keys||function(t){var e=[];for(var n in t)e.push(n);return e};function Dt(t){return Object.prototype.toString.call(t)}var Ut=Array.isArray||function(t){return\"[object Array]\"===Object.prototype.toString.call(t)},jt=function(t,e){if(t.forEach)return t.forEach(e);for(var n=0;n<t.length;n++)e(t[n],n,t)};jt(kt(Ft.prototype),(function(t){Pt[t]=function(e){var n=[].slice.call(arguments,1),o=new Ft(e);return o[t].apply(o,n)}}));var Vt=Object.hasOwnProperty||function(t,e){return e in t},Bt=At.exports,Gt=Jt;function Jt(t){if(!(this instanceof Jt))return new Jt(t);this._bbox=t||[1/0,1/0,-1/0,-1/0],this._valid=!!t}Jt.prototype.include=function(t){return this._valid=!0,this._bbox[0]=Math.min(this._bbox[0],t[0]),this._bbox[1]=Math.min(this._bbox[1],t[1]),this._bbox[2]=Math.max(this._bbox[2],t[0]),this._bbox[3]=Math.max(this._bbox[3],t[1]),this},Jt.prototype.equals=function(t){var e;return e=t instanceof Jt?t.bbox():t,this._bbox[0]==e[0]&&this._bbox[1]==e[1]&&this._bbox[2]==e[2]&&this._bbox[3]==e[3]},Jt.prototype.center=function(t){return this._valid?[(this._bbox[0]+this._bbox[2])/2,(this._bbox[1]+this._bbox[3])/2]:null},Jt.prototype.union=function(t){var e;return this._valid=!0,e=t instanceof Jt?t.bbox():t,this._bbox[0]=Math.min(this._bbox[0],e[0]),this._bbox[1]=Math.min(this._bbox[1],e[1]),this._bbox[2]=Math.max(this._bbox[2],e[2]),this._bbox[3]=Math.max(this._bbox[3],e[3]),this},Jt.prototype.bbox=function(){return this._valid?this._bbox:null},Jt.prototype.contains=function(t){if(!t)return this._fastContains();if(!this._valid)return null;var e=t[0],n=t[1];return this._bbox[0]<=e&&this._bbox[1]<=n&&this._bbox[2]>=e&&this._bbox[3]>=n},Jt.prototype.intersect=function(t){return this._valid?(e=t instanceof Jt?t.bbox():t,!(this._bbox[0]>e[2]||this._bbox[2]<e[0]||this._bbox[3]<e[1]||this._bbox[1]>e[3])):null;var e},Jt.prototype._fastContains=function(){if(!this._valid)return new Function(\"return null;\");var t=\"return \"+this._bbox[0]+\"<= ll[0] &&\"+this._bbox[1]+\"<= ll[1] &&\"+this._bbox[2]+\">= ll[0] &&\"+this._bbox[3]+\">= ll[1]\";return new Function(\"ll\",t)},Jt.prototype.polygon=function(){return this._valid?{type:\"Polygon\",coordinates:[[[this._bbox[0],this._bbox[1]],[this._bbox[2],this._bbox[1]],[this._bbox[2],this._bbox[3]],[this._bbox[0],this._bbox[3]],[this._bbox[0],this._bbox[1]]]]}:null};var zt=function(t){if(!t)return[];var e=Lt(Mt(t)),n=[];return e.features.forEach((function(t){t.geometry&&(n=n.concat(Nt(t.geometry.coordinates)))})),n},Yt=Bt,$t=Gt,qt={features:[\"FeatureCollection\"],coordinates:[\"Point\",\"MultiPoint\",\"LineString\",\"MultiLineString\",\"Polygon\",\"MultiPolygon\"],geometry:[\"Feature\"],geometries:[\"GeometryCollection\"]},Ht=Object.keys(qt);function Xt(t){for(var e=$t(),n=zt(t),o=0;o<n.length;o++)e.include(n[o]);return e}Ct.exports=function(t){return Xt(t).bbox()},Ct.exports.polygon=function(t){return Xt(t).polygon()},Ct.exports.bboxify=function(t){return Yt(t).map((function(t){t&&(Ht.some((function(e){return!!t[e]&&-1!==qt[e].indexOf(t.type)}))&&(t.bbox=Xt(t).bbox(),this.update(t)))}))};var Zt=e(Ct.exports),Wt=-90;function Kt(t,e){var n=Wt,o=90,r=Wt,i=90,a=270,s=-270;t.forEach((function(t){var e=Zt(t),u=e[1],c=e[3],l=e[0],d=e[2];u>n&&(n=u),c<o&&(o=c),c>r&&(r=c),u<i&&(i=u),l<a&&(a=l),d>s&&(s=d)}));var u=e;return n+u.lat>85&&(u.lat=85-n),r+u.lat>90&&(u.lat=90-r),o+u.lat<-85&&(u.lat=-85-o),i+u.lat<Wt&&(u.lat=Wt-i),a+u.lng<=-270&&(u.lng+=360*Math.ceil(Math.abs(u.lng)/360)),s+u.lng>=270&&(u.lng-=360*Math.ceil(Math.abs(u.lng)/360)),u}function Qt(t,e){var n=Kt(t.map((function(t){return t.toGeoJSON()})),e);t.forEach((function(t){var e,o=t.getCoordinates(),r=function(t){var e={lng:t[0]+n.lng,lat:t[1]+n.lat};return[e.lng,e.lat]},i=function(t){return t.map((function(t){return r(t)}))};t.type===f.POINT?e=r(o):t.type===f.LINE_STRING||t.type===f.MULTI_POINT?e=o.map(r):t.type===f.POLYGON||t.type===f.MULTI_LINE_STRING?e=o.map(i):t.type===f.MULTI_POLYGON&&(e=o.map((function(t){return t.map((function(t){return i(t)}))}))),t.incomingCoords(e)}))}var te={onSetup:function(t){var e=this,n={dragMoveLocation:null,boxSelectStartLocation:null,boxSelectElement:void 0,boxSelecting:!1,canBoxSelect:!1,dragMoving:!1,canDragMove:!1,initiallySelectedFeatureIds:t.featureIds||[]};return this.setSelected(n.initiallySelectedFeatureIds.filter((function(t){return void 0!==e.getFeature(t)}))),this.fireActionable(),this.setActionableState({combineFeatures:!0,uncombineFeatures:!0,trash:!0}),n},fireUpdate:function(){this.map.fire(g.UPDATE,{action:y.MOVE,features:this.getSelected().map((function(t){return t.toGeoJSON()}))})},fireActionable:function(){var t=this,e=this.getSelected(),n=e.filter((function(e){return t.isInstanceOf(\"MultiFeature\",e)})),o=!1;if(e.length>1){o=!0;var r=e[0].type.replace(\"Multi\",\"\");e.forEach((function(t){t.type.replace(\"Multi\",\"\")!==r&&(o=!1)}))}var i=n.length>0,a=e.length>0;this.setActionableState({combineFeatures:o,uncombineFeatures:i,trash:a})},getUniqueIds:function(t){return t.length?t.map((function(t){return t.properties.id})).filter((function(t){return void 0!==t})).reduce((function(t,e){return t.add(e),t}),new I).values():[]},stopExtendedInteractions:function(t){t.boxSelectElement&&(t.boxSelectElement.parentNode&&t.boxSelectElement.parentNode.removeChild(t.boxSelectElement),t.boxSelectElement=null),this.map.dragPan.enable(),t.boxSelecting=!1,t.canBoxSelect=!1,t.dragMoving=!1,t.canDragMove=!1},onStop:function(){Tt.enable(this)},onMouseMove:function(t,e){return ct(e)&&t.dragMoving&&this.fireUpdate(),this.stopExtendedInteractions(t),!0},onMouseOut:function(t){return!t.dragMoving||this.fireUpdate()}};te.onTap=te.onClick=function(t,e){return ut(e)?this.clickAnywhere(t,e):rt(v.VERTEX)(e)?this.clickOnVertex(t,e):ct(e)?this.clickOnFeature(t,e):void 0},te.clickAnywhere=function(t){var e=this,n=this.getSelectedIds();n.length&&(this.clearSelectedFeatures(),n.forEach((function(t){return e.doRender(t)}))),Tt.enable(this),this.stopExtendedInteractions(t)},te.clickOnVertex=function(t,e){this.changeMode(h.DIRECT_SELECT,{featureId:e.featureTarget.properties.parent,coordPath:e.featureTarget.properties.coord_path,startPos:e.lngLat}),this.updateUIClasses({mouse:d.MOVE})},te.startOnActiveFeature=function(t,e){this.stopExtendedInteractions(t),this.map.dragPan.disable(),this.doRender(e.featureTarget.properties.id),t.canDragMove=!0,t.dragMoveLocation=e.lngLat},te.clickOnFeature=function(t,e){var n=this;Tt.disable(this),this.stopExtendedInteractions(t);var o=dt(e),r=this.getSelectedIds(),i=e.featureTarget.properties.id,a=this.isSelected(i);if(!o&&a&&this.getFeature(i).type!==f.POINT)return this.changeMode(h.DIRECT_SELECT,{featureId:i});a&&o?(this.deselect(i),this.updateUIClasses({mouse:d.POINTER}),1===r.length&&Tt.enable(this)):!a&&o?(this.select(i),this.updateUIClasses({mouse:d.MOVE})):a||o||(r.forEach((function(t){return n.doRender(t)})),this.setSelected(i),this.updateUIClasses({mouse:d.MOVE})),this.doRender(i)},te.onMouseDown=function(t,e){return at(e)?this.startOnActiveFeature(t,e):this.drawConfig.boxSelect&&it(e)?this.startBoxSelect(t,e):void 0},te.startBoxSelect=function(t,e){this.stopExtendedInteractions(t),this.map.dragPan.disable(),t.boxSelectStartLocation=mt(e.originalEvent,this.map.getContainer()),t.canBoxSelect=!0},te.onTouchStart=function(t,e){if(at(e))return this.startOnActiveFeature(t,e)},te.onDrag=function(t,e){return t.canDragMove?this.dragMove(t,e):this.drawConfig.boxSelect&&t.canBoxSelect?this.whileBoxSelect(t,e):void 0},te.whileBoxSelect=function(t,e){t.boxSelecting=!0,this.updateUIClasses({mouse:d.ADD}),t.boxSelectElement||(t.boxSelectElement=document.createElement(\"div\"),t.boxSelectElement.classList.add(c.BOX_SELECT),this.map.getContainer().appendChild(t.boxSelectElement));var n=mt(e.originalEvent,this.map.getContainer()),o=Math.min(t.boxSelectStartLocation.x,n.x),r=Math.max(t.boxSelectStartLocation.x,n.x),i=Math.min(t.boxSelectStartLocation.y,n.y),a=Math.max(t.boxSelectStartLocation.y,n.y),s=\"translate(\"+o+\"px, \"+i+\"px)\";t.boxSelectElement.style.transform=s,t.boxSelectElement.style.WebkitTransform=s,t.boxSelectElement.style.width=r-o+\"px\",t.boxSelectElement.style.height=a-i+\"px\"},te.dragMove=function(t,e){t.dragMoving=!0,e.originalEvent.stopPropagation();var n={lng:e.lngLat.lng-t.dragMoveLocation.lng,lat:e.lngLat.lat-t.dragMoveLocation.lat};Qt(this.getSelected(),n),t.dragMoveLocation=e.lngLat},te.onTouchEnd=te.onMouseUp=function(t,e){var n=this;if(t.dragMoving)this.fireUpdate();else if(t.boxSelecting){var o=[t.boxSelectStartLocation,mt(e.originalEvent,this.map.getContainer())],r=this.featuresAt(null,o,\"click\"),i=this.getUniqueIds(r).filter((function(t){return!n.isSelected(t)}));i.length&&(this.select(i),i.forEach((function(t){return n.doRender(t)})),this.updateUIClasses({mouse:d.MOVE}))}this.stopExtendedInteractions(t)},te.toDisplayFeatures=function(t,e,n){e.properties.active=this.isSelected(e.properties.id)?m.ACTIVE:m.INACTIVE,n(e),this.fireActionable(),e.properties.active===m.ACTIVE&&e.geometry.type!==f.POINT&&Et(e).forEach(n)},te.onTrash=function(){this.deleteFeature(this.getSelectedIds()),this.fireActionable()},te.onCombineFeatures=function(){var t=this.getSelected();if(!(0===t.length||t.length<2)){for(var e=[],n=[],o=t[0].type.replace(\"Multi\",\"\"),r=0;r<t.length;r++){var i=t[r];if(i.type.replace(\"Multi\",\"\")!==o)return;i.type.includes(\"Multi\")?i.getCoordinates().forEach((function(t){e.push(t)})):e.push(i.getCoordinates()),n.push(i.toGeoJSON())}if(n.length>1){var a=this.newFeature({type:f.FEATURE,properties:n[0].properties,geometry:{type:\"Multi\"+o,coordinates:e}});this.addFeature(a),this.deleteFeature(this.getSelectedIds(),{silent:!0}),this.setSelected([a.id]),this.map.fire(g.COMBINE_FEATURES,{createdFeatures:[a.toGeoJSON()],deletedFeatures:n})}this.fireActionable()}},te.onUncombineFeatures=function(){var t=this,e=this.getSelected();if(0!==e.length){for(var n=[],o=[],r=function(r){var i=e[r];t.isInstanceOf(\"MultiFeature\",i)&&(i.getFeatures().forEach((function(e){t.addFeature(e),e.properties=i.properties,n.push(e.toGeoJSON()),t.select([e.id])})),t.deleteFeature(i.id,{silent:!0}),o.push(i.toGeoJSON()))},i=0;i<e.length;i++)r(i);n.length>1&&this.map.fire(g.UNCOMBINE_FEATURES,{createdFeatures:n,deletedFeatures:o}),this.fireActionable()}};var ee=rt(v.VERTEX),ne=rt(v.MIDPOINT),oe={fireUpdate:function(){this.map.fire(g.UPDATE,{action:y.CHANGE_COORDINATES,features:this.getSelected().map((function(t){return t.toGeoJSON()}))})},fireActionable:function(t){this.setActionableState({combineFeatures:!1,uncombineFeatures:!1,trash:t.selectedCoordPaths.length>0})},startDragging:function(t,e){this.map.dragPan.disable(),t.canDragMove=!0,t.dragMoveLocation=e.lngLat},stopDragging:function(t){this.map.dragPan.enable(),t.dragMoving=!1,t.canDragMove=!1,t.dragMoveLocation=null},onVertex:function(t,e){this.startDragging(t,e);var n=e.featureTarget.properties,o=t.selectedCoordPaths.indexOf(n.coord_path);dt(e)||-1!==o?dt(e)&&-1===o&&t.selectedCoordPaths.push(n.coord_path):t.selectedCoordPaths=[n.coord_path];var r=this.pathsToCoordinates(t.featureId,t.selectedCoordPaths);this.setSelectedCoordinates(r)},onMidpoint:function(t,e){this.startDragging(t,e);var n=e.featureTarget.properties;t.feature.addCoordinate(n.coord_path,n.lng,n.lat),this.fireUpdate(),t.selectedCoordPaths=[n.coord_path]},pathsToCoordinates:function(t,e){return e.map((function(e){return{feature_id:t,coord_path:e}}))},onFeature:function(t,e){0===t.selectedCoordPaths.length?this.startDragging(t,e):this.stopDragging(t)},dragFeature:function(t,e,n){Qt(this.getSelected(),n),t.dragMoveLocation=e.lngLat},dragVertex:function(t,e,n){for(var o=t.selectedCoordPaths.map((function(e){return t.feature.getCoordinate(e)})),r=Kt(o.map((function(t){return{type:f.FEATURE,properties:{},geometry:{type:f.POINT,coordinates:t}}})),n),i=0;i<o.length;i++){var a=o[i];t.feature.updateCoordinate(t.selectedCoordPaths[i],a[0]+r.lng,a[1]+r.lat)}},clickNoTarget:function(){this.changeMode(h.SIMPLE_SELECT)},clickInactive:function(){this.changeMode(h.SIMPLE_SELECT)},clickActiveFeature:function(t){t.selectedCoordPaths=[],this.clearSelectedCoordinates(),t.feature.changed()},onSetup:function(t){var e=t.featureId,n=this.getFeature(e);if(!n)throw new Error(\"You must provide a featureId to enter direct_select mode\");if(n.type===f.POINT)throw new TypeError(\"direct_select mode doesn't handle point features\");var o={featureId:e,feature:n,dragMoveLocation:t.startPos||null,dragMoving:!1,canDragMove:!1,selectedCoordPaths:t.coordPath?[t.coordPath]:[]};return this.setSelectedCoordinates(this.pathsToCoordinates(e,o.selectedCoordPaths)),this.setSelected(e),Tt.disable(this),this.setActionableState({trash:!0}),o},onStop:function(){Tt.enable(this),this.clearSelectedCoordinates()},toDisplayFeatures:function(t,e,n){t.featureId===e.properties.id?(e.properties.active=m.ACTIVE,n(e),Et(e,{map:this.map,midpoints:!0,selectedPaths:t.selectedCoordPaths}).forEach(n)):(e.properties.active=m.INACTIVE,n(e)),this.fireActionable(t)},onTrash:function(t){t.selectedCoordPaths.sort((function(t,e){return e.localeCompare(t,\"en\",{numeric:!0})})).forEach((function(e){return t.feature.removeCoordinate(e)})),this.fireUpdate(),t.selectedCoordPaths=[],this.clearSelectedCoordinates(),this.fireActionable(t),!1===t.feature.isValid()&&(this.deleteFeature([t.featureId]),this.changeMode(h.SIMPLE_SELECT,{}))},onMouseMove:function(t,e){var n=at(e),o=ee(e),r=ne(e),i=0===t.selectedCoordPaths.length;return n&&i||o&&!i?this.updateUIClasses({mouse:d.MOVE}):this.updateUIClasses({mouse:d.NONE}),(o||n||r)&&t.dragMoving&&this.fireUpdate(),this.stopDragging(t),!0},onMouseOut:function(t){return t.dragMoving&&this.fireUpdate(),!0}};oe.onTouchStart=oe.onMouseDown=function(t,e){return ee(e)?this.onVertex(t,e):at(e)?this.onFeature(t,e):ne(e)?this.onMidpoint(t,e):void 0},oe.onDrag=function(t,e){if(!0===t.canDragMove){t.dragMoving=!0,e.originalEvent.stopPropagation();var n={lng:e.lngLat.lng-t.dragMoveLocation.lng,lat:e.lngLat.lat-t.dragMoveLocation.lat};t.selectedCoordPaths.length>0?this.dragVertex(t,e,n):this.dragFeature(t,e,n),t.dragMoveLocation=e.lngLat}},oe.onClick=function(t,e){return ut(e)?this.clickNoTarget(t,e):at(e)?this.clickActiveFeature(t,e):st(e)?this.clickInactive(t,e):void this.stopDragging(t)},oe.onTap=function(t,e){return ut(e)?this.clickNoTarget(t,e):at(e)?this.clickActiveFeature(t,e):st(e)?this.clickInactive(t,e):void 0},oe.onTouchEnd=oe.onMouseUp=function(t){t.dragMoving&&this.fireUpdate(),this.stopDragging(t)};var re={};function ie(t,e){return!!t.lngLat&&(t.lngLat.lng===e[0]&&t.lngLat.lat===e[1])}re.onSetup=function(){var t=this.newFeature({type:f.FEATURE,properties:{},geometry:{type:f.POINT,coordinates:[]}});return this.addFeature(t),this.clearSelectedFeatures(),this.updateUIClasses({mouse:d.ADD}),this.activateUIButton(p.POINT),this.setActionableState({trash:!0}),{point:t}},re.stopDrawingAndRemove=function(t){this.deleteFeature([t.point.id],{silent:!0}),this.changeMode(h.SIMPLE_SELECT)},re.onTap=re.onClick=function(t,e){this.updateUIClasses({mouse:d.MOVE}),t.point.updateCoordinate(\"\",e.lngLat.lng,e.lngLat.lat),this.map.fire(g.CREATE,{features:[t.point.toGeoJSON()]}),this.changeMode(h.SIMPLE_SELECT,{featureIds:[t.point.id]})},re.onStop=function(t){this.activateUIButton(),t.point.getCoordinate().length||this.deleteFeature([t.point.id],{silent:!0})},re.toDisplayFeatures=function(t,e,n){var o=e.properties.id===t.point.id;if(e.properties.active=o?m.ACTIVE:m.INACTIVE,!o)return n(e)},re.onTrash=re.stopDrawingAndRemove,re.onKeyUp=function(t,e){if(pt(e)||ft(e))return this.stopDrawingAndRemove(t,e)};var ae={onSetup:function(){var t=this.newFeature({type:f.FEATURE,properties:{},geometry:{type:f.POLYGON,coordinates:[[]]}});return this.addFeature(t),this.clearSelectedFeatures(),Tt.disable(this),this.updateUIClasses({mouse:d.ADD}),this.activateUIButton(p.POLYGON),this.setActionableState({trash:!0}),{polygon:t,currentVertexPosition:0}},clickAnywhere:function(t,e){if(t.currentVertexPosition>0&&ie(e,t.polygon.coordinates[0][t.currentVertexPosition-1]))return this.changeMode(h.SIMPLE_SELECT,{featureIds:[t.polygon.id]});this.updateUIClasses({mouse:d.ADD}),t.polygon.updateCoordinate(\"0.\"+t.currentVertexPosition,e.lngLat.lng,e.lngLat.lat),t.currentVertexPosition++,t.polygon.updateCoordinate(\"0.\"+t.currentVertexPosition,e.lngLat.lng,e.lngLat.lat)},clickOnVertex:function(t){return this.changeMode(h.SIMPLE_SELECT,{featureIds:[t.polygon.id]})},onMouseMove:function(t,e){t.polygon.updateCoordinate(\"0.\"+t.currentVertexPosition,e.lngLat.lng,e.lngLat.lat),lt(e)&&this.updateUIClasses({mouse:d.POINTER})}};ae.onTap=ae.onClick=function(t,e){return lt(e)?this.clickOnVertex(t,e):this.clickAnywhere(t,e)},ae.onKeyUp=function(t,e){pt(e)?(this.deleteFeature([t.polygon.id],{silent:!0}),this.changeMode(h.SIMPLE_SELECT)):ft(e)&&this.changeMode(h.SIMPLE_SELECT,{featureIds:[t.polygon.id]})},ae.onStop=function(t){this.updateUIClasses({mouse:d.NONE}),Tt.enable(this),this.activateUIButton(),void 0!==this.getFeature(t.polygon.id)&&(t.polygon.removeCoordinate(\"0.\"+t.currentVertexPosition),t.polygon.isValid()?this.map.fire(g.CREATE,{features:[t.polygon.toGeoJSON()]}):(this.deleteFeature([t.polygon.id],{silent:!0}),this.changeMode(h.SIMPLE_SELECT,{},{silent:!0})))},ae.toDisplayFeatures=function(t,e,n){var o=e.properties.id===t.polygon.id;if(e.properties.active=o?m.ACTIVE:m.INACTIVE,!o)return n(e);if(0!==e.geometry.coordinates.length){var r=e.geometry.coordinates[0].length;if(!(r<3)){if(e.properties.meta=v.FEATURE,n(_t(t.polygon.id,e.geometry.coordinates[0][0],\"0.0\",!1)),r>3){var i=e.geometry.coordinates[0].length-3;n(_t(t.polygon.id,e.geometry.coordinates[0][i],\"0.\"+i,!1))}if(r<=4){var a=[[e.geometry.coordinates[0][0][0],e.geometry.coordinates[0][0][1]],[e.geometry.coordinates[0][1][0],e.geometry.coordinates[0][1][1]]];if(n({type:f.FEATURE,properties:e.properties,geometry:{coordinates:a,type:f.LINE_STRING}}),3===r)return}return n(e)}}},ae.onTrash=function(t){this.deleteFeature([t.polygon.id],{silent:!0}),this.changeMode(h.SIMPLE_SELECT)};var se={onSetup:function(t){var e,n,o=(t=t||{}).featureId,r=\"forward\";if(o){if(!(e=this.getFeature(o)))throw new Error(\"Could not find a feature with the provided featureId\");var i=t.from;if(i&&\"Feature\"===i.type&&i.geometry&&\"Point\"===i.geometry.type&&(i=i.geometry),i&&\"Point\"===i.type&&i.coordinates&&2===i.coordinates.length&&(i=i.coordinates),!i||!Array.isArray(i))throw new Error(\"Please use the `from` property to indicate which point to continue the line from\");var a=e.coordinates.length-1;if(e.coordinates[a][0]===i[0]&&e.coordinates[a][1]===i[1])n=a+1,e.addCoordinate.apply(e,[n].concat(e.coordinates[a]));else{if(e.coordinates[0][0]!==i[0]||e.coordinates[0][1]!==i[1])throw new Error(\"`from` should match the point at either the start or the end of the provided LineString\");r=\"backwards\",n=0,e.addCoordinate.apply(e,[n].concat(e.coordinates[0]))}}else e=this.newFeature({type:f.FEATURE,properties:{},geometry:{type:f.LINE_STRING,coordinates:[]}}),n=0,this.addFeature(e);return this.clearSelectedFeatures(),Tt.disable(this),this.updateUIClasses({mouse:d.ADD}),this.activateUIButton(p.LINE),this.setActionableState({trash:!0}),{line:e,currentVertexPosition:n,direction:r}},clickAnywhere:function(t,e){if(t.currentVertexPosition>0&&ie(e,t.line.coordinates[t.currentVertexPosition-1])||\"backwards\"===t.direction&&ie(e,t.line.coordinates[t.currentVertexPosition+1]))return this.changeMode(h.SIMPLE_SELECT,{featureIds:[t.line.id]});this.updateUIClasses({mouse:d.ADD}),t.line.updateCoordinate(t.currentVertexPosition,e.lngLat.lng,e.lngLat.lat),\"forward\"===t.direction?(t.currentVertexPosition++,t.line.updateCoordinate(t.currentVertexPosition,e.lngLat.lng,e.lngLat.lat)):t.line.addCoordinate(0,e.lngLat.lng,e.lngLat.lat)},clickOnVertex:function(t){return this.changeMode(h.SIMPLE_SELECT,{featureIds:[t.line.id]})},onMouseMove:function(t,e){t.line.updateCoordinate(t.currentVertexPosition,e.lngLat.lng,e.lngLat.lat),lt(e)&&this.updateUIClasses({mouse:d.POINTER})}};se.onTap=se.onClick=function(t,e){if(lt(e))return this.clickOnVertex(t,e);this.clickAnywhere(t,e)},se.onKeyUp=function(t,e){ft(e)?this.changeMode(h.SIMPLE_SELECT,{featureIds:[t.line.id]}):pt(e)&&(this.deleteFeature([t.line.id],{silent:!0}),this.changeMode(h.SIMPLE_SELECT))},se.onStop=function(t){Tt.enable(this),this.activateUIButton(),void 0!==this.getFeature(t.line.id)&&(t.line.removeCoordinate(\"\"+t.currentVertexPosition),t.line.isValid()?this.map.fire(g.CREATE,{features:[t.line.toGeoJSON()]}):(this.deleteFeature([t.line.id],{silent:!0}),this.changeMode(h.SIMPLE_SELECT,{},{silent:!0})))},se.onTrash=function(t){this.deleteFeature([t.line.id],{silent:!0}),this.changeMode(h.SIMPLE_SELECT)},se.toDisplayFeatures=function(t,e,n){var o=e.properties.id===t.line.id;if(e.properties.active=o?m.ACTIVE:m.INACTIVE,!o)return n(e);e.geometry.coordinates.length<2||(e.properties.meta=v.FEATURE,n(_t(t.line.id,e.geometry.coordinates[\"forward\"===t.direction?e.geometry.coordinates.length-2:1],\"\"+(\"forward\"===t.direction?e.geometry.coordinates.length-2:1),!1)),n(e))};var ue={simple_select:te,direct_select:oe,draw_point:re,draw_polygon:ae,draw_line_string:se},ce={defaultMode:h.SIMPLE_SELECT,keybindings:!0,touchEnabled:!0,clickBuffer:2,touchBuffer:25,boxSelect:!0,displayControlsDefault:!0,styles:ot,modes:ue,controls:{},userProperties:!1},le={point:!0,line_string:!0,polygon:!0,trash:!0,combine_features:!0,uncombine_features:!0},de={point:!1,line_string:!1,polygon:!1,trash:!1,combine_features:!1,uncombine_features:!1};function pe(t,e){return t.map((function(t){return t.source?t:tt(t,{id:t.id+\".\"+e,source:\"hot\"===e?l.HOT:l.COLD})}))}var fe={exports:{}};!function(t,e){var n=\"__lodash_hash_undefined__\",o=9007199254740991,r=\"[object Arguments]\",i=\"[object Array]\",a=\"[object Boolean]\",s=\"[object Date]\",u=\"[object Error]\",c=\"[object Function]\",l=\"[object Map]\",d=\"[object Number]\",p=\"[object Object]\",f=\"[object Promise]\",h=\"[object RegExp]\",g=\"[object Set]\",y=\"[object String]\",v=\"[object Symbol]\",m=\"[object WeakMap]\",_=\"[object ArrayBuffer]\",b=\"[object DataView]\",E=/^\\[object .+?Constructor\\]$/,T=/^(?:0|[1-9]\\d*)$/,C={};C[\"[object Float32Array]\"]=C[\"[object Float64Array]\"]=C[\"[object Int8Array]\"]=C[\"[object Int16Array]\"]=C[\"[object Int32Array]\"]=C[\"[object Uint8Array]\"]=C[\"[object Uint8ClampedArray]\"]=C[\"[object Uint16Array]\"]=C[\"[object Uint32Array]\"]=!0,C[r]=C[i]=C[_]=C[a]=C[b]=C[s]=C[u]=C[c]=C[l]=C[d]=C[p]=C[h]=C[g]=C[y]=C[m]=!1;var O=\"object\"==typeof global&&global&&global.Object===Object&&global,S=\"object\"==typeof self&&self&&self.Object===Object&&self,I=O||S||Function(\"return this\")(),x=e&&!e.nodeType&&e,M=x&&t&&!t.nodeType&&t,L=M&&M.exports===x,N=L&&O.process,A=function(){try{return N&&N.binding&&N.binding(\"util\")}catch(t){}}(),P=A&&A.isTypedArray;function F(t,e){for(var n=-1,o=null==t?0:t.length;++n<o;)if(e(t[n],n,t))return!0;return!1}function w(t){var e=-1,n=Array(t.size);return t.forEach((function(t,o){n[++e]=[o,t]})),n}function R(t){var e=-1,n=Array(t.size);return t.forEach((function(t){n[++e]=t})),n}var k,D,U,j=Array.prototype,V=Function.prototype,B=Object.prototype,G=I[\"__core-js_shared__\"],J=V.toString,z=B.hasOwnProperty,Y=(k=/[^.]+$/.exec(G&&G.keys&&G.keys.IE_PROTO||\"\"))?\"Symbol(src)_1.\"+k:\"\",$=B.toString,q=RegExp(\"^\"+J.call(z).replace(/[\\\\^$.*+?()[\\]{}|]/g,\"\\\\$&\").replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g,\"$1.*?\")+\"$\"),H=L?I.Buffer:void 0,X=I.Symbol,Z=I.Uint8Array,W=B.propertyIsEnumerable,K=j.splice,Q=X?X.toStringTag:void 0,tt=Object.getOwnPropertySymbols,et=H?H.isBuffer:void 0,nt=(D=Object.keys,U=Object,function(t){return D(U(t))}),ot=At(I,\"DataView\"),rt=At(I,\"Map\"),it=At(I,\"Promise\"),at=At(I,\"Set\"),st=At(I,\"WeakMap\"),ut=At(Object,\"create\"),ct=Rt(ot),lt=Rt(rt),dt=Rt(it),pt=Rt(at),ft=Rt(st),ht=X?X.prototype:void 0,gt=ht?ht.valueOf:void 0;function yt(t){var e=-1,n=null==t?0:t.length;for(this.clear();++e<n;){var o=t[e];this.set(o[0],o[1])}}function vt(t){var e=-1,n=null==t?0:t.length;for(this.clear();++e<n;){var o=t[e];this.set(o[0],o[1])}}function mt(t){var e=-1,n=null==t?0:t.length;for(this.clear();++e<n;){var o=t[e];this.set(o[0],o[1])}}function _t(t){var e=-1,n=null==t?0:t.length;for(this.__data__=new mt;++e<n;)this.add(t[e])}function bt(t){var e=this.__data__=new vt(t);this.size=e.size}function Et(t,e){var n=Ut(t),o=!n&&Dt(t),r=!n&&!o&&jt(t),i=!n&&!o&&!r&&zt(t),a=n||o||r||i,s=a?function(t,e){for(var n=-1,o=Array(t);++n<t;)o[n]=e(n);return o}(t.length,String):[],u=s.length;for(var c in t)!e&&!z.call(t,c)||a&&(\"length\"==c||r&&(\"offset\"==c||\"parent\"==c)||i&&(\"buffer\"==c||\"byteLength\"==c||\"byteOffset\"==c)||wt(c,u))||s.push(c);return s}function Tt(t,e){for(var n=t.length;n--;)if(kt(t[n][0],e))return n;return-1}function Ct(t){return null==t?void 0===t?\"[object Undefined]\":\"[object Null]\":Q&&Q in Object(t)?function(t){var e=z.call(t,Q),n=t[Q];try{t[Q]=void 0;var o=!0}catch(t){}var r=$.call(t);o&&(e?t[Q]=n:delete t[Q]);return r}(t):function(t){return $.call(t)}(t)}function Ot(t){return Jt(t)&&Ct(t)==r}function St(t,e,n,o,c){return t===e||(null==t||null==e||!Jt(t)&&!Jt(e)?t!=t&&e!=e:function(t,e,n,o,c,f){var m=Ut(t),E=Ut(e),T=m?i:Ft(t),C=E?i:Ft(e),O=(T=T==r?p:T)==p,S=(C=C==r?p:C)==p,I=T==C;if(I&&jt(t)){if(!jt(e))return!1;m=!0,O=!1}if(I&&!O)return f||(f=new bt),m||zt(t)?Mt(t,e,n,o,c,f):function(t,e,n,o,r,i,c){switch(n){case b:if(t.byteLength!=e.byteLength||t.byteOffset!=e.byteOffset)return!1;t=t.buffer,e=e.buffer;case _:return!(t.byteLength!=e.byteLength||!i(new Z(t),new Z(e)));case a:case s:case d:return kt(+t,+e);case u:return t.name==e.name&&t.message==e.message;case h:case y:return t==e+\"\";case l:var p=w;case g:var f=1&o;if(p||(p=R),t.size!=e.size&&!f)return!1;var m=c.get(t);if(m)return m==e;o|=2,c.set(t,e);var E=Mt(p(t),p(e),o,r,i,c);return c.delete(t),E;case v:if(gt)return gt.call(t)==gt.call(e)}return!1}(t,e,T,n,o,c,f);if(!(1&n)){var x=O&&z.call(t,\"__wrapped__\"),M=S&&z.call(e,\"__wrapped__\");if(x||M){var L=x?t.value():t,N=M?e.value():e;return f||(f=new bt),c(L,N,n,o,f)}}if(!I)return!1;return f||(f=new bt),function(t,e,n,o,r,i){var a=1&n,s=Lt(t),u=s.length,c=Lt(e).length;if(u!=c&&!a)return!1;var l=u;for(;l--;){var d=s[l];if(!(a?d in e:z.call(e,d)))return!1}var p=i.get(t);if(p&&i.get(e))return p==e;var f=!0;i.set(t,e),i.set(e,t);var h=a;for(;++l<u;){var g=t[d=s[l]],y=e[d];if(o)var v=a?o(y,g,d,e,t,i):o(g,y,d,t,e,i);if(!(void 0===v?g===y||r(g,y,n,o,i):v)){f=!1;break}h||(h=\"constructor\"==d)}if(f&&!h){var m=t.constructor,_=e.constructor;m==_||!(\"constructor\"in t)||!(\"constructor\"in e)||\"function\"==typeof m&&m instanceof m&&\"function\"==typeof _&&_ instanceof _||(f=!1)}return i.delete(t),i.delete(e),f}(t,e,n,o,c,f)}(t,e,n,o,St,c))}function It(t){return!(!Gt(t)||function(t){return!!Y&&Y in t}(t))&&(Vt(t)?q:E).test(Rt(t))}function xt(t){if(n=(e=t)&&e.constructor,o=\"function\"==typeof n&&n.prototype||B,e!==o)return nt(t);var e,n,o,r=[];for(var i in Object(t))z.call(t,i)&&\"constructor\"!=i&&r.push(i);return r}function Mt(t,e,n,o,r,i){var a=1&n,s=t.length,u=e.length;if(s!=u&&!(a&&u>s))return!1;var c=i.get(t);if(c&&i.get(e))return c==e;var l=-1,d=!0,p=2&n?new _t:void 0;for(i.set(t,e),i.set(e,t);++l<s;){var f=t[l],h=e[l];if(o)var g=a?o(h,f,l,e,t,i):o(f,h,l,t,e,i);if(void 0!==g){if(g)continue;d=!1;break}if(p){if(!F(e,(function(t,e){if(a=e,!p.has(a)&&(f===t||r(f,t,n,o,i)))return p.push(e);var a}))){d=!1;break}}else if(f!==h&&!r(f,h,n,o,i)){d=!1;break}}return i.delete(t),i.delete(e),d}function Lt(t){return function(t,e,n){var o=e(t);return Ut(t)?o:function(t,e){for(var n=-1,o=e.length,r=t.length;++n<o;)t[r+n]=e[n];return t}(o,n(t))}(t,Yt,Pt)}function Nt(t,e){var n,o,r=t.__data__;return(\"string\"==(o=typeof(n=e))||\"number\"==o||\"symbol\"==o||\"boolean\"==o?\"__proto__\"!==n:null===n)?r[\"string\"==typeof e?\"string\":\"hash\"]:r.map}function At(t,e){var n=function(t,e){return null==t?void 0:t[e]}(t,e);return It(n)?n:void 0}yt.prototype.clear=function(){this.__data__=ut?ut(null):{},this.size=0},yt.prototype.delete=function(t){var e=this.has(t)&&delete this.__data__[t];return this.size-=e?1:0,e},yt.prototype.get=function(t){var e=this.__data__;if(ut){var o=e[t];return o===n?void 0:o}return z.call(e,t)?e[t]:void 0},yt.prototype.has=function(t){var e=this.__data__;return ut?void 0!==e[t]:z.call(e,t)},yt.prototype.set=function(t,e){var o=this.__data__;return this.size+=this.has(t)?0:1,o[t]=ut&&void 0===e?n:e,this},vt.prototype.clear=function(){this.__data__=[],this.size=0},vt.prototype.delete=function(t){var e=this.__data__,n=Tt(e,t);return!(n<0)&&(n==e.length-1?e.pop():K.call(e,n,1),--this.size,!0)},vt.prototype.get=function(t){var e=this.__data__,n=Tt(e,t);return n<0?void 0:e[n][1]},vt.prototype.has=function(t){return Tt(this.__data__,t)>-1},vt.prototype.set=function(t,e){var n=this.__data__,o=Tt(n,t);return o<0?(++this.size,n.push([t,e])):n[o][1]=e,this},mt.prototype.clear=function(){this.size=0,this.__data__={hash:new yt,map:new(rt||vt),string:new yt}},mt.prototype.delete=function(t){var e=Nt(this,t).delete(t);return this.size-=e?1:0,e},mt.prototype.get=function(t){return Nt(this,t).get(t)},mt.prototype.has=function(t){return Nt(this,t).has(t)},mt.prototype.set=function(t,e){var n=Nt(this,t),o=n.size;return n.set(t,e),this.size+=n.size==o?0:1,this},_t.prototype.add=_t.prototype.push=function(t){return this.__data__.set(t,n),this},_t.prototype.has=function(t){return this.__data__.has(t)},bt.prototype.clear=function(){this.__data__=new vt,this.size=0},bt.prototype.delete=function(t){var e=this.__data__,n=e.delete(t);return this.size=e.size,n},bt.prototype.get=function(t){return this.__data__.get(t)},bt.prototype.has=function(t){return this.__data__.has(t)},bt.prototype.set=function(t,e){var n=this.__data__;if(n instanceof vt){var o=n.__data__;if(!rt||o.length<199)return o.push([t,e]),this.size=++n.size,this;n=this.__data__=new mt(o)}return n.set(t,e),this.size=n.size,this};var Pt=tt?function(t){return null==t?[]:(t=Object(t),function(t,e){for(var n=-1,o=null==t?0:t.length,r=0,i=[];++n<o;){var a=t[n];e(a,n,t)&&(i[r++]=a)}return i}(tt(t),(function(e){return W.call(t,e)})))}:function(){return[]},Ft=Ct;function wt(t,e){return!!(e=null==e?o:e)&&(\"number\"==typeof t||T.test(t))&&t>-1&&t%1==0&&t<e}function Rt(t){if(null!=t){try{return J.call(t)}catch(t){}try{return t+\"\"}catch(t){}}return\"\"}function kt(t,e){return t===e||t!=t&&e!=e}(ot&&Ft(new ot(new ArrayBuffer(1)))!=b||rt&&Ft(new rt)!=l||it&&Ft(it.resolve())!=f||at&&Ft(new at)!=g||st&&Ft(new st)!=m)&&(Ft=function(t){var e=Ct(t),n=e==p?t.constructor:void 0,o=n?Rt(n):\"\";if(o)switch(o){case ct:return b;case lt:return l;case dt:return f;case pt:return g;case ft:return m}return e});var Dt=Ot(function(){return arguments}())?Ot:function(t){return Jt(t)&&z.call(t,\"callee\")&&!W.call(t,\"callee\")},Ut=Array.isArray;var jt=et||function(){return!1};function Vt(t){if(!Gt(t))return!1;var e=Ct(t);return e==c||\"[object GeneratorFunction]\"==e||\"[object AsyncFunction]\"==e||\"[object Proxy]\"==e}function Bt(t){return\"number\"==typeof t&&t>-1&&t%1==0&&t<=o}function Gt(t){var e=typeof t;return null!=t&&(\"object\"==e||\"function\"==e)}function Jt(t){return null!=t&&\"object\"==typeof t}var zt=P?function(t){return function(e){return t(e)}}(P):function(t){return Jt(t)&&Bt(t.length)&&!!C[Ct(t)]};function Yt(t){return null!=(e=t)&&Bt(e.length)&&!Vt(e)?Et(t):xt(t);var e}t.exports=function(t,e){return St(t,e)}}(fe,fe.exports);var he=e(fe.exports);function ge(t,e){return t.length===e.length&&JSON.stringify(t.map((function(t){return t})).sort())===JSON.stringify(e.map((function(t){return t})).sort())}var ye={Polygon:V,LineString:j,Point:U,MultiPolygon:J,MultiLineString:J,MultiPoint:J};var ve=Object.freeze({__proto__:null,CommonSelectors:ht,constrainFeatureMovement:Kt,createMidPoint:bt,createSupplementaryPoints:Et,createVertex:_t,doubleClickZoom:Tt,euclideanDistance:A,featuresAt:M,getFeatureAtAndSetCursors:N,isClick:P,isEventAtCoordinates:ie,isTap:F,mapEventToBoundingBox:S,ModeHandler:t,moveFeatures:Qt,sortFeatures:O,stringSetsAreEqual:ge,StringSet:I,theme:ot,toDenseArray:H}),me=function(t,e){var n={options:t=function(t){void 0===t&&(t={});var e=tt(t);return t.controls||(e.controls={}),!1===t.displayControlsDefault?e.controls=tt(de,t.controls):e.controls=tt(le,t.controls),(e=tt(ce,e)).styles=pe(e.styles,\"cold\").concat(pe(e.styles,\"hot\")),e}(t)};e=function(t,e){return e.modes=h,e.getFeatureIdsAt=function(e){return M.click({point:e},null,t).map((function(t){return t.properties.id}))},e.getSelectedIds=function(){return t.store.getSelectedIds()},e.getSelected=function(){return{type:f.FEATURE_COLLECTION,features:t.store.getSelectedIds().map((function(e){return t.store.get(e)})).map((function(t){return t.toGeoJSON()}))}},e.getSelectedPoints=function(){return{type:f.FEATURE_COLLECTION,features:t.store.getSelectedCoordinates().map((function(t){return{type:f.FEATURE,properties:{},geometry:{type:f.POINT,coordinates:t.coordinates}}}))}},e.set=function(n){if(void 0===n.type||n.type!==f.FEATURE_COLLECTION||!Array.isArray(n.features))throw new Error(\"Invalid FeatureCollection\");var o=t.store.createRenderBatch(),r=t.store.getAllIds().slice(),i=e.add(n),a=new I(i);return(r=r.filter((function(t){return!a.has(t)}))).length&&e.delete(r),o(),i},e.add=function(e){var n=JSON.parse(JSON.stringify(It(e))).features.map((function(e){if(e.id=e.id||k(),null===e.geometry)throw new Error(\"Invalid geometry: null\");if(void 0===t.store.get(e.id)||t.store.get(e.id).type!==e.geometry.type){var n=ye[e.geometry.type];if(void 0===n)throw new Error(\"Invalid geometry type: \"+e.geometry.type+\".\");var o=new n(t,e);t.store.add(o)}else{var r=t.store.get(e.id);r.properties=e.properties,he(r.properties,e.properties)||t.store.featureChanged(r.id),he(r.getCoordinates(),e.geometry.coordinates)||r.incomingCoords(e.geometry.coordinates)}return e.id}));return t.store.render(),n},e.get=function(e){var n=t.store.get(e);if(n)return n.toGeoJSON()},e.getAll=function(){return{type:f.FEATURE_COLLECTION,features:t.store.getAll().map((function(t){return t.toGeoJSON()}))}},e.delete=function(n){return t.store.delete(n,{silent:!0}),e.getMode()!==h.DIRECT_SELECT||t.store.getSelectedIds().length?t.store.render():t.events.changeMode(h.SIMPLE_SELECT,void 0,{silent:!0}),e},e.deleteAll=function(){return t.store.delete(t.store.getAllIds(),{silent:!0}),e.getMode()===h.DIRECT_SELECT?t.events.changeMode(h.SIMPLE_SELECT,void 0,{silent:!0}):t.store.render(),e},e.changeMode=function(n,o){return void 0===o&&(o={}),n===h.SIMPLE_SELECT&&e.getMode()===h.SIMPLE_SELECT?(ge(o.featureIds||[],t.store.getSelectedIds())||(t.store.setSelected(o.featureIds,{silent:!0}),t.store.render()),e):(n===h.DIRECT_SELECT&&e.getMode()===h.DIRECT_SELECT&&o.featureId===t.store.getSelectedIds()[0]||t.events.changeMode(n,o,{silent:!0}),e)},e.getMode=function(){return t.events.getMode()},e.trash=function(){return t.events.trash({silent:!0}),e},e.combineFeatures=function(){return t.events.combineFeatures({silent:!0}),e},e.uncombineFeatures=function(){return t.events.uncombineFeatures({silent:!0}),e},e.setFeatureProperty=function(n,o,r){return t.store.setFeatureProperty(n,o,r),e},e}(n,e),n.api=e;var o=nt(n);return e.onAdd=o.onAdd,e.onRemove=o.onRemove,e.types=p,e.options=t,e};function _e(t){me(t,this)}return _e.modes=ue,_e.constants=E,_e.lib=ve,_e}));\n//# sourceMappingURL=mapbox-gl-draw.js.map\n","import { featureCollection, lineString, } from \"@turf/helpers\";\nimport { getCoords } from \"@turf/invariant\";\nimport { flattenEach } from \"@turf/meta\";\n/**\n * Creates a {@link FeatureCollection} of 2-vertex {@link LineString} segments from a\n * {@link LineString|(Multi)LineString} or {@link Polygon|(Multi)Polygon}.\n *\n * @name lineSegment\n * @param {GeoJSON} geojson GeoJSON Polygon or LineString\n * @returns {FeatureCollection<LineString>} 2-vertex line segments\n * @example\n * var polygon = turf.polygon([[[-50, 5], [-40, -10], [-50, -10], [-40, 5], [-50, 5]]]);\n * var segments = turf.lineSegment(polygon);\n *\n * //addToMap\n * var addToMap = [polygon, segments]\n */\nfunction lineSegment(geojson) {\n    if (!geojson) {\n        throw new Error(\"geojson is required\");\n    }\n    var results = [];\n    flattenEach(geojson, function (feature) {\n        lineSegmentFeature(feature, results);\n    });\n    return featureCollection(results);\n}\n/**\n * Line Segment\n *\n * @private\n * @param {Feature<LineString|Polygon>} geojson Line or polygon feature\n * @param {Array} results push to results\n * @returns {void}\n */\nfunction lineSegmentFeature(geojson, results) {\n    var coords = [];\n    var geometry = geojson.geometry;\n    if (geometry !== null) {\n        switch (geometry.type) {\n            case \"Polygon\":\n                coords = getCoords(geometry);\n                break;\n            case \"LineString\":\n                coords = [getCoords(geometry)];\n        }\n        coords.forEach(function (coord) {\n            var segments = createSegments(coord, geojson.properties);\n            segments.forEach(function (segment) {\n                segment.id = results.length;\n                results.push(segment);\n            });\n        });\n    }\n}\n/**\n * Create Segments from LineString coordinates\n *\n * @private\n * @param {Array<Array<number>>} coords LineString coordinates\n * @param {*} properties GeoJSON properties\n * @returns {Array<Feature<LineString>>} line segments\n */\nfunction createSegments(coords, properties) {\n    var segments = [];\n    coords.reduce(function (previousCoords, currentCoords) {\n        var segment = lineString([previousCoords, currentCoords], properties);\n        segment.bbox = bbox(previousCoords, currentCoords);\n        segments.push(segment);\n        return currentCoords;\n    });\n    return segments;\n}\n/**\n * Create BBox between two coordinates (faster than @turf/bbox)\n *\n * @private\n * @param {Array<number>} coords1 Point coordinate\n * @param {Array<number>} coords2 Point coordinate\n * @returns {BBox} [west, south, east, north]\n */\nfunction bbox(coords1, coords2) {\n    var x1 = coords1[0];\n    var y1 = coords1[1];\n    var x2 = coords2[0];\n    var y2 = coords2[1];\n    var west = x1 < x2 ? x1 : x2;\n    var south = y1 < y2 ? y1 : y2;\n    var east = x1 > x2 ? x1 : x2;\n    var north = y1 > y2 ? y1 : y2;\n    return [west, south, east, north];\n}\nexport default lineSegment;\n","\nexport default function quickselect(arr, k, left, right, compare) {\n    quickselectStep(arr, k, left || 0, right || (arr.length - 1), compare || defaultCompare);\n}\n\nfunction quickselectStep(arr, k, left, right, compare) {\n\n    while (right > left) {\n        if (right - left > 600) {\n            var n = right - left + 1;\n            var m = k - left + 1;\n            var z = Math.log(n);\n            var s = 0.5 * Math.exp(2 * z / 3);\n            var sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            var newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            var newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            quickselectStep(arr, k, newLeft, newRight, compare);\n        }\n\n        var t = arr[k];\n        var i = left;\n        var j = right;\n\n        swap(arr, left, k);\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (compare(arr[i], t) < 0) i++;\n            while (compare(arr[j], t) > 0) j--;\n        }\n\n        if (compare(arr[left], t) === 0) swap(arr, left, j);\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\nfunction swap(arr, i, j) {\n    var tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n","import quickselect from 'quickselect';\n\nexport default class RBush {\n    constructor(maxEntries = 9) {\n        // max entries in a node is 9 by default; min node fill is 40% for best performance\n        this._maxEntries = Math.max(4, maxEntries);\n        this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\n        this.clear();\n    }\n\n    all() {\n        return this._all(this.data, []);\n    }\n\n    search(bbox) {\n        let node = this.data;\n        const result = [];\n\n        if (!intersects(bbox, node)) return result;\n\n        const toBBox = this.toBBox;\n        const nodesToSearch = [];\n\n        while (node) {\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf) result.push(child);\n                    else if (contains(bbox, childBBox)) this._all(child, result);\n                    else nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return result;\n    }\n\n    collides(bbox) {\n        let node = this.data;\n\n        if (!intersects(bbox, node)) return false;\n\n        const nodesToSearch = [];\n        while (node) {\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const childBBox = node.leaf ? this.toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf || contains(bbox, childBBox)) return true;\n                    nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return false;\n    }\n\n    load(data) {\n        if (!(data && data.length)) return this;\n\n        if (data.length < this._minEntries) {\n            for (let i = 0; i < data.length; i++) {\n                this.insert(data[i]);\n            }\n            return this;\n        }\n\n        // recursively build the tree with the given data from scratch using OMT algorithm\n        let node = this._build(data.slice(), 0, data.length - 1, 0);\n\n        if (!this.data.children.length) {\n            // save as is if tree is empty\n            this.data = node;\n\n        } else if (this.data.height === node.height) {\n            // split root if trees have the same height\n            this._splitRoot(this.data, node);\n\n        } else {\n            if (this.data.height < node.height) {\n                // swap trees if inserted one is bigger\n                const tmpNode = this.data;\n                this.data = node;\n                node = tmpNode;\n            }\n\n            // insert the small tree into the large tree at appropriate level\n            this._insert(node, this.data.height - node.height - 1, true);\n        }\n\n        return this;\n    }\n\n    insert(item) {\n        if (item) this._insert(item, this.data.height - 1);\n        return this;\n    }\n\n    clear() {\n        this.data = createNode([]);\n        return this;\n    }\n\n    remove(item, equalsFn) {\n        if (!item) return this;\n\n        let node = this.data;\n        const bbox = this.toBBox(item);\n        const path = [];\n        const indexes = [];\n        let i, parent, goingUp;\n\n        // depth-first iterative tree traversal\n        while (node || path.length) {\n\n            if (!node) { // go up\n                node = path.pop();\n                parent = path[path.length - 1];\n                i = indexes.pop();\n                goingUp = true;\n            }\n\n            if (node.leaf) { // check current node\n                const index = findItem(item, node.children, equalsFn);\n\n                if (index !== -1) {\n                    // item found, remove the item and condense tree upwards\n                    node.children.splice(index, 1);\n                    path.push(node);\n                    this._condense(path);\n                    return this;\n                }\n            }\n\n            if (!goingUp && !node.leaf && contains(node, bbox)) { // go down\n                path.push(node);\n                indexes.push(i);\n                i = 0;\n                parent = node;\n                node = node.children[0];\n\n            } else if (parent) { // go right\n                i++;\n                node = parent.children[i];\n                goingUp = false;\n\n            } else node = null; // nothing found\n        }\n\n        return this;\n    }\n\n    toBBox(item) { return item; }\n\n    compareMinX(a, b) { return a.minX - b.minX; }\n    compareMinY(a, b) { return a.minY - b.minY; }\n\n    toJSON() { return this.data; }\n\n    fromJSON(data) {\n        this.data = data;\n        return this;\n    }\n\n    _all(node, result) {\n        const nodesToSearch = [];\n        while (node) {\n            if (node.leaf) result.push(...node.children);\n            else nodesToSearch.push(...node.children);\n\n            node = nodesToSearch.pop();\n        }\n        return result;\n    }\n\n    _build(items, left, right, height) {\n\n        const N = right - left + 1;\n        let M = this._maxEntries;\n        let node;\n\n        if (N <= M) {\n            // reached leaf level; return leaf\n            node = createNode(items.slice(left, right + 1));\n            calcBBox(node, this.toBBox);\n            return node;\n        }\n\n        if (!height) {\n            // target height of the bulk-loaded tree\n            height = Math.ceil(Math.log(N) / Math.log(M));\n\n            // target number of root entries to maximize storage utilization\n            M = Math.ceil(N / Math.pow(M, height - 1));\n        }\n\n        node = createNode([]);\n        node.leaf = false;\n        node.height = height;\n\n        // split the items into M mostly square tiles\n\n        const N2 = Math.ceil(N / M);\n        const N1 = N2 * Math.ceil(Math.sqrt(M));\n\n        multiSelect(items, left, right, N1, this.compareMinX);\n\n        for (let i = left; i <= right; i += N1) {\n\n            const right2 = Math.min(i + N1 - 1, right);\n\n            multiSelect(items, i, right2, N2, this.compareMinY);\n\n            for (let j = i; j <= right2; j += N2) {\n\n                const right3 = Math.min(j + N2 - 1, right2);\n\n                // pack each entry recursively\n                node.children.push(this._build(items, j, right3, height - 1));\n            }\n        }\n\n        calcBBox(node, this.toBBox);\n\n        return node;\n    }\n\n    _chooseSubtree(bbox, node, level, path) {\n        while (true) {\n            path.push(node);\n\n            if (node.leaf || path.length - 1 === level) break;\n\n            let minArea = Infinity;\n            let minEnlargement = Infinity;\n            let targetNode;\n\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const area = bboxArea(child);\n                const enlargement = enlargedArea(bbox, child) - area;\n\n                // choose entry with the least area enlargement\n                if (enlargement < minEnlargement) {\n                    minEnlargement = enlargement;\n                    minArea = area < minArea ? area : minArea;\n                    targetNode = child;\n\n                } else if (enlargement === minEnlargement) {\n                    // otherwise choose one with the smallest area\n                    if (area < minArea) {\n                        minArea = area;\n                        targetNode = child;\n                    }\n                }\n            }\n\n            node = targetNode || node.children[0];\n        }\n\n        return node;\n    }\n\n    _insert(item, level, isNode) {\n        const bbox = isNode ? item : this.toBBox(item);\n        const insertPath = [];\n\n        // find the best node for accommodating the item, saving all nodes along the path too\n        const node = this._chooseSubtree(bbox, this.data, level, insertPath);\n\n        // put the item into the node\n        node.children.push(item);\n        extend(node, bbox);\n\n        // split on node overflow; propagate upwards if necessary\n        while (level >= 0) {\n            if (insertPath[level].children.length > this._maxEntries) {\n                this._split(insertPath, level);\n                level--;\n            } else break;\n        }\n\n        // adjust bboxes along the insertion path\n        this._adjustParentBBoxes(bbox, insertPath, level);\n    }\n\n    // split overflowed node into two\n    _split(insertPath, level) {\n        const node = insertPath[level];\n        const M = node.children.length;\n        const m = this._minEntries;\n\n        this._chooseSplitAxis(node, m, M);\n\n        const splitIndex = this._chooseSplitIndex(node, m, M);\n\n        const newNode = createNode(node.children.splice(splitIndex, node.children.length - splitIndex));\n        newNode.height = node.height;\n        newNode.leaf = node.leaf;\n\n        calcBBox(node, this.toBBox);\n        calcBBox(newNode, this.toBBox);\n\n        if (level) insertPath[level - 1].children.push(newNode);\n        else this._splitRoot(node, newNode);\n    }\n\n    _splitRoot(node, newNode) {\n        // split root node\n        this.data = createNode([node, newNode]);\n        this.data.height = node.height + 1;\n        this.data.leaf = false;\n        calcBBox(this.data, this.toBBox);\n    }\n\n    _chooseSplitIndex(node, m, M) {\n        let index;\n        let minOverlap = Infinity;\n        let minArea = Infinity;\n\n        for (let i = m; i <= M - m; i++) {\n            const bbox1 = distBBox(node, 0, i, this.toBBox);\n            const bbox2 = distBBox(node, i, M, this.toBBox);\n\n            const overlap = intersectionArea(bbox1, bbox2);\n            const area = bboxArea(bbox1) + bboxArea(bbox2);\n\n            // choose distribution with minimum overlap\n            if (overlap < minOverlap) {\n                minOverlap = overlap;\n                index = i;\n\n                minArea = area < minArea ? area : minArea;\n\n            } else if (overlap === minOverlap) {\n                // otherwise choose distribution with minimum area\n                if (area < minArea) {\n                    minArea = area;\n                    index = i;\n                }\n            }\n        }\n\n        return index || M - m;\n    }\n\n    // sorts node children by the best axis for split\n    _chooseSplitAxis(node, m, M) {\n        const compareMinX = node.leaf ? this.compareMinX : compareNodeMinX;\n        const compareMinY = node.leaf ? this.compareMinY : compareNodeMinY;\n        const xMargin = this._allDistMargin(node, m, M, compareMinX);\n        const yMargin = this._allDistMargin(node, m, M, compareMinY);\n\n        // if total distributions margin value is minimal for x, sort by minX,\n        // otherwise it's already sorted by minY\n        if (xMargin < yMargin) node.children.sort(compareMinX);\n    }\n\n    // total margin of all possible split distributions where each node is at least m full\n    _allDistMargin(node, m, M, compare) {\n        node.children.sort(compare);\n\n        const toBBox = this.toBBox;\n        const leftBBox = distBBox(node, 0, m, toBBox);\n        const rightBBox = distBBox(node, M - m, M, toBBox);\n        let margin = bboxMargin(leftBBox) + bboxMargin(rightBBox);\n\n        for (let i = m; i < M - m; i++) {\n            const child = node.children[i];\n            extend(leftBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(leftBBox);\n        }\n\n        for (let i = M - m - 1; i >= m; i--) {\n            const child = node.children[i];\n            extend(rightBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(rightBBox);\n        }\n\n        return margin;\n    }\n\n    _adjustParentBBoxes(bbox, path, level) {\n        // adjust bboxes along the given tree path\n        for (let i = level; i >= 0; i--) {\n            extend(path[i], bbox);\n        }\n    }\n\n    _condense(path) {\n        // go through the path, removing empty nodes and updating bboxes\n        for (let i = path.length - 1, siblings; i >= 0; i--) {\n            if (path[i].children.length === 0) {\n                if (i > 0) {\n                    siblings = path[i - 1].children;\n                    siblings.splice(siblings.indexOf(path[i]), 1);\n\n                } else this.clear();\n\n            } else calcBBox(path[i], this.toBBox);\n        }\n    }\n}\n\nfunction findItem(item, items, equalsFn) {\n    if (!equalsFn) return items.indexOf(item);\n\n    for (let i = 0; i < items.length; i++) {\n        if (equalsFn(item, items[i])) return i;\n    }\n    return -1;\n}\n\n// calculate node's bbox from bboxes of its children\nfunction calcBBox(node, toBBox) {\n    distBBox(node, 0, node.children.length, toBBox, node);\n}\n\n// min bounding rectangle of node children from k to p-1\nfunction distBBox(node, k, p, toBBox, destNode) {\n    if (!destNode) destNode = createNode(null);\n    destNode.minX = Infinity;\n    destNode.minY = Infinity;\n    destNode.maxX = -Infinity;\n    destNode.maxY = -Infinity;\n\n    for (let i = k; i < p; i++) {\n        const child = node.children[i];\n        extend(destNode, node.leaf ? toBBox(child) : child);\n    }\n\n    return destNode;\n}\n\nfunction extend(a, b) {\n    a.minX = Math.min(a.minX, b.minX);\n    a.minY = Math.min(a.minY, b.minY);\n    a.maxX = Math.max(a.maxX, b.maxX);\n    a.maxY = Math.max(a.maxY, b.maxY);\n    return a;\n}\n\nfunction compareNodeMinX(a, b) { return a.minX - b.minX; }\nfunction compareNodeMinY(a, b) { return a.minY - b.minY; }\n\nfunction bboxArea(a)   { return (a.maxX - a.minX) * (a.maxY - a.minY); }\nfunction bboxMargin(a) { return (a.maxX - a.minX) + (a.maxY - a.minY); }\n\nfunction enlargedArea(a, b) {\n    return (Math.max(b.maxX, a.maxX) - Math.min(b.minX, a.minX)) *\n           (Math.max(b.maxY, a.maxY) - Math.min(b.minY, a.minY));\n}\n\nfunction intersectionArea(a, b) {\n    const minX = Math.max(a.minX, b.minX);\n    const minY = Math.max(a.minY, b.minY);\n    const maxX = Math.min(a.maxX, b.maxX);\n    const maxY = Math.min(a.maxY, b.maxY);\n\n    return Math.max(0, maxX - minX) *\n           Math.max(0, maxY - minY);\n}\n\nfunction contains(a, b) {\n    return a.minX <= b.minX &&\n           a.minY <= b.minY &&\n           b.maxX <= a.maxX &&\n           b.maxY <= a.maxY;\n}\n\nfunction intersects(a, b) {\n    return b.minX <= a.maxX &&\n           b.minY <= a.maxY &&\n           b.maxX >= a.minX &&\n           b.maxY >= a.minY;\n}\n\nfunction createNode(children) {\n    return {\n        children,\n        height: 1,\n        leaf: true,\n        minX: Infinity,\n        minY: Infinity,\n        maxX: -Infinity,\n        maxY: -Infinity\n    };\n}\n\n// sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\n// combines selection algorithm with binary divide & conquer approach\n\nfunction multiSelect(arr, left, right, n, compare) {\n    const stack = [left, right];\n\n    while (stack.length) {\n        right = stack.pop();\n        left = stack.pop();\n\n        if (right - left <= n) continue;\n\n        const mid = left + Math.ceil((right - left) / n / 2) * n;\n        quickselect(arr, mid, left, right, compare);\n\n        stack.push(left, mid, mid, right);\n    }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * @module helpers\n */\n/**\n * Earth Radius used with the Harvesine formula and approximates using a spherical (non-ellipsoid) Earth.\n *\n * @memberof helpers\n * @type {number}\n */\nexports.earthRadius = 6371008.8;\n/**\n * Unit of measurement factors using a spherical (non-ellipsoid) earth radius.\n *\n * @memberof helpers\n * @type {Object}\n */\nexports.factors = {\n    centimeters: exports.earthRadius * 100,\n    centimetres: exports.earthRadius * 100,\n    degrees: exports.earthRadius / 111325,\n    feet: exports.earthRadius * 3.28084,\n    inches: exports.earthRadius * 39.37,\n    kilometers: exports.earthRadius / 1000,\n    kilometres: exports.earthRadius / 1000,\n    meters: exports.earthRadius,\n    metres: exports.earthRadius,\n    miles: exports.earthRadius / 1609.344,\n    millimeters: exports.earthRadius * 1000,\n    millimetres: exports.earthRadius * 1000,\n    nauticalmiles: exports.earthRadius / 1852,\n    radians: 1,\n    yards: exports.earthRadius * 1.0936,\n};\n/**\n * Units of measurement factors based on 1 meter.\n *\n * @memberof helpers\n * @type {Object}\n */\nexports.unitsFactors = {\n    centimeters: 100,\n    centimetres: 100,\n    degrees: 1 / 111325,\n    feet: 3.28084,\n    inches: 39.37,\n    kilometers: 1 / 1000,\n    kilometres: 1 / 1000,\n    meters: 1,\n    metres: 1,\n    miles: 1 / 1609.344,\n    millimeters: 1000,\n    millimetres: 1000,\n    nauticalmiles: 1 / 1852,\n    radians: 1 / exports.earthRadius,\n    yards: 1.0936133,\n};\n/**\n * Area of measurement factors based on 1 square meter.\n *\n * @memberof helpers\n * @type {Object}\n */\nexports.areaFactors = {\n    acres: 0.000247105,\n    centimeters: 10000,\n    centimetres: 10000,\n    feet: 10.763910417,\n    hectares: 0.0001,\n    inches: 1550.003100006,\n    kilometers: 0.000001,\n    kilometres: 0.000001,\n    meters: 1,\n    metres: 1,\n    miles: 3.86e-7,\n    millimeters: 1000000,\n    millimetres: 1000000,\n    yards: 1.195990046,\n};\n/**\n * Wraps a GeoJSON {@link Geometry} in a GeoJSON {@link Feature}.\n *\n * @name feature\n * @param {Geometry} geometry input geometry\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature} a GeoJSON Feature\n * @example\n * var geometry = {\n *   \"type\": \"Point\",\n *   \"coordinates\": [110, 50]\n * };\n *\n * var feature = turf.feature(geometry);\n *\n * //=feature\n */\nfunction feature(geom, properties, options) {\n    if (options === void 0) { options = {}; }\n    var feat = { type: \"Feature\" };\n    if (options.id === 0 || options.id) {\n        feat.id = options.id;\n    }\n    if (options.bbox) {\n        feat.bbox = options.bbox;\n    }\n    feat.properties = properties || {};\n    feat.geometry = geom;\n    return feat;\n}\nexports.feature = feature;\n/**\n * Creates a GeoJSON {@link Geometry} from a Geometry string type & coordinates.\n * For GeometryCollection type use `helpers.geometryCollection`\n *\n * @name geometry\n * @param {string} type Geometry Type\n * @param {Array<any>} coordinates Coordinates\n * @param {Object} [options={}] Optional Parameters\n * @returns {Geometry} a GeoJSON Geometry\n * @example\n * var type = \"Point\";\n * var coordinates = [110, 50];\n * var geometry = turf.geometry(type, coordinates);\n * // => geometry\n */\nfunction geometry(type, coordinates, _options) {\n    if (_options === void 0) { _options = {}; }\n    switch (type) {\n        case \"Point\":\n            return point(coordinates).geometry;\n        case \"LineString\":\n            return lineString(coordinates).geometry;\n        case \"Polygon\":\n            return polygon(coordinates).geometry;\n        case \"MultiPoint\":\n            return multiPoint(coordinates).geometry;\n        case \"MultiLineString\":\n            return multiLineString(coordinates).geometry;\n        case \"MultiPolygon\":\n            return multiPolygon(coordinates).geometry;\n        default:\n            throw new Error(type + \" is invalid\");\n    }\n}\nexports.geometry = geometry;\n/**\n * Creates a {@link Point} {@link Feature} from a Position.\n *\n * @name point\n * @param {Array<number>} coordinates longitude, latitude position (each in decimal degrees)\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Point>} a Point feature\n * @example\n * var point = turf.point([-75.343, 39.984]);\n *\n * //=point\n */\nfunction point(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    if (!coordinates) {\n        throw new Error(\"coordinates is required\");\n    }\n    if (!Array.isArray(coordinates)) {\n        throw new Error(\"coordinates must be an Array\");\n    }\n    if (coordinates.length < 2) {\n        throw new Error(\"coordinates must be at least 2 numbers long\");\n    }\n    if (!isNumber(coordinates[0]) || !isNumber(coordinates[1])) {\n        throw new Error(\"coordinates must contain numbers\");\n    }\n    var geom = {\n        type: \"Point\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\nexports.point = point;\n/**\n * Creates a {@link Point} {@link FeatureCollection} from an Array of Point coordinates.\n *\n * @name points\n * @param {Array<Array<number>>} coordinates an array of Points\n * @param {Object} [properties={}] Translate these properties to each Feature\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north]\n * associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Point>} Point Feature\n * @example\n * var points = turf.points([\n *   [-75, 39],\n *   [-80, 45],\n *   [-78, 50]\n * ]);\n *\n * //=points\n */\nfunction points(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    return featureCollection(coordinates.map(function (coords) {\n        return point(coords, properties);\n    }), options);\n}\nexports.points = points;\n/**\n * Creates a {@link Polygon} {@link Feature} from an Array of LinearRings.\n *\n * @name polygon\n * @param {Array<Array<Array<number>>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Polygon>} Polygon Feature\n * @example\n * var polygon = turf.polygon([[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]], { name: 'poly1' });\n *\n * //=polygon\n */\nfunction polygon(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    for (var _i = 0, coordinates_1 = coordinates; _i < coordinates_1.length; _i++) {\n        var ring = coordinates_1[_i];\n        if (ring.length < 4) {\n            throw new Error(\"Each LinearRing of a Polygon must have 4 or more Positions.\");\n        }\n        for (var j = 0; j < ring[ring.length - 1].length; j++) {\n            // Check if first point of Polygon contains two numbers\n            if (ring[ring.length - 1][j] !== ring[0][j]) {\n                throw new Error(\"First and last Position are not equivalent.\");\n            }\n        }\n    }\n    var geom = {\n        type: \"Polygon\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\nexports.polygon = polygon;\n/**\n * Creates a {@link Polygon} {@link FeatureCollection} from an Array of Polygon coordinates.\n *\n * @name polygons\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygon coordinates\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Polygon>} Polygon FeatureCollection\n * @example\n * var polygons = turf.polygons([\n *   [[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]],\n *   [[[-15, 42], [-14, 46], [-12, 41], [-17, 44], [-15, 42]]],\n * ]);\n *\n * //=polygons\n */\nfunction polygons(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    return featureCollection(coordinates.map(function (coords) {\n        return polygon(coords, properties);\n    }), options);\n}\nexports.polygons = polygons;\n/**\n * Creates a {@link LineString} {@link Feature} from an Array of Positions.\n *\n * @name lineString\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<LineString>} LineString Feature\n * @example\n * var linestring1 = turf.lineString([[-24, 63], [-23, 60], [-25, 65], [-20, 69]], {name: 'line 1'});\n * var linestring2 = turf.lineString([[-14, 43], [-13, 40], [-15, 45], [-10, 49]], {name: 'line 2'});\n *\n * //=linestring1\n * //=linestring2\n */\nfunction lineString(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    if (coordinates.length < 2) {\n        throw new Error(\"coordinates must be an array of two or more positions\");\n    }\n    var geom = {\n        type: \"LineString\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\nexports.lineString = lineString;\n/**\n * Creates a {@link LineString} {@link FeatureCollection} from an Array of LineString coordinates.\n *\n * @name lineStrings\n * @param {Array<Array<Array<number>>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north]\n * associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<LineString>} LineString FeatureCollection\n * @example\n * var linestrings = turf.lineStrings([\n *   [[-24, 63], [-23, 60], [-25, 65], [-20, 69]],\n *   [[-14, 43], [-13, 40], [-15, 45], [-10, 49]]\n * ]);\n *\n * //=linestrings\n */\nfunction lineStrings(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    return featureCollection(coordinates.map(function (coords) {\n        return lineString(coords, properties);\n    }), options);\n}\nexports.lineStrings = lineStrings;\n/**\n * Takes one or more {@link Feature|Features} and creates a {@link FeatureCollection}.\n *\n * @name featureCollection\n * @param {Feature[]} features input features\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {FeatureCollection} FeatureCollection of Features\n * @example\n * var locationA = turf.point([-75.343, 39.984], {name: 'Location A'});\n * var locationB = turf.point([-75.833, 39.284], {name: 'Location B'});\n * var locationC = turf.point([-75.534, 39.123], {name: 'Location C'});\n *\n * var collection = turf.featureCollection([\n *   locationA,\n *   locationB,\n *   locationC\n * ]);\n *\n * //=collection\n */\nfunction featureCollection(features, options) {\n    if (options === void 0) { options = {}; }\n    var fc = { type: \"FeatureCollection\" };\n    if (options.id) {\n        fc.id = options.id;\n    }\n    if (options.bbox) {\n        fc.bbox = options.bbox;\n    }\n    fc.features = features;\n    return fc;\n}\nexports.featureCollection = featureCollection;\n/**\n * Creates a {@link Feature<MultiLineString>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiLineString\n * @param {Array<Array<Array<number>>>} coordinates an array of LineStrings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiLineString>} a MultiLineString feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiLine = turf.multiLineString([[[0,0],[10,10]]]);\n *\n * //=multiLine\n */\nfunction multiLineString(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"MultiLineString\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\nexports.multiLineString = multiLineString;\n/**\n * Creates a {@link Feature<MultiPoint>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPoint\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPoint>} a MultiPoint feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPt = turf.multiPoint([[0,0],[10,10]]);\n *\n * //=multiPt\n */\nfunction multiPoint(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"MultiPoint\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\nexports.multiPoint = multiPoint;\n/**\n * Creates a {@link Feature<MultiPolygon>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPolygon\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygons\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPolygon>} a multipolygon feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPoly = turf.multiPolygon([[[[0,0],[0,10],[10,10],[10,0],[0,0]]]]);\n *\n * //=multiPoly\n *\n */\nfunction multiPolygon(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"MultiPolygon\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\nexports.multiPolygon = multiPolygon;\n/**\n * Creates a {@link Feature<GeometryCollection>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name geometryCollection\n * @param {Array<Geometry>} geometries an array of GeoJSON Geometries\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<GeometryCollection>} a GeoJSON GeometryCollection Feature\n * @example\n * var pt = turf.geometry(\"Point\", [100, 0]);\n * var line = turf.geometry(\"LineString\", [[101, 0], [102, 1]]);\n * var collection = turf.geometryCollection([pt, line]);\n *\n * // => collection\n */\nfunction geometryCollection(geometries, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"GeometryCollection\",\n        geometries: geometries,\n    };\n    return feature(geom, properties, options);\n}\nexports.geometryCollection = geometryCollection;\n/**\n * Round number to precision\n *\n * @param {number} num Number\n * @param {number} [precision=0] Precision\n * @returns {number} rounded number\n * @example\n * turf.round(120.4321)\n * //=120\n *\n * turf.round(120.4321, 2)\n * //=120.43\n */\nfunction round(num, precision) {\n    if (precision === void 0) { precision = 0; }\n    if (precision && !(precision >= 0)) {\n        throw new Error(\"precision must be a positive number\");\n    }\n    var multiplier = Math.pow(10, precision || 0);\n    return Math.round(num * multiplier) / multiplier;\n}\nexports.round = round;\n/**\n * Convert a distance measurement (assuming a spherical Earth) from radians to a more friendly unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name radiansToLength\n * @param {number} radians in radians across the sphere\n * @param {string} [units=\"kilometers\"] can be degrees, radians, miles, inches, yards, metres,\n * meters, kilometres, kilometers.\n * @returns {number} distance\n */\nfunction radiansToLength(radians, units) {\n    if (units === void 0) { units = \"kilometers\"; }\n    var factor = exports.factors[units];\n    if (!factor) {\n        throw new Error(units + \" units is invalid\");\n    }\n    return radians * factor;\n}\nexports.radiansToLength = radiansToLength;\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into radians\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name lengthToRadians\n * @param {number} distance in real units\n * @param {string} [units=\"kilometers\"] can be degrees, radians, miles, inches, yards, metres,\n * meters, kilometres, kilometers.\n * @returns {number} radians\n */\nfunction lengthToRadians(distance, units) {\n    if (units === void 0) { units = \"kilometers\"; }\n    var factor = exports.factors[units];\n    if (!factor) {\n        throw new Error(units + \" units is invalid\");\n    }\n    return distance / factor;\n}\nexports.lengthToRadians = lengthToRadians;\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into degrees\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, centimeters, kilometres, feet\n *\n * @name lengthToDegrees\n * @param {number} distance in real units\n * @param {string} [units=\"kilometers\"] can be degrees, radians, miles, inches, yards, metres,\n * meters, kilometres, kilometers.\n * @returns {number} degrees\n */\nfunction lengthToDegrees(distance, units) {\n    return radiansToDegrees(lengthToRadians(distance, units));\n}\nexports.lengthToDegrees = lengthToDegrees;\n/**\n * Converts any bearing angle from the north line direction (positive clockwise)\n * and returns an angle between 0-360 degrees (positive clockwise), 0 being the north line\n *\n * @name bearingToAzimuth\n * @param {number} bearing angle, between -180 and +180 degrees\n * @returns {number} angle between 0 and 360 degrees\n */\nfunction bearingToAzimuth(bearing) {\n    var angle = bearing % 360;\n    if (angle < 0) {\n        angle += 360;\n    }\n    return angle;\n}\nexports.bearingToAzimuth = bearingToAzimuth;\n/**\n * Converts an angle in radians to degrees\n *\n * @name radiansToDegrees\n * @param {number} radians angle in radians\n * @returns {number} degrees between 0 and 360 degrees\n */\nfunction radiansToDegrees(radians) {\n    var degrees = radians % (2 * Math.PI);\n    return (degrees * 180) / Math.PI;\n}\nexports.radiansToDegrees = radiansToDegrees;\n/**\n * Converts an angle in degrees to radians\n *\n * @name degreesToRadians\n * @param {number} degrees angle between 0 and 360 degrees\n * @returns {number} angle in radians\n */\nfunction degreesToRadians(degrees) {\n    var radians = degrees % 360;\n    return (radians * Math.PI) / 180;\n}\nexports.degreesToRadians = degreesToRadians;\n/**\n * Converts a length to the requested unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @param {number} length to be converted\n * @param {Units} [originalUnit=\"kilometers\"] of the length\n * @param {Units} [finalUnit=\"kilometers\"] returned unit\n * @returns {number} the converted length\n */\nfunction convertLength(length, originalUnit, finalUnit) {\n    if (originalUnit === void 0) { originalUnit = \"kilometers\"; }\n    if (finalUnit === void 0) { finalUnit = \"kilometers\"; }\n    if (!(length >= 0)) {\n        throw new Error(\"length must be a positive number\");\n    }\n    return radiansToLength(lengthToRadians(length, originalUnit), finalUnit);\n}\nexports.convertLength = convertLength;\n/**\n * Converts a area to the requested unit.\n * Valid units: kilometers, kilometres, meters, metres, centimetres, millimeters, acres, miles, yards, feet, inches, hectares\n * @param {number} area to be converted\n * @param {Units} [originalUnit=\"meters\"] of the distance\n * @param {Units} [finalUnit=\"kilometers\"] returned unit\n * @returns {number} the converted area\n */\nfunction convertArea(area, originalUnit, finalUnit) {\n    if (originalUnit === void 0) { originalUnit = \"meters\"; }\n    if (finalUnit === void 0) { finalUnit = \"kilometers\"; }\n    if (!(area >= 0)) {\n        throw new Error(\"area must be a positive number\");\n    }\n    var startFactor = exports.areaFactors[originalUnit];\n    if (!startFactor) {\n        throw new Error(\"invalid original units\");\n    }\n    var finalFactor = exports.areaFactors[finalUnit];\n    if (!finalFactor) {\n        throw new Error(\"invalid final units\");\n    }\n    return (area / startFactor) * finalFactor;\n}\nexports.convertArea = convertArea;\n/**\n * isNumber\n *\n * @param {*} num Number to validate\n * @returns {boolean} true/false\n * @example\n * turf.isNumber(123)\n * //=true\n * turf.isNumber('foo')\n * //=false\n */\nfunction isNumber(num) {\n    return !isNaN(num) && num !== null && !Array.isArray(num);\n}\nexports.isNumber = isNumber;\n/**\n * isObject\n *\n * @param {*} input variable to validate\n * @returns {boolean} true/false\n * @example\n * turf.isObject({elevation: 10})\n * //=true\n * turf.isObject('foo')\n * //=false\n */\nfunction isObject(input) {\n    return !!input && input.constructor === Object;\n}\nexports.isObject = isObject;\n/**\n * Validate BBox\n *\n * @private\n * @param {Array<number>} bbox BBox to validate\n * @returns {void}\n * @throws Error if BBox is not valid\n * @example\n * validateBBox([-180, -40, 110, 50])\n * //=OK\n * validateBBox([-180, -40])\n * //=Error\n * validateBBox('Foo')\n * //=Error\n * validateBBox(5)\n * //=Error\n * validateBBox(null)\n * //=Error\n * validateBBox(undefined)\n * //=Error\n */\nfunction validateBBox(bbox) {\n    if (!bbox) {\n        throw new Error(\"bbox is required\");\n    }\n    if (!Array.isArray(bbox)) {\n        throw new Error(\"bbox must be an Array\");\n    }\n    if (bbox.length !== 4 && bbox.length !== 6) {\n        throw new Error(\"bbox must be an Array of 4 or 6 numbers\");\n    }\n    bbox.forEach(function (num) {\n        if (!isNumber(num)) {\n            throw new Error(\"bbox must only contain numbers\");\n        }\n    });\n}\nexports.validateBBox = validateBBox;\n/**\n * Validate Id\n *\n * @private\n * @param {string|number} id Id to validate\n * @returns {void}\n * @throws Error if Id is not valid\n * @example\n * validateId([-180, -40, 110, 50])\n * //=Error\n * validateId([-180, -40])\n * //=Error\n * validateId('Foo')\n * //=OK\n * validateId(5)\n * //=OK\n * validateId(null)\n * //=Error\n * validateId(undefined)\n * //=Error\n */\nfunction validateId(id) {\n    if (!id) {\n        throw new Error(\"id is required\");\n    }\n    if ([\"string\", \"number\"].indexOf(typeof id) === -1) {\n        throw new Error(\"id must be a number or a string\");\n    }\n}\nexports.validateId = validateId;\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar helpers = require('@turf/helpers');\n\n/**\n * Callback for coordEach\n *\n * @callback coordEachCallback\n * @param {Array<number>} currentCoord The current coordinate being processed.\n * @param {number} coordIndex The current index of the coordinate being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n */\n\n/**\n * Iterate over coordinates in any GeoJSON object, similar to Array.forEach()\n *\n * @name coordEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentCoord, coordIndex, featureIndex, multiFeatureIndex)\n * @param {boolean} [excludeWrapCoord=false] whether or not to include the final coordinate of LinearRings that wraps the ring in its iteration.\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {\"foo\": \"bar\"}),\n *   turf.point([36, 53], {\"hello\": \"world\"})\n * ]);\n *\n * turf.coordEach(features, function (currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=currentCoord\n *   //=coordIndex\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n * });\n */\nfunction coordEach(geojson, callback, excludeWrapCoord) {\n  // Handles null Geometry -- Skips this GeoJSON\n  if (geojson === null) return;\n  var j,\n    k,\n    l,\n    geometry,\n    stopG,\n    coords,\n    geometryMaybeCollection,\n    wrapShrink = 0,\n    coordIndex = 0,\n    isGeometryCollection,\n    type = geojson.type,\n    isFeatureCollection = type === \"FeatureCollection\",\n    isFeature = type === \"Feature\",\n    stop = isFeatureCollection ? geojson.features.length : 1;\n\n  // This logic may look a little weird. The reason why it is that way\n  // is because it's trying to be fast. GeoJSON supports multiple kinds\n  // of objects at its root: FeatureCollection, Features, Geometries.\n  // This function has the responsibility of handling all of them, and that\n  // means that some of the `for` loops you see below actually just don't apply\n  // to certain inputs. For instance, if you give this just a\n  // Point geometry, then both loops are short-circuited and all we do\n  // is gradually rename the input until it's called 'geometry'.\n  //\n  // This also aims to allocate as few resources as possible: just a\n  // few numbers and booleans, rather than any temporary arrays as would\n  // be required with the normalization approach.\n  for (var featureIndex = 0; featureIndex < stop; featureIndex++) {\n    geometryMaybeCollection = isFeatureCollection\n      ? geojson.features[featureIndex].geometry\n      : isFeature\n      ? geojson.geometry\n      : geojson;\n    isGeometryCollection = geometryMaybeCollection\n      ? geometryMaybeCollection.type === \"GeometryCollection\"\n      : false;\n    stopG = isGeometryCollection\n      ? geometryMaybeCollection.geometries.length\n      : 1;\n\n    for (var geomIndex = 0; geomIndex < stopG; geomIndex++) {\n      var multiFeatureIndex = 0;\n      var geometryIndex = 0;\n      geometry = isGeometryCollection\n        ? geometryMaybeCollection.geometries[geomIndex]\n        : geometryMaybeCollection;\n\n      // Handles null Geometry -- Skips this geometry\n      if (geometry === null) continue;\n      coords = geometry.coordinates;\n      var geomType = geometry.type;\n\n      wrapShrink =\n        excludeWrapCoord &&\n        (geomType === \"Polygon\" || geomType === \"MultiPolygon\")\n          ? 1\n          : 0;\n\n      switch (geomType) {\n        case null:\n          break;\n        case \"Point\":\n          if (\n            callback(\n              coords,\n              coordIndex,\n              featureIndex,\n              multiFeatureIndex,\n              geometryIndex\n            ) === false\n          )\n            return false;\n          coordIndex++;\n          multiFeatureIndex++;\n          break;\n        case \"LineString\":\n        case \"MultiPoint\":\n          for (j = 0; j < coords.length; j++) {\n            if (\n              callback(\n                coords[j],\n                coordIndex,\n                featureIndex,\n                multiFeatureIndex,\n                geometryIndex\n              ) === false\n            )\n              return false;\n            coordIndex++;\n            if (geomType === \"MultiPoint\") multiFeatureIndex++;\n          }\n          if (geomType === \"LineString\") multiFeatureIndex++;\n          break;\n        case \"Polygon\":\n        case \"MultiLineString\":\n          for (j = 0; j < coords.length; j++) {\n            for (k = 0; k < coords[j].length - wrapShrink; k++) {\n              if (\n                callback(\n                  coords[j][k],\n                  coordIndex,\n                  featureIndex,\n                  multiFeatureIndex,\n                  geometryIndex\n                ) === false\n              )\n                return false;\n              coordIndex++;\n            }\n            if (geomType === \"MultiLineString\") multiFeatureIndex++;\n            if (geomType === \"Polygon\") geometryIndex++;\n          }\n          if (geomType === \"Polygon\") multiFeatureIndex++;\n          break;\n        case \"MultiPolygon\":\n          for (j = 0; j < coords.length; j++) {\n            geometryIndex = 0;\n            for (k = 0; k < coords[j].length; k++) {\n              for (l = 0; l < coords[j][k].length - wrapShrink; l++) {\n                if (\n                  callback(\n                    coords[j][k][l],\n                    coordIndex,\n                    featureIndex,\n                    multiFeatureIndex,\n                    geometryIndex\n                  ) === false\n                )\n                  return false;\n                coordIndex++;\n              }\n              geometryIndex++;\n            }\n            multiFeatureIndex++;\n          }\n          break;\n        case \"GeometryCollection\":\n          for (j = 0; j < geometry.geometries.length; j++)\n            if (\n              coordEach(geometry.geometries[j], callback, excludeWrapCoord) ===\n              false\n            )\n              return false;\n          break;\n        default:\n          throw new Error(\"Unknown Geometry Type\");\n      }\n    }\n  }\n}\n\n/**\n * Callback for coordReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback coordReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Array<number>} currentCoord The current coordinate being processed.\n * @param {number} coordIndex The current index of the coordinate being processed.\n * Starts at index 0, if an initialValue is provided, and at index 1 otherwise.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n */\n\n/**\n * Reduce coordinates in any GeoJSON object, similar to Array.reduce()\n *\n * @name coordReduce\n * @param {FeatureCollection|Geometry|Feature} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentCoord, coordIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @param {boolean} [excludeWrapCoord=false] whether or not to include the final coordinate of LinearRings that wraps the ring in its iteration.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {\"foo\": \"bar\"}),\n *   turf.point([36, 53], {\"hello\": \"world\"})\n * ]);\n *\n * turf.coordReduce(features, function (previousValue, currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=previousValue\n *   //=currentCoord\n *   //=coordIndex\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n *   return currentCoord;\n * });\n */\nfunction coordReduce(geojson, callback, initialValue, excludeWrapCoord) {\n  var previousValue = initialValue;\n  coordEach(\n    geojson,\n    function (\n      currentCoord,\n      coordIndex,\n      featureIndex,\n      multiFeatureIndex,\n      geometryIndex\n    ) {\n      if (coordIndex === 0 && initialValue === undefined)\n        previousValue = currentCoord;\n      else\n        previousValue = callback(\n          previousValue,\n          currentCoord,\n          coordIndex,\n          featureIndex,\n          multiFeatureIndex,\n          geometryIndex\n        );\n    },\n    excludeWrapCoord\n  );\n  return previousValue;\n}\n\n/**\n * Callback for propEach\n *\n * @callback propEachCallback\n * @param {Object} currentProperties The current Properties being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Iterate over properties in any GeoJSON object, similar to Array.forEach()\n *\n * @name propEach\n * @param {FeatureCollection|Feature} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentProperties, featureIndex)\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.propEach(features, function (currentProperties, featureIndex) {\n *   //=currentProperties\n *   //=featureIndex\n * });\n */\nfunction propEach(geojson, callback) {\n  var i;\n  switch (geojson.type) {\n    case \"FeatureCollection\":\n      for (i = 0; i < geojson.features.length; i++) {\n        if (callback(geojson.features[i].properties, i) === false) break;\n      }\n      break;\n    case \"Feature\":\n      callback(geojson.properties, 0);\n      break;\n  }\n}\n\n/**\n * Callback for propReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback propReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {*} currentProperties The current Properties being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Reduce properties in any GeoJSON object into a single value,\n * similar to how Array.reduce works. However, in this case we lazily run\n * the reduction, so an array of all properties is unnecessary.\n *\n * @name propReduce\n * @param {FeatureCollection|Feature} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentProperties, featureIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.propReduce(features, function (previousValue, currentProperties, featureIndex) {\n *   //=previousValue\n *   //=currentProperties\n *   //=featureIndex\n *   return currentProperties\n * });\n */\nfunction propReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  propEach(geojson, function (currentProperties, featureIndex) {\n    if (featureIndex === 0 && initialValue === undefined)\n      previousValue = currentProperties;\n    else\n      previousValue = callback(previousValue, currentProperties, featureIndex);\n  });\n  return previousValue;\n}\n\n/**\n * Callback for featureEach\n *\n * @callback featureEachCallback\n * @param {Feature<any>} currentFeature The current Feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Iterate over features in any GeoJSON object, similar to\n * Array.forEach.\n *\n * @name featureEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentFeature, featureIndex)\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {foo: 'bar'}),\n *   turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.featureEach(features, function (currentFeature, featureIndex) {\n *   //=currentFeature\n *   //=featureIndex\n * });\n */\nfunction featureEach(geojson, callback) {\n  if (geojson.type === \"Feature\") {\n    callback(geojson, 0);\n  } else if (geojson.type === \"FeatureCollection\") {\n    for (var i = 0; i < geojson.features.length; i++) {\n      if (callback(geojson.features[i], i) === false) break;\n    }\n  }\n}\n\n/**\n * Callback for featureReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback featureReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature} currentFeature The current Feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Reduce features in any GeoJSON object, similar to Array.reduce().\n *\n * @name featureReduce\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentFeature, featureIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {\"foo\": \"bar\"}),\n *   turf.point([36, 53], {\"hello\": \"world\"})\n * ]);\n *\n * turf.featureReduce(features, function (previousValue, currentFeature, featureIndex) {\n *   //=previousValue\n *   //=currentFeature\n *   //=featureIndex\n *   return currentFeature\n * });\n */\nfunction featureReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  featureEach(geojson, function (currentFeature, featureIndex) {\n    if (featureIndex === 0 && initialValue === undefined)\n      previousValue = currentFeature;\n    else previousValue = callback(previousValue, currentFeature, featureIndex);\n  });\n  return previousValue;\n}\n\n/**\n * Get all coordinates from any GeoJSON object.\n *\n * @name coordAll\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @returns {Array<Array<number>>} coordinate position array\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {foo: 'bar'}),\n *   turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * var coords = turf.coordAll(features);\n * //= [[26, 37], [36, 53]]\n */\nfunction coordAll(geojson) {\n  var coords = [];\n  coordEach(geojson, function (coord) {\n    coords.push(coord);\n  });\n  return coords;\n}\n\n/**\n * Callback for geomEach\n *\n * @callback geomEachCallback\n * @param {Geometry} currentGeometry The current Geometry being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {Object} featureProperties The current Feature Properties being processed.\n * @param {Array<number>} featureBBox The current Feature BBox being processed.\n * @param {number|string} featureId The current Feature Id being processed.\n */\n\n/**\n * Iterate over each geometry in any GeoJSON object, similar to Array.forEach()\n *\n * @name geomEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentGeometry, featureIndex, featureProperties, featureBBox, featureId)\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.geomEach(features, function (currentGeometry, featureIndex, featureProperties, featureBBox, featureId) {\n *   //=currentGeometry\n *   //=featureIndex\n *   //=featureProperties\n *   //=featureBBox\n *   //=featureId\n * });\n */\nfunction geomEach(geojson, callback) {\n  var i,\n    j,\n    g,\n    geometry,\n    stopG,\n    geometryMaybeCollection,\n    isGeometryCollection,\n    featureProperties,\n    featureBBox,\n    featureId,\n    featureIndex = 0,\n    isFeatureCollection = geojson.type === \"FeatureCollection\",\n    isFeature = geojson.type === \"Feature\",\n    stop = isFeatureCollection ? geojson.features.length : 1;\n\n  // This logic may look a little weird. The reason why it is that way\n  // is because it's trying to be fast. GeoJSON supports multiple kinds\n  // of objects at its root: FeatureCollection, Features, Geometries.\n  // This function has the responsibility of handling all of them, and that\n  // means that some of the `for` loops you see below actually just don't apply\n  // to certain inputs. For instance, if you give this just a\n  // Point geometry, then both loops are short-circuited and all we do\n  // is gradually rename the input until it's called 'geometry'.\n  //\n  // This also aims to allocate as few resources as possible: just a\n  // few numbers and booleans, rather than any temporary arrays as would\n  // be required with the normalization approach.\n  for (i = 0; i < stop; i++) {\n    geometryMaybeCollection = isFeatureCollection\n      ? geojson.features[i].geometry\n      : isFeature\n      ? geojson.geometry\n      : geojson;\n    featureProperties = isFeatureCollection\n      ? geojson.features[i].properties\n      : isFeature\n      ? geojson.properties\n      : {};\n    featureBBox = isFeatureCollection\n      ? geojson.features[i].bbox\n      : isFeature\n      ? geojson.bbox\n      : undefined;\n    featureId = isFeatureCollection\n      ? geojson.features[i].id\n      : isFeature\n      ? geojson.id\n      : undefined;\n    isGeometryCollection = geometryMaybeCollection\n      ? geometryMaybeCollection.type === \"GeometryCollection\"\n      : false;\n    stopG = isGeometryCollection\n      ? geometryMaybeCollection.geometries.length\n      : 1;\n\n    for (g = 0; g < stopG; g++) {\n      geometry = isGeometryCollection\n        ? geometryMaybeCollection.geometries[g]\n        : geometryMaybeCollection;\n\n      // Handle null Geometry\n      if (geometry === null) {\n        if (\n          callback(\n            null,\n            featureIndex,\n            featureProperties,\n            featureBBox,\n            featureId\n          ) === false\n        )\n          return false;\n        continue;\n      }\n      switch (geometry.type) {\n        case \"Point\":\n        case \"LineString\":\n        case \"MultiPoint\":\n        case \"Polygon\":\n        case \"MultiLineString\":\n        case \"MultiPolygon\": {\n          if (\n            callback(\n              geometry,\n              featureIndex,\n              featureProperties,\n              featureBBox,\n              featureId\n            ) === false\n          )\n            return false;\n          break;\n        }\n        case \"GeometryCollection\": {\n          for (j = 0; j < geometry.geometries.length; j++) {\n            if (\n              callback(\n                geometry.geometries[j],\n                featureIndex,\n                featureProperties,\n                featureBBox,\n                featureId\n              ) === false\n            )\n              return false;\n          }\n          break;\n        }\n        default:\n          throw new Error(\"Unknown Geometry Type\");\n      }\n    }\n    // Only increase `featureIndex` per each feature\n    featureIndex++;\n  }\n}\n\n/**\n * Callback for geomReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback geomReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Geometry} currentGeometry The current Geometry being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {Object} featureProperties The current Feature Properties being processed.\n * @param {Array<number>} featureBBox The current Feature BBox being processed.\n * @param {number|string} featureId The current Feature Id being processed.\n */\n\n/**\n * Reduce geometry in any GeoJSON object, similar to Array.reduce().\n *\n * @name geomReduce\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentGeometry, featureIndex, featureProperties, featureBBox, featureId)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.geomReduce(features, function (previousValue, currentGeometry, featureIndex, featureProperties, featureBBox, featureId) {\n *   //=previousValue\n *   //=currentGeometry\n *   //=featureIndex\n *   //=featureProperties\n *   //=featureBBox\n *   //=featureId\n *   return currentGeometry\n * });\n */\nfunction geomReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  geomEach(\n    geojson,\n    function (\n      currentGeometry,\n      featureIndex,\n      featureProperties,\n      featureBBox,\n      featureId\n    ) {\n      if (featureIndex === 0 && initialValue === undefined)\n        previousValue = currentGeometry;\n      else\n        previousValue = callback(\n          previousValue,\n          currentGeometry,\n          featureIndex,\n          featureProperties,\n          featureBBox,\n          featureId\n        );\n    }\n  );\n  return previousValue;\n}\n\n/**\n * Callback for flattenEach\n *\n * @callback flattenEachCallback\n * @param {Feature} currentFeature The current flattened feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n */\n\n/**\n * Iterate over flattened features in any GeoJSON object, similar to\n * Array.forEach.\n *\n * @name flattenEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentFeature, featureIndex, multiFeatureIndex)\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.multiPoint([[40, 30], [36, 53]], {hello: 'world'})\n * ]);\n *\n * turf.flattenEach(features, function (currentFeature, featureIndex, multiFeatureIndex) {\n *   //=currentFeature\n *   //=featureIndex\n *   //=multiFeatureIndex\n * });\n */\nfunction flattenEach(geojson, callback) {\n  geomEach(geojson, function (geometry, featureIndex, properties, bbox, id) {\n    // Callback for single geometry\n    var type = geometry === null ? null : geometry.type;\n    switch (type) {\n      case null:\n      case \"Point\":\n      case \"LineString\":\n      case \"Polygon\":\n        if (\n          callback(\n            helpers.feature(geometry, properties, { bbox: bbox, id: id }),\n            featureIndex,\n            0\n          ) === false\n        )\n          return false;\n        return;\n    }\n\n    var geomType;\n\n    // Callback for multi-geometry\n    switch (type) {\n      case \"MultiPoint\":\n        geomType = \"Point\";\n        break;\n      case \"MultiLineString\":\n        geomType = \"LineString\";\n        break;\n      case \"MultiPolygon\":\n        geomType = \"Polygon\";\n        break;\n    }\n\n    for (\n      var multiFeatureIndex = 0;\n      multiFeatureIndex < geometry.coordinates.length;\n      multiFeatureIndex++\n    ) {\n      var coordinate = geometry.coordinates[multiFeatureIndex];\n      var geom = {\n        type: geomType,\n        coordinates: coordinate,\n      };\n      if (\n        callback(helpers.feature(geom, properties), featureIndex, multiFeatureIndex) ===\n        false\n      )\n        return false;\n    }\n  });\n}\n\n/**\n * Callback for flattenReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback flattenReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature} currentFeature The current Feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n */\n\n/**\n * Reduce flattened features in any GeoJSON object, similar to Array.reduce().\n *\n * @name flattenReduce\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentFeature, featureIndex, multiFeatureIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.multiPoint([[40, 30], [36, 53]], {hello: 'world'})\n * ]);\n *\n * turf.flattenReduce(features, function (previousValue, currentFeature, featureIndex, multiFeatureIndex) {\n *   //=previousValue\n *   //=currentFeature\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   return currentFeature\n * });\n */\nfunction flattenReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  flattenEach(\n    geojson,\n    function (currentFeature, featureIndex, multiFeatureIndex) {\n      if (\n        featureIndex === 0 &&\n        multiFeatureIndex === 0 &&\n        initialValue === undefined\n      )\n        previousValue = currentFeature;\n      else\n        previousValue = callback(\n          previousValue,\n          currentFeature,\n          featureIndex,\n          multiFeatureIndex\n        );\n    }\n  );\n  return previousValue;\n}\n\n/**\n * Callback for segmentEach\n *\n * @callback segmentEachCallback\n * @param {Feature<LineString>} currentSegment The current Segment being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n * @param {number} segmentIndex The current index of the Segment being processed.\n * @returns {void}\n */\n\n/**\n * Iterate over 2-vertex line segment in any GeoJSON object, similar to Array.forEach()\n * (Multi)Point geometries do not contain segments therefore they are ignored during this operation.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON\n * @param {Function} callback a method that takes (currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex)\n * @returns {void}\n * @example\n * var polygon = turf.polygon([[[-50, 5], [-40, -10], [-50, -10], [-40, 5], [-50, 5]]]);\n *\n * // Iterate over GeoJSON by 2-vertex segments\n * turf.segmentEach(polygon, function (currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex) {\n *   //=currentSegment\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n *   //=segmentIndex\n * });\n *\n * // Calculate the total number of segments\n * var total = 0;\n * turf.segmentEach(polygon, function () {\n *     total++;\n * });\n */\nfunction segmentEach(geojson, callback) {\n  flattenEach(geojson, function (feature, featureIndex, multiFeatureIndex) {\n    var segmentIndex = 0;\n\n    // Exclude null Geometries\n    if (!feature.geometry) return;\n    // (Multi)Point geometries do not contain segments therefore they are ignored during this operation.\n    var type = feature.geometry.type;\n    if (type === \"Point\" || type === \"MultiPoint\") return;\n\n    // Generate 2-vertex line segments\n    var previousCoords;\n    var previousFeatureIndex = 0;\n    var previousMultiIndex = 0;\n    var prevGeomIndex = 0;\n    if (\n      coordEach(\n        feature,\n        function (\n          currentCoord,\n          coordIndex,\n          featureIndexCoord,\n          multiPartIndexCoord,\n          geometryIndex\n        ) {\n          // Simulating a meta.coordReduce() since `reduce` operations cannot be stopped by returning `false`\n          if (\n            previousCoords === undefined ||\n            featureIndex > previousFeatureIndex ||\n            multiPartIndexCoord > previousMultiIndex ||\n            geometryIndex > prevGeomIndex\n          ) {\n            previousCoords = currentCoord;\n            previousFeatureIndex = featureIndex;\n            previousMultiIndex = multiPartIndexCoord;\n            prevGeomIndex = geometryIndex;\n            segmentIndex = 0;\n            return;\n          }\n          var currentSegment = helpers.lineString(\n            [previousCoords, currentCoord],\n            feature.properties\n          );\n          if (\n            callback(\n              currentSegment,\n              featureIndex,\n              multiFeatureIndex,\n              geometryIndex,\n              segmentIndex\n            ) === false\n          )\n            return false;\n          segmentIndex++;\n          previousCoords = currentCoord;\n        }\n      ) === false\n    )\n      return false;\n  });\n}\n\n/**\n * Callback for segmentReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback segmentReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature<LineString>} currentSegment The current Segment being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n * @param {number} segmentIndex The current index of the Segment being processed.\n */\n\n/**\n * Reduce 2-vertex line segment in any GeoJSON object, similar to Array.reduce()\n * (Multi)Point geometries do not contain segments therefore they are ignored during this operation.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON\n * @param {Function} callback a method that takes (previousValue, currentSegment, currentIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {void}\n * @example\n * var polygon = turf.polygon([[[-50, 5], [-40, -10], [-50, -10], [-40, 5], [-50, 5]]]);\n *\n * // Iterate over GeoJSON by 2-vertex segments\n * turf.segmentReduce(polygon, function (previousSegment, currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex) {\n *   //= previousSegment\n *   //= currentSegment\n *   //= featureIndex\n *   //= multiFeatureIndex\n *   //= geometryIndex\n *   //= segmentIndex\n *   return currentSegment\n * });\n *\n * // Calculate the total number of segments\n * var initialValue = 0\n * var total = turf.segmentReduce(polygon, function (previousValue) {\n *     previousValue++;\n *     return previousValue;\n * }, initialValue);\n */\nfunction segmentReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  var started = false;\n  segmentEach(\n    geojson,\n    function (\n      currentSegment,\n      featureIndex,\n      multiFeatureIndex,\n      geometryIndex,\n      segmentIndex\n    ) {\n      if (started === false && initialValue === undefined)\n        previousValue = currentSegment;\n      else\n        previousValue = callback(\n          previousValue,\n          currentSegment,\n          featureIndex,\n          multiFeatureIndex,\n          geometryIndex,\n          segmentIndex\n        );\n      started = true;\n    }\n  );\n  return previousValue;\n}\n\n/**\n * Callback for lineEach\n *\n * @callback lineEachCallback\n * @param {Feature<LineString>} currentLine The current LineString|LinearRing being processed\n * @param {number} featureIndex The current index of the Feature being processed\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed\n * @param {number} geometryIndex The current index of the Geometry being processed\n */\n\n/**\n * Iterate over line or ring coordinates in LineString, Polygon, MultiLineString, MultiPolygon Features or Geometries,\n * similar to Array.forEach.\n *\n * @name lineEach\n * @param {Geometry|Feature<LineString|Polygon|MultiLineString|MultiPolygon>} geojson object\n * @param {Function} callback a method that takes (currentLine, featureIndex, multiFeatureIndex, geometryIndex)\n * @example\n * var multiLine = turf.multiLineString([\n *   [[26, 37], [35, 45]],\n *   [[36, 53], [38, 50], [41, 55]]\n * ]);\n *\n * turf.lineEach(multiLine, function (currentLine, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=currentLine\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n * });\n */\nfunction lineEach(geojson, callback) {\n  // validation\n  if (!geojson) throw new Error(\"geojson is required\");\n\n  flattenEach(geojson, function (feature, featureIndex, multiFeatureIndex) {\n    if (feature.geometry === null) return;\n    var type = feature.geometry.type;\n    var coords = feature.geometry.coordinates;\n    switch (type) {\n      case \"LineString\":\n        if (callback(feature, featureIndex, multiFeatureIndex, 0, 0) === false)\n          return false;\n        break;\n      case \"Polygon\":\n        for (\n          var geometryIndex = 0;\n          geometryIndex < coords.length;\n          geometryIndex++\n        ) {\n          if (\n            callback(\n              helpers.lineString(coords[geometryIndex], feature.properties),\n              featureIndex,\n              multiFeatureIndex,\n              geometryIndex\n            ) === false\n          )\n            return false;\n        }\n        break;\n    }\n  });\n}\n\n/**\n * Callback for lineReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback lineReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature<LineString>} currentLine The current LineString|LinearRing being processed.\n * @param {number} featureIndex The current index of the Feature being processed\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed\n * @param {number} geometryIndex The current index of the Geometry being processed\n */\n\n/**\n * Reduce features in any GeoJSON object, similar to Array.reduce().\n *\n * @name lineReduce\n * @param {Geometry|Feature<LineString|Polygon|MultiLineString|MultiPolygon>} geojson object\n * @param {Function} callback a method that takes (previousValue, currentLine, featureIndex, multiFeatureIndex, geometryIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var multiPoly = turf.multiPolygon([\n *   turf.polygon([[[12,48],[2,41],[24,38],[12,48]], [[9,44],[13,41],[13,45],[9,44]]]),\n *   turf.polygon([[[5, 5], [0, 0], [2, 2], [4, 4], [5, 5]]])\n * ]);\n *\n * turf.lineReduce(multiPoly, function (previousValue, currentLine, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=previousValue\n *   //=currentLine\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n *   return currentLine\n * });\n */\nfunction lineReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  lineEach(\n    geojson,\n    function (currentLine, featureIndex, multiFeatureIndex, geometryIndex) {\n      if (featureIndex === 0 && initialValue === undefined)\n        previousValue = currentLine;\n      else\n        previousValue = callback(\n          previousValue,\n          currentLine,\n          featureIndex,\n          multiFeatureIndex,\n          geometryIndex\n        );\n    }\n  );\n  return previousValue;\n}\n\n/**\n * Finds a particular 2-vertex LineString Segment from a GeoJSON using `@turf/meta` indexes.\n *\n * Negative indexes are permitted.\n * Point & MultiPoint will always return null.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson Any GeoJSON Feature or Geometry\n * @param {Object} [options={}] Optional parameters\n * @param {number} [options.featureIndex=0] Feature Index\n * @param {number} [options.multiFeatureIndex=0] Multi-Feature Index\n * @param {number} [options.geometryIndex=0] Geometry Index\n * @param {number} [options.segmentIndex=0] Segment Index\n * @param {Object} [options.properties={}] Translate Properties to output LineString\n * @param {BBox} [options.bbox={}] Translate BBox to output LineString\n * @param {number|string} [options.id={}] Translate Id to output LineString\n * @returns {Feature<LineString>} 2-vertex GeoJSON Feature LineString\n * @example\n * var multiLine = turf.multiLineString([\n *     [[10, 10], [50, 30], [30, 40]],\n *     [[-10, -10], [-50, -30], [-30, -40]]\n * ]);\n *\n * // First Segment (defaults are 0)\n * turf.findSegment(multiLine);\n * // => Feature<LineString<[[10, 10], [50, 30]]>>\n *\n * // First Segment of 2nd Multi Feature\n * turf.findSegment(multiLine, {multiFeatureIndex: 1});\n * // => Feature<LineString<[[-10, -10], [-50, -30]]>>\n *\n * // Last Segment of Last Multi Feature\n * turf.findSegment(multiLine, {multiFeatureIndex: -1, segmentIndex: -1});\n * // => Feature<LineString<[[-50, -30], [-30, -40]]>>\n */\nfunction findSegment(geojson, options) {\n  // Optional Parameters\n  options = options || {};\n  if (!helpers.isObject(options)) throw new Error(\"options is invalid\");\n  var featureIndex = options.featureIndex || 0;\n  var multiFeatureIndex = options.multiFeatureIndex || 0;\n  var geometryIndex = options.geometryIndex || 0;\n  var segmentIndex = options.segmentIndex || 0;\n\n  // Find FeatureIndex\n  var properties = options.properties;\n  var geometry;\n\n  switch (geojson.type) {\n    case \"FeatureCollection\":\n      if (featureIndex < 0)\n        featureIndex = geojson.features.length + featureIndex;\n      properties = properties || geojson.features[featureIndex].properties;\n      geometry = geojson.features[featureIndex].geometry;\n      break;\n    case \"Feature\":\n      properties = properties || geojson.properties;\n      geometry = geojson.geometry;\n      break;\n    case \"Point\":\n    case \"MultiPoint\":\n      return null;\n    case \"LineString\":\n    case \"Polygon\":\n    case \"MultiLineString\":\n    case \"MultiPolygon\":\n      geometry = geojson;\n      break;\n    default:\n      throw new Error(\"geojson is invalid\");\n  }\n\n  // Find SegmentIndex\n  if (geometry === null) return null;\n  var coords = geometry.coordinates;\n  switch (geometry.type) {\n    case \"Point\":\n    case \"MultiPoint\":\n      return null;\n    case \"LineString\":\n      if (segmentIndex < 0) segmentIndex = coords.length + segmentIndex - 1;\n      return helpers.lineString(\n        [coords[segmentIndex], coords[segmentIndex + 1]],\n        properties,\n        options\n      );\n    case \"Polygon\":\n      if (geometryIndex < 0) geometryIndex = coords.length + geometryIndex;\n      if (segmentIndex < 0)\n        segmentIndex = coords[geometryIndex].length + segmentIndex - 1;\n      return helpers.lineString(\n        [\n          coords[geometryIndex][segmentIndex],\n          coords[geometryIndex][segmentIndex + 1],\n        ],\n        properties,\n        options\n      );\n    case \"MultiLineString\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (segmentIndex < 0)\n        segmentIndex = coords[multiFeatureIndex].length + segmentIndex - 1;\n      return helpers.lineString(\n        [\n          coords[multiFeatureIndex][segmentIndex],\n          coords[multiFeatureIndex][segmentIndex + 1],\n        ],\n        properties,\n        options\n      );\n    case \"MultiPolygon\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (geometryIndex < 0)\n        geometryIndex = coords[multiFeatureIndex].length + geometryIndex;\n      if (segmentIndex < 0)\n        segmentIndex =\n          coords[multiFeatureIndex][geometryIndex].length - segmentIndex - 1;\n      return helpers.lineString(\n        [\n          coords[multiFeatureIndex][geometryIndex][segmentIndex],\n          coords[multiFeatureIndex][geometryIndex][segmentIndex + 1],\n        ],\n        properties,\n        options\n      );\n  }\n  throw new Error(\"geojson is invalid\");\n}\n\n/**\n * Finds a particular Point from a GeoJSON using `@turf/meta` indexes.\n *\n * Negative indexes are permitted.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson Any GeoJSON Feature or Geometry\n * @param {Object} [options={}] Optional parameters\n * @param {number} [options.featureIndex=0] Feature Index\n * @param {number} [options.multiFeatureIndex=0] Multi-Feature Index\n * @param {number} [options.geometryIndex=0] Geometry Index\n * @param {number} [options.coordIndex=0] Coord Index\n * @param {Object} [options.properties={}] Translate Properties to output Point\n * @param {BBox} [options.bbox={}] Translate BBox to output Point\n * @param {number|string} [options.id={}] Translate Id to output Point\n * @returns {Feature<Point>} 2-vertex GeoJSON Feature Point\n * @example\n * var multiLine = turf.multiLineString([\n *     [[10, 10], [50, 30], [30, 40]],\n *     [[-10, -10], [-50, -30], [-30, -40]]\n * ]);\n *\n * // First Segment (defaults are 0)\n * turf.findPoint(multiLine);\n * // => Feature<Point<[10, 10]>>\n *\n * // First Segment of the 2nd Multi-Feature\n * turf.findPoint(multiLine, {multiFeatureIndex: 1});\n * // => Feature<Point<[-10, -10]>>\n *\n * // Last Segment of last Multi-Feature\n * turf.findPoint(multiLine, {multiFeatureIndex: -1, coordIndex: -1});\n * // => Feature<Point<[-30, -40]>>\n */\nfunction findPoint(geojson, options) {\n  // Optional Parameters\n  options = options || {};\n  if (!helpers.isObject(options)) throw new Error(\"options is invalid\");\n  var featureIndex = options.featureIndex || 0;\n  var multiFeatureIndex = options.multiFeatureIndex || 0;\n  var geometryIndex = options.geometryIndex || 0;\n  var coordIndex = options.coordIndex || 0;\n\n  // Find FeatureIndex\n  var properties = options.properties;\n  var geometry;\n\n  switch (geojson.type) {\n    case \"FeatureCollection\":\n      if (featureIndex < 0)\n        featureIndex = geojson.features.length + featureIndex;\n      properties = properties || geojson.features[featureIndex].properties;\n      geometry = geojson.features[featureIndex].geometry;\n      break;\n    case \"Feature\":\n      properties = properties || geojson.properties;\n      geometry = geojson.geometry;\n      break;\n    case \"Point\":\n    case \"MultiPoint\":\n      return null;\n    case \"LineString\":\n    case \"Polygon\":\n    case \"MultiLineString\":\n    case \"MultiPolygon\":\n      geometry = geojson;\n      break;\n    default:\n      throw new Error(\"geojson is invalid\");\n  }\n\n  // Find Coord Index\n  if (geometry === null) return null;\n  var coords = geometry.coordinates;\n  switch (geometry.type) {\n    case \"Point\":\n      return helpers.point(coords, properties, options);\n    case \"MultiPoint\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      return helpers.point(coords[multiFeatureIndex], properties, options);\n    case \"LineString\":\n      if (coordIndex < 0) coordIndex = coords.length + coordIndex;\n      return helpers.point(coords[coordIndex], properties, options);\n    case \"Polygon\":\n      if (geometryIndex < 0) geometryIndex = coords.length + geometryIndex;\n      if (coordIndex < 0)\n        coordIndex = coords[geometryIndex].length + coordIndex;\n      return helpers.point(coords[geometryIndex][coordIndex], properties, options);\n    case \"MultiLineString\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (coordIndex < 0)\n        coordIndex = coords[multiFeatureIndex].length + coordIndex;\n      return helpers.point(coords[multiFeatureIndex][coordIndex], properties, options);\n    case \"MultiPolygon\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (geometryIndex < 0)\n        geometryIndex = coords[multiFeatureIndex].length + geometryIndex;\n      if (coordIndex < 0)\n        coordIndex =\n          coords[multiFeatureIndex][geometryIndex].length - coordIndex;\n      return helpers.point(\n        coords[multiFeatureIndex][geometryIndex][coordIndex],\n        properties,\n        options\n      );\n  }\n  throw new Error(\"geojson is invalid\");\n}\n\nexports.coordAll = coordAll;\nexports.coordEach = coordEach;\nexports.coordReduce = coordReduce;\nexports.featureEach = featureEach;\nexports.featureReduce = featureReduce;\nexports.findPoint = findPoint;\nexports.findSegment = findSegment;\nexports.flattenEach = flattenEach;\nexports.flattenReduce = flattenReduce;\nexports.geomEach = geomEach;\nexports.geomReduce = geomReduce;\nexports.lineEach = lineEach;\nexports.lineReduce = lineReduce;\nexports.propEach = propEach;\nexports.propReduce = propReduce;\nexports.segmentEach = segmentEach;\nexports.segmentReduce = segmentReduce;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar meta_1 = require(\"@turf/meta\");\n/**\n * Takes a set of features, calculates the bbox of all input features, and returns a bounding box.\n *\n * @name bbox\n * @param {GeoJSON} geojson any GeoJSON object\n * @returns {BBox} bbox extent in [minX, minY, maxX, maxY] order\n * @example\n * var line = turf.lineString([[-74, 40], [-78, 42], [-82, 35]]);\n * var bbox = turf.bbox(line);\n * var bboxPolygon = turf.bboxPolygon(bbox);\n *\n * //addToMap\n * var addToMap = [line, bboxPolygon]\n */\nfunction bbox(geojson) {\n    var result = [Infinity, Infinity, -Infinity, -Infinity];\n    meta_1.coordEach(geojson, function (coord) {\n        if (result[0] > coord[0]) {\n            result[0] = coord[0];\n        }\n        if (result[1] > coord[1]) {\n            result[1] = coord[1];\n        }\n        if (result[2] < coord[0]) {\n            result[2] = coord[0];\n        }\n        if (result[3] < coord[1]) {\n            result[3] = coord[1];\n        }\n    });\n    return result;\n}\nbbox[\"default\"] = bbox;\nexports.default = bbox;\n","var rbush = require('rbush');\nvar helpers = require('@turf/helpers');\nvar meta = require('@turf/meta');\nvar turfBBox = require('@turf/bbox').default;\nvar featureEach = meta.featureEach;\nvar coordEach = meta.coordEach;\nvar polygon = helpers.polygon;\nvar featureCollection = helpers.featureCollection;\n\n/**\n * GeoJSON implementation of [RBush](https://github.com/mourner/rbush#rbush) spatial index.\n *\n * @name rbush\n * @param {number} [maxEntries=9] defines the maximum number of entries in a tree node. 9 (used by default) is a\n * reasonable choice for most applications. Higher value means faster insertion and slower search, and vice versa.\n * @returns {RBush} GeoJSON RBush\n * @example\n * var geojsonRbush = require('geojson-rbush').default;\n * var tree = geojsonRbush();\n */\nfunction geojsonRbush(maxEntries) {\n    var tree = new rbush(maxEntries);\n    /**\n     * [insert](https://github.com/mourner/rbush#data-format)\n     *\n     * @param {Feature} feature insert single GeoJSON Feature\n     * @returns {RBush} GeoJSON RBush\n     * @example\n     * var poly = turf.polygon([[[-78, 41], [-67, 41], [-67, 48], [-78, 48], [-78, 41]]]);\n     * tree.insert(poly)\n     */\n    tree.insert = function (feature) {\n        if (feature.type !== 'Feature') throw new Error('invalid feature');\n        feature.bbox = feature.bbox ? feature.bbox : turfBBox(feature);\n        return rbush.prototype.insert.call(this, feature);\n    };\n\n    /**\n     * [load](https://github.com/mourner/rbush#bulk-inserting-data)\n     *\n     * @param {FeatureCollection|Array<Feature>} features load entire GeoJSON FeatureCollection\n     * @returns {RBush} GeoJSON RBush\n     * @example\n     * var polys = turf.polygons([\n     *     [[[-78, 41], [-67, 41], [-67, 48], [-78, 48], [-78, 41]]],\n     *     [[[-93, 32], [-83, 32], [-83, 39], [-93, 39], [-93, 32]]]\n     * ]);\n     * tree.load(polys);\n     */\n    tree.load = function (features) {\n        var load = [];\n        // Load an Array of Features\n        if (Array.isArray(features)) {\n            features.forEach(function (feature) {\n                if (feature.type !== 'Feature') throw new Error('invalid features');\n                feature.bbox = feature.bbox ? feature.bbox : turfBBox(feature);\n                load.push(feature);\n            });\n        } else {\n            // Load a FeatureCollection\n            featureEach(features, function (feature) {\n                if (feature.type !== 'Feature') throw new Error('invalid features');\n                feature.bbox = feature.bbox ? feature.bbox : turfBBox(feature);\n                load.push(feature);\n            });\n        }\n        return rbush.prototype.load.call(this, load);\n    };\n\n    /**\n     * [remove](https://github.com/mourner/rbush#removing-data)\n     *\n     * @param {Feature} feature remove single GeoJSON Feature\n     * @param {Function} equals Pass a custom equals function to compare by value for removal.\n     * @returns {RBush} GeoJSON RBush\n     * @example\n     * var poly = turf.polygon([[[-78, 41], [-67, 41], [-67, 48], [-78, 48], [-78, 41]]]);\n     *\n     * tree.remove(poly);\n     */\n    tree.remove = function (feature, equals) {\n        if (feature.type !== 'Feature') throw new Error('invalid feature');\n        feature.bbox = feature.bbox ? feature.bbox : turfBBox(feature);\n        return rbush.prototype.remove.call(this, feature, equals);\n    };\n\n    /**\n     * [clear](https://github.com/mourner/rbush#removing-data)\n     *\n     * @returns {RBush} GeoJSON Rbush\n     * @example\n     * tree.clear()\n     */\n    tree.clear = function () {\n        return rbush.prototype.clear.call(this);\n    };\n\n    /**\n     * [search](https://github.com/mourner/rbush#search)\n     *\n     * @param {BBox|FeatureCollection|Feature} geojson search with GeoJSON\n     * @returns {FeatureCollection} all features that intersects with the given GeoJSON.\n     * @example\n     * var poly = turf.polygon([[[-78, 41], [-67, 41], [-67, 48], [-78, 48], [-78, 41]]]);\n     *\n     * tree.search(poly);\n     */\n    tree.search = function (geojson) {\n        var features = rbush.prototype.search.call(this, this.toBBox(geojson));\n        return featureCollection(features);\n    };\n\n    /**\n     * [collides](https://github.com/mourner/rbush#collisions)\n     *\n     * @param {BBox|FeatureCollection|Feature} geojson collides with GeoJSON\n     * @returns {boolean} true if there are any items intersecting the given GeoJSON, otherwise false.\n     * @example\n     * var poly = turf.polygon([[[-78, 41], [-67, 41], [-67, 48], [-78, 48], [-78, 41]]]);\n     *\n     * tree.collides(poly);\n     */\n    tree.collides = function (geojson) {\n        return rbush.prototype.collides.call(this, this.toBBox(geojson));\n    };\n\n    /**\n     * [all](https://github.com/mourner/rbush#search)\n     *\n     * @returns {FeatureCollection} all the features in RBush\n     * @example\n     * tree.all()\n     */\n    tree.all = function () {\n        var features = rbush.prototype.all.call(this);\n        return featureCollection(features);\n    };\n\n    /**\n     * [toJSON](https://github.com/mourner/rbush#export-and-import)\n     *\n     * @returns {any} export data as JSON object\n     * @example\n     * var exported = tree.toJSON()\n     */\n    tree.toJSON = function () {\n        return rbush.prototype.toJSON.call(this);\n    };\n\n    /**\n     * [fromJSON](https://github.com/mourner/rbush#export-and-import)\n     *\n     * @param {any} json import previously exported data\n     * @returns {RBush} GeoJSON RBush\n     * @example\n     * var exported = {\n     *   \"children\": [\n     *     {\n     *       \"type\": \"Feature\",\n     *       \"geometry\": {\n     *         \"type\": \"Point\",\n     *         \"coordinates\": [110, 50]\n     *       },\n     *       \"properties\": {},\n     *       \"bbox\": [110, 50, 110, 50]\n     *     }\n     *   ],\n     *   \"height\": 1,\n     *   \"leaf\": true,\n     *   \"minX\": 110,\n     *   \"minY\": 50,\n     *   \"maxX\": 110,\n     *   \"maxY\": 50\n     * }\n     * tree.fromJSON(exported)\n     */\n    tree.fromJSON = function (json) {\n        return rbush.prototype.fromJSON.call(this, json);\n    };\n\n    /**\n     * Converts GeoJSON to {minX, minY, maxX, maxY} schema\n     *\n     * @private\n     * @param {BBox|FeatureCollection|Feature} geojson feature(s) to retrieve BBox from\n     * @returns {Object} converted to {minX, minY, maxX, maxY}\n     */\n    tree.toBBox = function (geojson) {\n        var bbox;\n        if (geojson.bbox) bbox = geojson.bbox;\n        else if (Array.isArray(geojson) && geojson.length === 4) bbox = geojson;\n        else if (Array.isArray(geojson) && geojson.length === 6) bbox = [geojson[0], geojson[1], geojson[3], geojson[4]];\n        else if (geojson.type === 'Feature') bbox = turfBBox(geojson);\n        else if (geojson.type === 'FeatureCollection') bbox = turfBBox(geojson);\n        else throw new Error('invalid geojson')\n\n        return {\n            minX: bbox[0],\n            minY: bbox[1],\n            maxX: bbox[2],\n            maxY: bbox[3]\n        };\n    };\n    return tree;\n}\n\nmodule.exports = geojsonRbush;\nmodule.exports.default = geojsonRbush;\n","import { feature, featureCollection, point, } from \"@turf/helpers\";\nimport { getCoords } from \"@turf/invariant\";\nimport lineSegment from \"@turf/line-segment\";\nimport { featureEach } from \"@turf/meta\";\nimport rbush from \"geojson-rbush\";\n/**\n * Takes any LineString or Polygon GeoJSON and returns the intersecting point(s).\n *\n * @name lineIntersect\n * @param {GeoJSON} line1 any LineString or Polygon\n * @param {GeoJSON} line2 any LineString or Polygon\n * @returns {FeatureCollection<Point>} point(s) that intersect both\n * @example\n * var line1 = turf.lineString([[126, -11], [129, -21]]);\n * var line2 = turf.lineString([[123, -18], [131, -14]]);\n * var intersects = turf.lineIntersect(line1, line2);\n *\n * //addToMap\n * var addToMap = [line1, line2, intersects]\n */\nfunction lineIntersect(line1, line2) {\n    var unique = {};\n    var results = [];\n    // First, normalize geometries to features\n    // Then, handle simple 2-vertex segments\n    if (line1.type === \"LineString\") {\n        line1 = feature(line1);\n    }\n    if (line2.type === \"LineString\") {\n        line2 = feature(line2);\n    }\n    if (line1.type === \"Feature\" &&\n        line2.type === \"Feature\" &&\n        line1.geometry !== null &&\n        line2.geometry !== null &&\n        line1.geometry.type === \"LineString\" &&\n        line2.geometry.type === \"LineString\" &&\n        line1.geometry.coordinates.length === 2 &&\n        line2.geometry.coordinates.length === 2) {\n        var intersect = intersects(line1, line2);\n        if (intersect) {\n            results.push(intersect);\n        }\n        return featureCollection(results);\n    }\n    // Handles complex GeoJSON Geometries\n    var tree = rbush();\n    tree.load(lineSegment(line2));\n    featureEach(lineSegment(line1), function (segment) {\n        featureEach(tree.search(segment), function (match) {\n            var intersect = intersects(segment, match);\n            if (intersect) {\n                // prevent duplicate points https://github.com/Turfjs/turf/issues/688\n                var key = getCoords(intersect).join(\",\");\n                if (!unique[key]) {\n                    unique[key] = true;\n                    results.push(intersect);\n                }\n            }\n        });\n    });\n    return featureCollection(results);\n}\n/**\n * Find a point that intersects LineStrings with two coordinates each\n *\n * @private\n * @param {Feature<LineString>} line1 GeoJSON LineString (Must only contain 2 coordinates)\n * @param {Feature<LineString>} line2 GeoJSON LineString (Must only contain 2 coordinates)\n * @returns {Feature<Point>} intersecting GeoJSON Point\n */\nfunction intersects(line1, line2) {\n    var coords1 = getCoords(line1);\n    var coords2 = getCoords(line2);\n    if (coords1.length !== 2) {\n        throw new Error(\"<intersects> line1 must only contain 2 coordinates\");\n    }\n    if (coords2.length !== 2) {\n        throw new Error(\"<intersects> line2 must only contain 2 coordinates\");\n    }\n    var x1 = coords1[0][0];\n    var y1 = coords1[0][1];\n    var x2 = coords1[1][0];\n    var y2 = coords1[1][1];\n    var x3 = coords2[0][0];\n    var y3 = coords2[0][1];\n    var x4 = coords2[1][0];\n    var y4 = coords2[1][1];\n    var denom = (y4 - y3) * (x2 - x1) - (x4 - x3) * (y2 - y1);\n    var numeA = (x4 - x3) * (y1 - y3) - (y4 - y3) * (x1 - x3);\n    var numeB = (x2 - x1) * (y1 - y3) - (y2 - y1) * (x1 - x3);\n    if (denom === 0) {\n        if (numeA === 0 && numeB === 0) {\n            return null;\n        }\n        return null;\n    }\n    var uA = numeA / denom;\n    var uB = numeB / denom;\n    if (uA >= 0 && uA <= 1 && uB >= 0 && uB <= 1) {\n        var x = x1 + uA * (x2 - x1);\n        var y = y1 + uA * (y2 - y1);\n        return point([x, y]);\n    }\n    return null;\n}\nexport default lineIntersect;\n","import { getCoord, getGeom } from \"@turf/invariant\";\n// http://en.wikipedia.org/wiki/Even%E2%80%93odd_rule\n// modified from: https://github.com/substack/point-in-polygon/blob/master/index.js\n// which was modified from http://www.ecse.rpi.edu/Homepages/wrf/Research/Short_Notes/pnpoly.html\n/**\n * Takes a {@link Point} and a {@link Polygon} or {@link MultiPolygon} and determines if the point\n * resides inside the polygon. The polygon can be convex or concave. The function accounts for holes.\n *\n * @name booleanPointInPolygon\n * @param {Coord} point input point\n * @param {Feature<Polygon|MultiPolygon>} polygon input polygon or multipolygon\n * @param {Object} [options={}] Optional parameters\n * @param {boolean} [options.ignoreBoundary=false] True if polygon boundary should be ignored when determining if\n * the point is inside the polygon otherwise false.\n * @returns {boolean} `true` if the Point is inside the Polygon; `false` if the Point is not inside the Polygon\n * @example\n * var pt = turf.point([-77, 44]);\n * var poly = turf.polygon([[\n *   [-81, 41],\n *   [-81, 47],\n *   [-72, 47],\n *   [-72, 41],\n *   [-81, 41]\n * ]]);\n *\n * turf.booleanPointInPolygon(pt, poly);\n * //= true\n */\nexport default function booleanPointInPolygon(point, polygon, options) {\n    if (options === void 0) { options = {}; }\n    // validation\n    if (!point) {\n        throw new Error(\"point is required\");\n    }\n    if (!polygon) {\n        throw new Error(\"polygon is required\");\n    }\n    var pt = getCoord(point);\n    var geom = getGeom(polygon);\n    var type = geom.type;\n    var bbox = polygon.bbox;\n    var polys = geom.coordinates;\n    // Quick elimination if point is not inside bbox\n    if (bbox && inBBox(pt, bbox) === false) {\n        return false;\n    }\n    // normalize to multipolygon\n    if (type === \"Polygon\") {\n        polys = [polys];\n    }\n    var insidePoly = false;\n    for (var i = 0; i < polys.length && !insidePoly; i++) {\n        // check if it is in the outer ring first\n        if (inRing(pt, polys[i][0], options.ignoreBoundary)) {\n            var inHole = false;\n            var k = 1;\n            // check for the point in any of the holes\n            while (k < polys[i].length && !inHole) {\n                if (inRing(pt, polys[i][k], !options.ignoreBoundary)) {\n                    inHole = true;\n                }\n                k++;\n            }\n            if (!inHole) {\n                insidePoly = true;\n            }\n        }\n    }\n    return insidePoly;\n}\n/**\n * inRing\n *\n * @private\n * @param {Array<number>} pt [x,y]\n * @param {Array<Array<number>>} ring [[x,y], [x,y],..]\n * @param {boolean} ignoreBoundary ignoreBoundary\n * @returns {boolean} inRing\n */\nfunction inRing(pt, ring, ignoreBoundary) {\n    var isInside = false;\n    if (ring[0][0] === ring[ring.length - 1][0] &&\n        ring[0][1] === ring[ring.length - 1][1]) {\n        ring = ring.slice(0, ring.length - 1);\n    }\n    for (var i = 0, j = ring.length - 1; i < ring.length; j = i++) {\n        var xi = ring[i][0];\n        var yi = ring[i][1];\n        var xj = ring[j][0];\n        var yj = ring[j][1];\n        var onBoundary = pt[1] * (xi - xj) + yi * (xj - pt[0]) + yj * (pt[0] - xi) === 0 &&\n            (xi - pt[0]) * (xj - pt[0]) <= 0 &&\n            (yi - pt[1]) * (yj - pt[1]) <= 0;\n        if (onBoundary) {\n            return !ignoreBoundary;\n        }\n        var intersect = yi > pt[1] !== yj > pt[1] &&\n            pt[0] < ((xj - xi) * (pt[1] - yi)) / (yj - yi) + xi;\n        if (intersect) {\n            isInside = !isInside;\n        }\n    }\n    return isInside;\n}\n/**\n * inBBox\n *\n * @private\n * @param {Position} pt point [x,y]\n * @param {BBox} bbox BBox [west, south, east, north]\n * @returns {boolean} true/false if point is inside BBox\n */\nfunction inBBox(pt, bbox) {\n    return (bbox[0] <= pt[0] && bbox[1] <= pt[1] && bbox[2] >= pt[0] && bbox[3] >= pt[1]);\n}\n","import { featureCollection, lineString, multiLineString } from \"@turf/helpers\";\nimport { getGeom } from \"@turf/invariant\";\n/**\n * Converts a {@link Polygon} to {@link LineString|(Multi)LineString} or {@link MultiPolygon} to a\n * {@link FeatureCollection} of {@link LineString|(Multi)LineString}.\n *\n * @name polygonToLine\n * @param {Feature<Polygon|MultiPolygon>} poly Feature to convert\n * @param {Object} [options={}] Optional parameters\n * @param {Object} [options.properties={}] translates GeoJSON properties to Feature\n * @returns {FeatureCollection|Feature<LineString|MultiLinestring>} converted (Multi)Polygon to (Multi)LineString\n * @example\n * var poly = turf.polygon([[[125, -30], [145, -30], [145, -20], [125, -20], [125, -30]]]);\n *\n * var line = turf.polygonToLine(poly);\n *\n * //addToMap\n * var addToMap = [line];\n */\nexport default function (poly, options) {\n    if (options === void 0) { options = {}; }\n    var geom = getGeom(poly);\n    if (!options.properties && poly.type === \"Feature\") {\n        options.properties = poly.properties;\n    }\n    switch (geom.type) {\n        case \"Polygon\":\n            return polygonToLine(geom, options);\n        case \"MultiPolygon\":\n            return multiPolygonToLine(geom, options);\n        default:\n            throw new Error(\"invalid poly\");\n    }\n}\n/**\n * @private\n */\nexport function polygonToLine(poly, options) {\n    if (options === void 0) { options = {}; }\n    var geom = getGeom(poly);\n    var coords = geom.coordinates;\n    var properties = options.properties\n        ? options.properties\n        : poly.type === \"Feature\"\n            ? poly.properties\n            : {};\n    return coordsToLine(coords, properties);\n}\n/**\n * @private\n */\nexport function multiPolygonToLine(multiPoly, options) {\n    if (options === void 0) { options = {}; }\n    var geom = getGeom(multiPoly);\n    var coords = geom.coordinates;\n    var properties = options.properties\n        ? options.properties\n        : multiPoly.type === \"Feature\"\n            ? multiPoly.properties\n            : {};\n    var lines = [];\n    coords.forEach(function (coord) {\n        lines.push(coordsToLine(coord, properties));\n    });\n    return featureCollection(lines);\n}\n/**\n * @private\n */\nexport function coordsToLine(coords, properties) {\n    if (coords.length > 1) {\n        return multiLineString(coords, properties);\n    }\n    return lineString(coords[0], properties);\n}\n","import booleanPointInPolygon from \"@turf/boolean-point-in-polygon\";\nimport lineIntersect from \"@turf/line-intersect\";\nimport { flattenEach } from \"@turf/meta\";\nimport polygonToLine from \"@turf/polygon-to-line\";\n/**\n * Boolean-disjoint returns (TRUE) if the intersection of the two geometries is an empty set.\n *\n * @name booleanDisjoint\n * @param {Geometry|Feature<any>} feature1 GeoJSON Feature or Geometry\n * @param {Geometry|Feature<any>} feature2 GeoJSON Feature or Geometry\n * @returns {boolean} true/false\n * @example\n * var point = turf.point([2, 2]);\n * var line = turf.lineString([[1, 1], [1, 2], [1, 3], [1, 4]]);\n *\n * turf.booleanDisjoint(line, point);\n * //=true\n */\nfunction booleanDisjoint(feature1, feature2) {\n    var bool = true;\n    flattenEach(feature1, function (flatten1) {\n        flattenEach(feature2, function (flatten2) {\n            if (bool === false) {\n                return false;\n            }\n            bool = disjoint(flatten1.geometry, flatten2.geometry);\n        });\n    });\n    return bool;\n}\n/**\n * Disjoint operation for simple Geometries (Point/LineString/Polygon)\n *\n * @private\n * @param {Geometry<any>} geom1 GeoJSON Geometry\n * @param {Geometry<any>} geom2 GeoJSON Geometry\n * @returns {boolean} true/false\n */\nfunction disjoint(geom1, geom2) {\n    switch (geom1.type) {\n        case \"Point\":\n            switch (geom2.type) {\n                case \"Point\":\n                    return !compareCoords(geom1.coordinates, geom2.coordinates);\n                case \"LineString\":\n                    return !isPointOnLine(geom2, geom1);\n                case \"Polygon\":\n                    return !booleanPointInPolygon(geom1, geom2);\n            }\n            /* istanbul ignore next */\n            break;\n        case \"LineString\":\n            switch (geom2.type) {\n                case \"Point\":\n                    return !isPointOnLine(geom1, geom2);\n                case \"LineString\":\n                    return !isLineOnLine(geom1, geom2);\n                case \"Polygon\":\n                    return !isLineInPoly(geom2, geom1);\n            }\n            /* istanbul ignore next */\n            break;\n        case \"Polygon\":\n            switch (geom2.type) {\n                case \"Point\":\n                    return !booleanPointInPolygon(geom2, geom1);\n                case \"LineString\":\n                    return !isLineInPoly(geom1, geom2);\n                case \"Polygon\":\n                    return !isPolyInPoly(geom2, geom1);\n            }\n    }\n    return false;\n}\n// http://stackoverflow.com/a/11908158/1979085\nfunction isPointOnLine(lineString, pt) {\n    for (var i = 0; i < lineString.coordinates.length - 1; i++) {\n        if (isPointOnLineSegment(lineString.coordinates[i], lineString.coordinates[i + 1], pt.coordinates)) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction isLineOnLine(lineString1, lineString2) {\n    var doLinesIntersect = lineIntersect(lineString1, lineString2);\n    if (doLinesIntersect.features.length > 0) {\n        return true;\n    }\n    return false;\n}\nfunction isLineInPoly(polygon, lineString) {\n    for (var _i = 0, _a = lineString.coordinates; _i < _a.length; _i++) {\n        var coord = _a[_i];\n        if (booleanPointInPolygon(coord, polygon)) {\n            return true;\n        }\n    }\n    var doLinesIntersect = lineIntersect(lineString, polygonToLine(polygon));\n    if (doLinesIntersect.features.length > 0) {\n        return true;\n    }\n    return false;\n}\n/**\n * Is Polygon (geom1) in Polygon (geom2)\n * Only takes into account outer rings\n * See http://stackoverflow.com/a/4833823/1979085\n *\n * @private\n * @param {Geometry|Feature<Polygon>} feature1 Polygon1\n * @param {Geometry|Feature<Polygon>} feature2 Polygon2\n * @returns {boolean} true/false\n */\nfunction isPolyInPoly(feature1, feature2) {\n    for (var _i = 0, _a = feature1.coordinates[0]; _i < _a.length; _i++) {\n        var coord1 = _a[_i];\n        if (booleanPointInPolygon(coord1, feature2)) {\n            return true;\n        }\n    }\n    for (var _b = 0, _c = feature2.coordinates[0]; _b < _c.length; _b++) {\n        var coord2 = _c[_b];\n        if (booleanPointInPolygon(coord2, feature1)) {\n            return true;\n        }\n    }\n    var doLinesIntersect = lineIntersect(polygonToLine(feature1), polygonToLine(feature2));\n    if (doLinesIntersect.features.length > 0) {\n        return true;\n    }\n    return false;\n}\nfunction isPointOnLineSegment(lineSegmentStart, lineSegmentEnd, pt) {\n    var dxc = pt[0] - lineSegmentStart[0];\n    var dyc = pt[1] - lineSegmentStart[1];\n    var dxl = lineSegmentEnd[0] - lineSegmentStart[0];\n    var dyl = lineSegmentEnd[1] - lineSegmentStart[1];\n    var cross = dxc * dyl - dyc * dxl;\n    if (cross !== 0) {\n        return false;\n    }\n    if (Math.abs(dxl) >= Math.abs(dyl)) {\n        if (dxl > 0) {\n            return lineSegmentStart[0] <= pt[0] && pt[0] <= lineSegmentEnd[0];\n        }\n        else {\n            return lineSegmentEnd[0] <= pt[0] && pt[0] <= lineSegmentStart[0];\n        }\n    }\n    else if (dyl > 0) {\n        return lineSegmentStart[1] <= pt[1] && pt[1] <= lineSegmentEnd[1];\n    }\n    else {\n        return lineSegmentEnd[1] <= pt[1] && pt[1] <= lineSegmentStart[1];\n    }\n}\n/**\n * compareCoords\n *\n * @private\n * @param {Position} pair1 point [x,y]\n * @param {Position} pair2 point [x,y]\n * @returns {boolean} true/false if coord pairs match\n */\nfunction compareCoords(pair1, pair2) {\n    return pair1[0] === pair2[0] && pair1[1] === pair2[1];\n}\nexport default booleanDisjoint;\n","import { flattenEach } from '@turf/meta';\nimport { getType, getCoords } from '@turf/invariant';\nimport { isObject, lineString, multiLineString, lengthToDegrees } from '@turf/helpers';\n\n/**\n * https://github.com/rook2pawn/node-intersection\n *\n * Author @rook2pawn\n */\n\n/**\n * AB\n *\n * @private\n * @param {Array<Array<number>>} segment - 2 vertex line segment\n * @returns {Array<number>} coordinates [x, y]\n */\nfunction ab(segment) {\n  var start = segment[0];\n  var end = segment[1];\n  return [end[0] - start[0], end[1] - start[1]];\n}\n\n/**\n * Cross Product\n *\n * @private\n * @param {Array<number>} v1 coordinates [x, y]\n * @param {Array<number>} v2 coordinates [x, y]\n * @returns {Array<number>} Cross Product\n */\nfunction crossProduct(v1, v2) {\n  return v1[0] * v2[1] - v2[0] * v1[1];\n}\n\n/**\n * Add\n *\n * @private\n * @param {Array<number>} v1 coordinates [x, y]\n * @param {Array<number>} v2 coordinates [x, y]\n * @returns {Array<number>} Add\n */\nfunction add(v1, v2) {\n  return [v1[0] + v2[0], v1[1] + v2[1]];\n}\n\n/**\n * Sub\n *\n * @private\n * @param {Array<number>} v1 coordinates [x, y]\n * @param {Array<number>} v2 coordinates [x, y]\n * @returns {Array<number>} Sub\n */\nfunction sub(v1, v2) {\n  return [v1[0] - v2[0], v1[1] - v2[1]];\n}\n\n/**\n * scalarMult\n *\n * @private\n * @param {number} s scalar\n * @param {Array<number>} v coordinates [x, y]\n * @returns {Array<number>} scalarMult\n */\nfunction scalarMult(s, v) {\n  return [s * v[0], s * v[1]];\n}\n\n/**\n * Intersect Segments\n *\n * @private\n * @param {Array<number>} a coordinates [x, y]\n * @param {Array<number>} b coordinates [x, y]\n * @returns {Array<number>} intersection\n */\nfunction intersectSegments(a, b) {\n  var p = a[0];\n  var r = ab(a);\n  var q = b[0];\n  var s = ab(b);\n\n  var cross = crossProduct(r, s);\n  var qmp = sub(q, p);\n  var numerator = crossProduct(qmp, s);\n  var t = numerator / cross;\n  var intersection = add(p, scalarMult(t, r));\n  return intersection;\n}\n\n/**\n * Is Parallel\n *\n * @private\n * @param {Array<number>} a coordinates [x, y]\n * @param {Array<number>} b coordinates [x, y]\n * @returns {boolean} true if a and b are parallel (or co-linear)\n */\nfunction isParallel(a, b) {\n  var r = ab(a);\n  var s = ab(b);\n  return crossProduct(r, s) === 0;\n}\n\n/**\n * Intersection\n *\n * @private\n * @param {Array<number>} a coordinates [x, y]\n * @param {Array<number>} b coordinates [x, y]\n * @returns {Array<number>|boolean} true if a and b are parallel (or co-linear)\n */\nfunction intersection(a, b) {\n  if (isParallel(a, b)) return false;\n  return intersectSegments(a, b);\n}\n\n/**\n * Takes a {@link LineString|line} and returns a {@link LineString|line} at offset by the specified distance.\n *\n * @name lineOffset\n * @param {Geometry|Feature<LineString|MultiLineString>} geojson input GeoJSON\n * @param {number} distance distance to offset the line (can be of negative value)\n * @param {Object} [options={}] Optional parameters\n * @param {string} [options.units='kilometers'] can be degrees, radians, miles, kilometers, inches, yards, meters\n * @returns {Feature<LineString|MultiLineString>} Line offset from the input line\n * @example\n * var line = turf.lineString([[-83, 30], [-84, 36], [-78, 41]], { \"stroke\": \"#F00\" });\n *\n * var offsetLine = turf.lineOffset(line, 2, {units: 'miles'});\n *\n * //addToMap\n * var addToMap = [offsetLine, line]\n * offsetLine.properties.stroke = \"#00F\"\n */\nfunction lineOffset(geojson, distance, options) {\n  // Optional parameters\n  options = options || {};\n  if (!isObject(options)) throw new Error(\"options is invalid\");\n  var units = options.units;\n\n  // Valdiation\n  if (!geojson) throw new Error(\"geojson is required\");\n  if (distance === undefined || distance === null || isNaN(distance))\n    throw new Error(\"distance is required\");\n\n  var type = getType(geojson);\n  var properties = geojson.properties;\n\n  switch (type) {\n    case \"LineString\":\n      return lineOffsetFeature(geojson, distance, units);\n    case \"MultiLineString\":\n      var coords = [];\n      flattenEach(geojson, function (feature) {\n        coords.push(\n          lineOffsetFeature(feature, distance, units).geometry.coordinates\n        );\n      });\n      return multiLineString(coords, properties);\n    default:\n      throw new Error(\"geometry \" + type + \" is not supported\");\n  }\n}\n\n/**\n * Line Offset\n *\n * @private\n * @param {Geometry|Feature<LineString>} line input line\n * @param {number} distance distance to offset the line (can be of negative value)\n * @param {string} [units=kilometers] units\n * @returns {Feature<LineString>} Line offset from the input line\n */\nfunction lineOffsetFeature(line, distance, units) {\n  var segments = [];\n  var offsetDegrees = lengthToDegrees(distance, units);\n  var coords = getCoords(line);\n  var finalCoords = [];\n  coords.forEach(function (currentCoords, index) {\n    if (index !== coords.length - 1) {\n      var segment = processSegment(\n        currentCoords,\n        coords[index + 1],\n        offsetDegrees\n      );\n      segments.push(segment);\n      if (index > 0) {\n        var seg2Coords = segments[index - 1];\n        var intersects = intersection(segment, seg2Coords);\n\n        // Handling for line segments that aren't straight\n        if (intersects !== false) {\n          seg2Coords[1] = intersects;\n          segment[0] = intersects;\n        }\n\n        finalCoords.push(seg2Coords[0]);\n        if (index === coords.length - 2) {\n          finalCoords.push(segment[0]);\n          finalCoords.push(segment[1]);\n        }\n      }\n      // Handling for lines that only have 1 segment\n      if (coords.length === 2) {\n        finalCoords.push(segment[0]);\n        finalCoords.push(segment[1]);\n      }\n    }\n  });\n  return lineString(finalCoords, line.properties);\n}\n\n/**\n * Process Segment\n * Inspiration taken from http://stackoverflow.com/questions/2825412/draw-a-parallel-line\n *\n * @private\n * @param {Array<number>} point1 Point coordinates\n * @param {Array<number>} point2 Point coordinates\n * @param {number} offset Offset\n * @returns {Array<Array<number>>} offset points\n */\nfunction processSegment(point1, point2, offset) {\n  var L = Math.sqrt(\n    (point1[0] - point2[0]) * (point1[0] - point2[0]) +\n      (point1[1] - point2[1]) * (point1[1] - point2[1])\n  );\n\n  var out1x = point1[0] + (offset * (point2[1] - point1[1])) / L;\n  var out2x = point2[0] + (offset * (point2[1] - point1[1])) / L;\n  var out1y = point1[1] + (offset * (point1[0] - point2[0])) / L;\n  var out2y = point2[1] + (offset * (point1[0] - point2[0])) / L;\n  return [\n    [out1x, out1y],\n    [out2x, out2y],\n  ];\n}\n\nexport default lineOffset;\n","import { coordEach } from \"@turf/meta\";\n/**\n * Takes a set of features, calculates the bbox of all input features, and returns a bounding box.\n *\n * @name bbox\n * @param {GeoJSON} geojson any GeoJSON object\n * @returns {BBox} bbox extent in [minX, minY, maxX, maxY] order\n * @example\n * var line = turf.lineString([[-74, 40], [-78, 42], [-82, 35]]);\n * var bbox = turf.bbox(line);\n * var bboxPolygon = turf.bboxPolygon(bbox);\n *\n * //addToMap\n * var addToMap = [line, bboxPolygon]\n */\nfunction bbox(geojson) {\n    var result = [Infinity, Infinity, -Infinity, -Infinity];\n    coordEach(geojson, function (coord) {\n        if (result[0] > coord[0]) {\n            result[0] = coord[0];\n        }\n        if (result[1] > coord[1]) {\n            result[1] = coord[1];\n        }\n        if (result[2] < coord[0]) {\n            result[2] = coord[0];\n        }\n        if (result[3] < coord[1]) {\n            result[3] = coord[1];\n        }\n    });\n    return result;\n}\nbbox[\"default\"] = bbox;\nexport default bbox;\n","import turfBBox from \"@turf/bbox\";\nimport { getCoords, getGeom } from \"@turf/invariant\";\nimport { polygon, multiPolygon, lineString, } from \"@turf/helpers\";\nimport clone from \"@turf/clone\";\n/**\n * Converts (Multi)LineString(s) to Polygon(s).\n *\n * @name lineToPolygon\n * @param {FeatureCollection|Feature<LineString|MultiLineString>} lines Features to convert\n * @param {Object} [options={}] Optional parameters\n * @param {Object} [options.properties={}] translates GeoJSON properties to Feature\n * @param {boolean} [options.autoComplete=true] auto complete linestrings (matches first & last coordinates)\n * @param {boolean} [options.orderCoords=true] sorts linestrings to place outer ring at the first position of the coordinates\n * @param {boolean} [options.mutate=false] mutate the original linestring using autoComplete (matches first & last coordinates)\n * @returns {Feature<Polygon|MultiPolygon>} converted to Polygons\n * @example\n * var line = turf.lineString([[125, -30], [145, -30], [145, -20], [125, -20], [125, -30]]);\n *\n * var polygon = turf.lineToPolygon(line);\n *\n * //addToMap\n * var addToMap = [polygon];\n */\nfunction lineToPolygon(lines, options) {\n    if (options === void 0) { options = {}; }\n    var _a, _b, _c;\n    // Optional parameters\n    var properties = options.properties;\n    var autoComplete = (_a = options.autoComplete) !== null && _a !== void 0 ? _a : true;\n    var orderCoords = (_b = options.orderCoords) !== null && _b !== void 0 ? _b : true;\n    var mutate = (_c = options.mutate) !== null && _c !== void 0 ? _c : false;\n    if (!mutate) {\n        lines = clone(lines);\n    }\n    switch (lines.type) {\n        case \"FeatureCollection\":\n            var coords = [];\n            lines.features.forEach(function (line) {\n                coords.push(getCoords(lineStringToPolygon(line, {}, autoComplete, orderCoords)));\n            });\n            return multiPolygon(coords, properties);\n        default:\n            return lineStringToPolygon(lines, properties, autoComplete, orderCoords);\n    }\n}\n/**\n * LineString to Polygon\n *\n * @private\n * @param {Feature<LineString|MultiLineString>} line line\n * @param {Object} [properties] translates GeoJSON properties to Feature\n * @param {boolean} [autoComplete=true] auto complete linestrings\n * @param {boolean} [orderCoords=true] sorts linestrings to place outer ring at the first position of the coordinates\n * @returns {Feature<Polygon>} line converted to Polygon\n */\nfunction lineStringToPolygon(line, properties, autoComplete, orderCoords) {\n    properties = properties\n        ? properties\n        : line.type === \"Feature\"\n            ? line.properties\n            : {};\n    var geom = getGeom(line);\n    var coords = geom.coordinates;\n    var type = geom.type;\n    if (!coords.length)\n        throw new Error(\"line must contain coordinates\");\n    switch (type) {\n        case \"LineString\":\n            if (autoComplete)\n                coords = autoCompleteCoords(coords);\n            return polygon([coords], properties);\n        case \"MultiLineString\":\n            var multiCoords = [];\n            var largestArea = 0;\n            coords.forEach(function (coord) {\n                if (autoComplete)\n                    coord = autoCompleteCoords(coord);\n                // Largest LineString to be placed in the first position of the coordinates array\n                if (orderCoords) {\n                    var area = calculateArea(turfBBox(lineString(coord)));\n                    if (area > largestArea) {\n                        multiCoords.unshift(coord);\n                        largestArea = area;\n                    }\n                    else\n                        multiCoords.push(coord);\n                }\n                else {\n                    multiCoords.push(coord);\n                }\n            });\n            return polygon(multiCoords, properties);\n        default:\n            throw new Error(\"geometry type \" + type + \" is not supported\");\n    }\n}\n/**\n * Auto Complete Coords - matches first & last coordinates\n *\n * @private\n * @param {Array<Array<number>>} coords Coordinates\n * @returns {Array<Array<number>>} auto completed coordinates\n */\nfunction autoCompleteCoords(coords) {\n    var first = coords[0];\n    var x1 = first[0];\n    var y1 = first[1];\n    var last = coords[coords.length - 1];\n    var x2 = last[0];\n    var y2 = last[1];\n    if (x1 !== x2 || y1 !== y2) {\n        coords.push(first);\n    }\n    return coords;\n}\n/**\n * area - quick approximate area calculation (used to sort)\n *\n * @private\n * @param {Array<number>} bbox BBox [west, south, east, north]\n * @returns {number} very quick area calculation\n */\nfunction calculateArea(bbox) {\n    var west = bbox[0];\n    var south = bbox[1];\n    var east = bbox[2];\n    var north = bbox[3];\n    return Math.abs(west - east) * Math.abs(south - north);\n}\nexport default lineToPolygon;\n","/**\n * splaytree v3.1.1\n * Fast Splay tree for Node and browser\n *\n * @author Alexander Milevski <info@w8r.name>\n * @license MIT\n * @preserve\n */\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n\r\nfunction __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\n\nvar Node = /** @class */ (function () {\r\n    function Node(key, data) {\r\n        this.next = null;\r\n        this.key = key;\r\n        this.data = data;\r\n        this.left = null;\r\n        this.right = null;\r\n    }\r\n    return Node;\r\n}());\n\n/* follows \"An implementation of top-down splaying\"\r\n * by D. Sleator <sleator@cs.cmu.edu> March 1992\r\n */\r\nfunction DEFAULT_COMPARE(a, b) {\r\n    return a > b ? 1 : a < b ? -1 : 0;\r\n}\r\n/**\r\n * Simple top down splay, not requiring i to be in the tree t.\r\n */\r\nfunction splay(i, t, comparator) {\r\n    var N = new Node(null, null);\r\n    var l = N;\r\n    var r = N;\r\n    while (true) {\r\n        var cmp = comparator(i, t.key);\r\n        //if (i < t.key) {\r\n        if (cmp < 0) {\r\n            if (t.left === null)\r\n                break;\r\n            //if (i < t.left.key) {\r\n            if (comparator(i, t.left.key) < 0) {\r\n                var y = t.left; /* rotate right */\r\n                t.left = y.right;\r\n                y.right = t;\r\n                t = y;\r\n                if (t.left === null)\r\n                    break;\r\n            }\r\n            r.left = t; /* link right */\r\n            r = t;\r\n            t = t.left;\r\n            //} else if (i > t.key) {\r\n        }\r\n        else if (cmp > 0) {\r\n            if (t.right === null)\r\n                break;\r\n            //if (i > t.right.key) {\r\n            if (comparator(i, t.right.key) > 0) {\r\n                var y = t.right; /* rotate left */\r\n                t.right = y.left;\r\n                y.left = t;\r\n                t = y;\r\n                if (t.right === null)\r\n                    break;\r\n            }\r\n            l.right = t; /* link left */\r\n            l = t;\r\n            t = t.right;\r\n        }\r\n        else\r\n            break;\r\n    }\r\n    /* assemble */\r\n    l.right = t.left;\r\n    r.left = t.right;\r\n    t.left = N.right;\r\n    t.right = N.left;\r\n    return t;\r\n}\r\nfunction insert(i, data, t, comparator) {\r\n    var node = new Node(i, data);\r\n    if (t === null) {\r\n        node.left = node.right = null;\r\n        return node;\r\n    }\r\n    t = splay(i, t, comparator);\r\n    var cmp = comparator(i, t.key);\r\n    if (cmp < 0) {\r\n        node.left = t.left;\r\n        node.right = t;\r\n        t.left = null;\r\n    }\r\n    else if (cmp >= 0) {\r\n        node.right = t.right;\r\n        node.left = t;\r\n        t.right = null;\r\n    }\r\n    return node;\r\n}\r\nfunction split(key, v, comparator) {\r\n    var left = null;\r\n    var right = null;\r\n    if (v) {\r\n        v = splay(key, v, comparator);\r\n        var cmp = comparator(v.key, key);\r\n        if (cmp === 0) {\r\n            left = v.left;\r\n            right = v.right;\r\n        }\r\n        else if (cmp < 0) {\r\n            right = v.right;\r\n            v.right = null;\r\n            left = v;\r\n        }\r\n        else {\r\n            left = v.left;\r\n            v.left = null;\r\n            right = v;\r\n        }\r\n    }\r\n    return { left: left, right: right };\r\n}\r\nfunction merge(left, right, comparator) {\r\n    if (right === null)\r\n        return left;\r\n    if (left === null)\r\n        return right;\r\n    right = splay(left.key, right, comparator);\r\n    right.left = left;\r\n    return right;\r\n}\r\n/**\r\n * Prints level of the tree\r\n */\r\nfunction printRow(root, prefix, isTail, out, printNode) {\r\n    if (root) {\r\n        out(\"\" + prefix + (isTail ? '└── ' : '├── ') + printNode(root) + \"\\n\");\r\n        var indent = prefix + (isTail ? '    ' : '│   ');\r\n        if (root.left)\r\n            printRow(root.left, indent, false, out, printNode);\r\n        if (root.right)\r\n            printRow(root.right, indent, true, out, printNode);\r\n    }\r\n}\r\nvar Tree = /** @class */ (function () {\r\n    function Tree(comparator) {\r\n        if (comparator === void 0) { comparator = DEFAULT_COMPARE; }\r\n        this._root = null;\r\n        this._size = 0;\r\n        this._comparator = comparator;\r\n    }\r\n    /**\r\n     * Inserts a key, allows duplicates\r\n     */\r\n    Tree.prototype.insert = function (key, data) {\r\n        this._size++;\r\n        return this._root = insert(key, data, this._root, this._comparator);\r\n    };\r\n    /**\r\n     * Adds a key, if it is not present in the tree\r\n     */\r\n    Tree.prototype.add = function (key, data) {\r\n        var node = new Node(key, data);\r\n        if (this._root === null) {\r\n            node.left = node.right = null;\r\n            this._size++;\r\n            this._root = node;\r\n        }\r\n        var comparator = this._comparator;\r\n        var t = splay(key, this._root, comparator);\r\n        var cmp = comparator(key, t.key);\r\n        if (cmp === 0)\r\n            this._root = t;\r\n        else {\r\n            if (cmp < 0) {\r\n                node.left = t.left;\r\n                node.right = t;\r\n                t.left = null;\r\n            }\r\n            else if (cmp > 0) {\r\n                node.right = t.right;\r\n                node.left = t;\r\n                t.right = null;\r\n            }\r\n            this._size++;\r\n            this._root = node;\r\n        }\r\n        return this._root;\r\n    };\r\n    /**\r\n     * @param  {Key} key\r\n     * @return {Node|null}\r\n     */\r\n    Tree.prototype.remove = function (key) {\r\n        this._root = this._remove(key, this._root, this._comparator);\r\n    };\r\n    /**\r\n     * Deletes i from the tree if it's there\r\n     */\r\n    Tree.prototype._remove = function (i, t, comparator) {\r\n        var x;\r\n        if (t === null)\r\n            return null;\r\n        t = splay(i, t, comparator);\r\n        var cmp = comparator(i, t.key);\r\n        if (cmp === 0) { /* found it */\r\n            if (t.left === null) {\r\n                x = t.right;\r\n            }\r\n            else {\r\n                x = splay(i, t.left, comparator);\r\n                x.right = t.right;\r\n            }\r\n            this._size--;\r\n            return x;\r\n        }\r\n        return t; /* It wasn't there */\r\n    };\r\n    /**\r\n     * Removes and returns the node with smallest key\r\n     */\r\n    Tree.prototype.pop = function () {\r\n        var node = this._root;\r\n        if (node) {\r\n            while (node.left)\r\n                node = node.left;\r\n            this._root = splay(node.key, this._root, this._comparator);\r\n            this._root = this._remove(node.key, this._root, this._comparator);\r\n            return { key: node.key, data: node.data };\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * Find without splaying\r\n     */\r\n    Tree.prototype.findStatic = function (key) {\r\n        var current = this._root;\r\n        var compare = this._comparator;\r\n        while (current) {\r\n            var cmp = compare(key, current.key);\r\n            if (cmp === 0)\r\n                return current;\r\n            else if (cmp < 0)\r\n                current = current.left;\r\n            else\r\n                current = current.right;\r\n        }\r\n        return null;\r\n    };\r\n    Tree.prototype.find = function (key) {\r\n        if (this._root) {\r\n            this._root = splay(key, this._root, this._comparator);\r\n            if (this._comparator(key, this._root.key) !== 0)\r\n                return null;\r\n        }\r\n        return this._root;\r\n    };\r\n    Tree.prototype.contains = function (key) {\r\n        var current = this._root;\r\n        var compare = this._comparator;\r\n        while (current) {\r\n            var cmp = compare(key, current.key);\r\n            if (cmp === 0)\r\n                return true;\r\n            else if (cmp < 0)\r\n                current = current.left;\r\n            else\r\n                current = current.right;\r\n        }\r\n        return false;\r\n    };\r\n    Tree.prototype.forEach = function (visitor, ctx) {\r\n        var current = this._root;\r\n        var Q = []; /* Initialize stack s */\r\n        var done = false;\r\n        while (!done) {\r\n            if (current !== null) {\r\n                Q.push(current);\r\n                current = current.left;\r\n            }\r\n            else {\r\n                if (Q.length !== 0) {\r\n                    current = Q.pop();\r\n                    visitor.call(ctx, current);\r\n                    current = current.right;\r\n                }\r\n                else\r\n                    done = true;\r\n            }\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Walk key range from `low` to `high`. Stops if `fn` returns a value.\r\n     */\r\n    Tree.prototype.range = function (low, high, fn, ctx) {\r\n        var Q = [];\r\n        var compare = this._comparator;\r\n        var node = this._root;\r\n        var cmp;\r\n        while (Q.length !== 0 || node) {\r\n            if (node) {\r\n                Q.push(node);\r\n                node = node.left;\r\n            }\r\n            else {\r\n                node = Q.pop();\r\n                cmp = compare(node.key, high);\r\n                if (cmp > 0) {\r\n                    break;\r\n                }\r\n                else if (compare(node.key, low) >= 0) {\r\n                    if (fn.call(ctx, node))\r\n                        return this; // stop if smth is returned\r\n                }\r\n                node = node.right;\r\n            }\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Returns array of keys\r\n     */\r\n    Tree.prototype.keys = function () {\r\n        var keys = [];\r\n        this.forEach(function (_a) {\r\n            var key = _a.key;\r\n            return keys.push(key);\r\n        });\r\n        return keys;\r\n    };\r\n    /**\r\n     * Returns array of all the data in the nodes\r\n     */\r\n    Tree.prototype.values = function () {\r\n        var values = [];\r\n        this.forEach(function (_a) {\r\n            var data = _a.data;\r\n            return values.push(data);\r\n        });\r\n        return values;\r\n    };\r\n    Tree.prototype.min = function () {\r\n        if (this._root)\r\n            return this.minNode(this._root).key;\r\n        return null;\r\n    };\r\n    Tree.prototype.max = function () {\r\n        if (this._root)\r\n            return this.maxNode(this._root).key;\r\n        return null;\r\n    };\r\n    Tree.prototype.minNode = function (t) {\r\n        if (t === void 0) { t = this._root; }\r\n        if (t)\r\n            while (t.left)\r\n                t = t.left;\r\n        return t;\r\n    };\r\n    Tree.prototype.maxNode = function (t) {\r\n        if (t === void 0) { t = this._root; }\r\n        if (t)\r\n            while (t.right)\r\n                t = t.right;\r\n        return t;\r\n    };\r\n    /**\r\n     * Returns node at given index\r\n     */\r\n    Tree.prototype.at = function (index) {\r\n        var current = this._root;\r\n        var done = false;\r\n        var i = 0;\r\n        var Q = [];\r\n        while (!done) {\r\n            if (current) {\r\n                Q.push(current);\r\n                current = current.left;\r\n            }\r\n            else {\r\n                if (Q.length > 0) {\r\n                    current = Q.pop();\r\n                    if (i === index)\r\n                        return current;\r\n                    i++;\r\n                    current = current.right;\r\n                }\r\n                else\r\n                    done = true;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    Tree.prototype.next = function (d) {\r\n        var root = this._root;\r\n        var successor = null;\r\n        if (d.right) {\r\n            successor = d.right;\r\n            while (successor.left)\r\n                successor = successor.left;\r\n            return successor;\r\n        }\r\n        var comparator = this._comparator;\r\n        while (root) {\r\n            var cmp = comparator(d.key, root.key);\r\n            if (cmp === 0)\r\n                break;\r\n            else if (cmp < 0) {\r\n                successor = root;\r\n                root = root.left;\r\n            }\r\n            else\r\n                root = root.right;\r\n        }\r\n        return successor;\r\n    };\r\n    Tree.prototype.prev = function (d) {\r\n        var root = this._root;\r\n        var predecessor = null;\r\n        if (d.left !== null) {\r\n            predecessor = d.left;\r\n            while (predecessor.right)\r\n                predecessor = predecessor.right;\r\n            return predecessor;\r\n        }\r\n        var comparator = this._comparator;\r\n        while (root) {\r\n            var cmp = comparator(d.key, root.key);\r\n            if (cmp === 0)\r\n                break;\r\n            else if (cmp < 0)\r\n                root = root.left;\r\n            else {\r\n                predecessor = root;\r\n                root = root.right;\r\n            }\r\n        }\r\n        return predecessor;\r\n    };\r\n    Tree.prototype.clear = function () {\r\n        this._root = null;\r\n        this._size = 0;\r\n        return this;\r\n    };\r\n    Tree.prototype.toList = function () {\r\n        return toList(this._root);\r\n    };\r\n    /**\r\n     * Bulk-load items. Both array have to be same size\r\n     */\r\n    Tree.prototype.load = function (keys, values, presort) {\r\n        if (values === void 0) { values = []; }\r\n        if (presort === void 0) { presort = false; }\r\n        var size = keys.length;\r\n        var comparator = this._comparator;\r\n        // sort if needed\r\n        if (presort)\r\n            sort(keys, values, 0, size - 1, comparator);\r\n        if (this._root === null) { // empty tree\r\n            this._root = loadRecursive(keys, values, 0, size);\r\n            this._size = size;\r\n        }\r\n        else { // that re-builds the whole tree from two in-order traversals\r\n            var mergedList = mergeLists(this.toList(), createList(keys, values), comparator);\r\n            size = this._size + size;\r\n            this._root = sortedListToBST({ head: mergedList }, 0, size);\r\n        }\r\n        return this;\r\n    };\r\n    Tree.prototype.isEmpty = function () { return this._root === null; };\r\n    Object.defineProperty(Tree.prototype, \"size\", {\r\n        get: function () { return this._size; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Tree.prototype, \"root\", {\r\n        get: function () { return this._root; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Tree.prototype.toString = function (printNode) {\r\n        if (printNode === void 0) { printNode = function (n) { return String(n.key); }; }\r\n        var out = [];\r\n        printRow(this._root, '', true, function (v) { return out.push(v); }, printNode);\r\n        return out.join('');\r\n    };\r\n    Tree.prototype.update = function (key, newKey, newData) {\r\n        var comparator = this._comparator;\r\n        var _a = split(key, this._root, comparator), left = _a.left, right = _a.right;\r\n        if (comparator(key, newKey) < 0) {\r\n            right = insert(newKey, newData, right, comparator);\r\n        }\r\n        else {\r\n            left = insert(newKey, newData, left, comparator);\r\n        }\r\n        this._root = merge(left, right, comparator);\r\n    };\r\n    Tree.prototype.split = function (key) {\r\n        return split(key, this._root, this._comparator);\r\n    };\r\n    Tree.prototype[Symbol.iterator] = function () {\r\n        var n;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    n = this.minNode();\r\n                    _a.label = 1;\r\n                case 1:\r\n                    if (!n) return [3 /*break*/, 3];\r\n                    return [4 /*yield*/, n];\r\n                case 2:\r\n                    _a.sent();\r\n                    n = this.next(n);\r\n                    return [3 /*break*/, 1];\r\n                case 3: return [2 /*return*/];\r\n            }\r\n        });\r\n    };\r\n    return Tree;\r\n}());\r\nfunction loadRecursive(keys, values, start, end) {\r\n    var size = end - start;\r\n    if (size > 0) {\r\n        var middle = start + Math.floor(size / 2);\r\n        var key = keys[middle];\r\n        var data = values[middle];\r\n        var node = new Node(key, data);\r\n        node.left = loadRecursive(keys, values, start, middle);\r\n        node.right = loadRecursive(keys, values, middle + 1, end);\r\n        return node;\r\n    }\r\n    return null;\r\n}\r\nfunction createList(keys, values) {\r\n    var head = new Node(null, null);\r\n    var p = head;\r\n    for (var i = 0; i < keys.length; i++) {\r\n        p = p.next = new Node(keys[i], values[i]);\r\n    }\r\n    p.next = null;\r\n    return head.next;\r\n}\r\nfunction toList(root) {\r\n    var current = root;\r\n    var Q = [];\r\n    var done = false;\r\n    var head = new Node(null, null);\r\n    var p = head;\r\n    while (!done) {\r\n        if (current) {\r\n            Q.push(current);\r\n            current = current.left;\r\n        }\r\n        else {\r\n            if (Q.length > 0) {\r\n                current = p = p.next = Q.pop();\r\n                current = current.right;\r\n            }\r\n            else\r\n                done = true;\r\n        }\r\n    }\r\n    p.next = null; // that'll work even if the tree was empty\r\n    return head.next;\r\n}\r\nfunction sortedListToBST(list, start, end) {\r\n    var size = end - start;\r\n    if (size > 0) {\r\n        var middle = start + Math.floor(size / 2);\r\n        var left = sortedListToBST(list, start, middle);\r\n        var root = list.head;\r\n        root.left = left;\r\n        list.head = list.head.next;\r\n        root.right = sortedListToBST(list, middle + 1, end);\r\n        return root;\r\n    }\r\n    return null;\r\n}\r\nfunction mergeLists(l1, l2, compare) {\r\n    var head = new Node(null, null); // dummy\r\n    var p = head;\r\n    var p1 = l1;\r\n    var p2 = l2;\r\n    while (p1 !== null && p2 !== null) {\r\n        if (compare(p1.key, p2.key) < 0) {\r\n            p.next = p1;\r\n            p1 = p1.next;\r\n        }\r\n        else {\r\n            p.next = p2;\r\n            p2 = p2.next;\r\n        }\r\n        p = p.next;\r\n    }\r\n    if (p1 !== null) {\r\n        p.next = p1;\r\n    }\r\n    else if (p2 !== null) {\r\n        p.next = p2;\r\n    }\r\n    return head.next;\r\n}\r\nfunction sort(keys, values, left, right, compare) {\r\n    if (left >= right)\r\n        return;\r\n    var pivot = keys[(left + right) >> 1];\r\n    var i = left - 1;\r\n    var j = right + 1;\r\n    while (true) {\r\n        do\r\n            i++;\r\n        while (compare(keys[i], pivot) < 0);\r\n        do\r\n            j--;\r\n        while (compare(keys[j], pivot) > 0);\r\n        if (i >= j)\r\n            break;\r\n        var tmp = keys[i];\r\n        keys[i] = keys[j];\r\n        keys[j] = tmp;\r\n        tmp = values[i];\r\n        values[i] = values[j];\r\n        values[j] = tmp;\r\n    }\r\n    sort(keys, values, left, j, compare);\r\n    sort(keys, values, j + 1, right, compare);\r\n}\n\nexport default Tree;\n//# sourceMappingURL=splay.esm.js.map\n","import SplayTree from 'splaytree';\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\n/**\n * A bounding box has the format:\n *\n *  { ll: { x: xmin, y: ymin }, ur: { x: xmax, y: ymax } }\n *\n */\nvar isInBbox = function isInBbox(bbox, point) {\n  return bbox.ll.x <= point.x && point.x <= bbox.ur.x && bbox.ll.y <= point.y && point.y <= bbox.ur.y;\n};\n/* Returns either null, or a bbox (aka an ordered pair of points)\n * If there is only one point of overlap, a bbox with identical points\n * will be returned */\n\nvar getBboxOverlap = function getBboxOverlap(b1, b2) {\n  // check if the bboxes overlap at all\n  if (b2.ur.x < b1.ll.x || b1.ur.x < b2.ll.x || b2.ur.y < b1.ll.y || b1.ur.y < b2.ll.y) return null; // find the middle two X values\n\n  var lowerX = b1.ll.x < b2.ll.x ? b2.ll.x : b1.ll.x;\n  var upperX = b1.ur.x < b2.ur.x ? b1.ur.x : b2.ur.x; // find the middle two Y values\n\n  var lowerY = b1.ll.y < b2.ll.y ? b2.ll.y : b1.ll.y;\n  var upperY = b1.ur.y < b2.ur.y ? b1.ur.y : b2.ur.y; // put those middle values together to get the overlap\n\n  return {\n    ll: {\n      x: lowerX,\n      y: lowerY\n    },\n    ur: {\n      x: upperX,\n      y: upperY\n    }\n  };\n};\n\n/* Javascript doesn't do integer math. Everything is\n * floating point with percision Number.EPSILON.\n *\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/EPSILON\n */\nvar epsilon = Number.EPSILON; // IE Polyfill\n\nif (epsilon === undefined) epsilon = Math.pow(2, -52);\nvar EPSILON_SQ = epsilon * epsilon;\n/* FLP comparator */\n\nvar cmp = function cmp(a, b) {\n  // check if they're both 0\n  if (-epsilon < a && a < epsilon) {\n    if (-epsilon < b && b < epsilon) {\n      return 0;\n    }\n  } // check if they're flp equal\n\n\n  var ab = a - b;\n\n  if (ab * ab < EPSILON_SQ * a * b) {\n    return 0;\n  } // normal comparison\n\n\n  return a < b ? -1 : 1;\n};\n\n/**\n * This class rounds incoming values sufficiently so that\n * floating points problems are, for the most part, avoided.\n *\n * Incoming points are have their x & y values tested against\n * all previously seen x & y values. If either is 'too close'\n * to a previously seen value, it's value is 'snapped' to the\n * previously seen value.\n *\n * All points should be rounded by this class before being\n * stored in any data structures in the rest of this algorithm.\n */\n\nvar PtRounder = /*#__PURE__*/function () {\n  function PtRounder() {\n    _classCallCheck(this, PtRounder);\n\n    this.reset();\n  }\n\n  _createClass(PtRounder, [{\n    key: \"reset\",\n    value: function reset() {\n      this.xRounder = new CoordRounder();\n      this.yRounder = new CoordRounder();\n    }\n  }, {\n    key: \"round\",\n    value: function round(x, y) {\n      return {\n        x: this.xRounder.round(x),\n        y: this.yRounder.round(y)\n      };\n    }\n  }]);\n\n  return PtRounder;\n}();\n\nvar CoordRounder = /*#__PURE__*/function () {\n  function CoordRounder() {\n    _classCallCheck(this, CoordRounder);\n\n    this.tree = new SplayTree(); // preseed with 0 so we don't end up with values < Number.EPSILON\n\n    this.round(0);\n  } // Note: this can rounds input values backwards or forwards.\n  //       You might ask, why not restrict this to just rounding\n  //       forwards? Wouldn't that allow left endpoints to always\n  //       remain left endpoints during splitting (never change to\n  //       right). No - it wouldn't, because we snap intersections\n  //       to endpoints (to establish independence from the segment\n  //       angle for t-intersections).\n\n\n  _createClass(CoordRounder, [{\n    key: \"round\",\n    value: function round(coord) {\n      var node = this.tree.add(coord);\n      var prevNode = this.tree.prev(node);\n\n      if (prevNode !== null && cmp(node.key, prevNode.key) === 0) {\n        this.tree.remove(coord);\n        return prevNode.key;\n      }\n\n      var nextNode = this.tree.next(node);\n\n      if (nextNode !== null && cmp(node.key, nextNode.key) === 0) {\n        this.tree.remove(coord);\n        return nextNode.key;\n      }\n\n      return coord;\n    }\n  }]);\n\n  return CoordRounder;\n}(); // singleton available by import\n\n\nvar rounder = new PtRounder();\n\n/* Cross Product of two vectors with first point at origin */\n\nvar crossProduct = function crossProduct(a, b) {\n  return a.x * b.y - a.y * b.x;\n};\n/* Dot Product of two vectors with first point at origin */\n\nvar dotProduct = function dotProduct(a, b) {\n  return a.x * b.x + a.y * b.y;\n};\n/* Comparator for two vectors with same starting point */\n\nvar compareVectorAngles = function compareVectorAngles(basePt, endPt1, endPt2) {\n  var v1 = {\n    x: endPt1.x - basePt.x,\n    y: endPt1.y - basePt.y\n  };\n  var v2 = {\n    x: endPt2.x - basePt.x,\n    y: endPt2.y - basePt.y\n  };\n  var kross = crossProduct(v1, v2);\n  return cmp(kross, 0);\n};\nvar length = function length(v) {\n  return Math.sqrt(dotProduct(v, v));\n};\n/* Get the sine of the angle from pShared -> pAngle to pShaed -> pBase */\n\nvar sineOfAngle = function sineOfAngle(pShared, pBase, pAngle) {\n  var vBase = {\n    x: pBase.x - pShared.x,\n    y: pBase.y - pShared.y\n  };\n  var vAngle = {\n    x: pAngle.x - pShared.x,\n    y: pAngle.y - pShared.y\n  };\n  return crossProduct(vAngle, vBase) / length(vAngle) / length(vBase);\n};\n/* Get the cosine of the angle from pShared -> pAngle to pShaed -> pBase */\n\nvar cosineOfAngle = function cosineOfAngle(pShared, pBase, pAngle) {\n  var vBase = {\n    x: pBase.x - pShared.x,\n    y: pBase.y - pShared.y\n  };\n  var vAngle = {\n    x: pAngle.x - pShared.x,\n    y: pAngle.y - pShared.y\n  };\n  return dotProduct(vAngle, vBase) / length(vAngle) / length(vBase);\n};\n/* Get the x coordinate where the given line (defined by a point and vector)\n * crosses the horizontal line with the given y coordiante.\n * In the case of parrallel lines (including overlapping ones) returns null. */\n\nvar horizontalIntersection = function horizontalIntersection(pt, v, y) {\n  if (v.y === 0) return null;\n  return {\n    x: pt.x + v.x / v.y * (y - pt.y),\n    y: y\n  };\n};\n/* Get the y coordinate where the given line (defined by a point and vector)\n * crosses the vertical line with the given x coordiante.\n * In the case of parrallel lines (including overlapping ones) returns null. */\n\nvar verticalIntersection = function verticalIntersection(pt, v, x) {\n  if (v.x === 0) return null;\n  return {\n    x: x,\n    y: pt.y + v.y / v.x * (x - pt.x)\n  };\n};\n/* Get the intersection of two lines, each defined by a base point and a vector.\n * In the case of parrallel lines (including overlapping ones) returns null. */\n\nvar intersection = function intersection(pt1, v1, pt2, v2) {\n  // take some shortcuts for vertical and horizontal lines\n  // this also ensures we don't calculate an intersection and then discover\n  // it's actually outside the bounding box of the line\n  if (v1.x === 0) return verticalIntersection(pt2, v2, pt1.x);\n  if (v2.x === 0) return verticalIntersection(pt1, v1, pt2.x);\n  if (v1.y === 0) return horizontalIntersection(pt2, v2, pt1.y);\n  if (v2.y === 0) return horizontalIntersection(pt1, v1, pt2.y); // General case for non-overlapping segments.\n  // This algorithm is based on Schneider and Eberly.\n  // http://www.cimec.org.ar/~ncalvo/Schneider_Eberly.pdf - pg 244\n\n  var kross = crossProduct(v1, v2);\n  if (kross == 0) return null;\n  var ve = {\n    x: pt2.x - pt1.x,\n    y: pt2.y - pt1.y\n  };\n  var d1 = crossProduct(ve, v1) / kross;\n  var d2 = crossProduct(ve, v2) / kross; // take the average of the two calculations to minimize rounding error\n\n  var x1 = pt1.x + d2 * v1.x,\n      x2 = pt2.x + d1 * v2.x;\n  var y1 = pt1.y + d2 * v1.y,\n      y2 = pt2.y + d1 * v2.y;\n  var x = (x1 + x2) / 2;\n  var y = (y1 + y2) / 2;\n  return {\n    x: x,\n    y: y\n  };\n};\n\nvar SweepEvent = /*#__PURE__*/function () {\n  _createClass(SweepEvent, null, [{\n    key: \"compare\",\n    // for ordering sweep events in the sweep event queue\n    value: function compare(a, b) {\n      // favor event with a point that the sweep line hits first\n      var ptCmp = SweepEvent.comparePoints(a.point, b.point);\n      if (ptCmp !== 0) return ptCmp; // the points are the same, so link them if needed\n\n      if (a.point !== b.point) a.link(b); // favor right events over left\n\n      if (a.isLeft !== b.isLeft) return a.isLeft ? 1 : -1; // we have two matching left or right endpoints\n      // ordering of this case is the same as for their segments\n\n      return Segment.compare(a.segment, b.segment);\n    } // for ordering points in sweep line order\n\n  }, {\n    key: \"comparePoints\",\n    value: function comparePoints(aPt, bPt) {\n      if (aPt.x < bPt.x) return -1;\n      if (aPt.x > bPt.x) return 1;\n      if (aPt.y < bPt.y) return -1;\n      if (aPt.y > bPt.y) return 1;\n      return 0;\n    } // Warning: 'point' input will be modified and re-used (for performance)\n\n  }]);\n\n  function SweepEvent(point, isLeft) {\n    _classCallCheck(this, SweepEvent);\n\n    if (point.events === undefined) point.events = [this];else point.events.push(this);\n    this.point = point;\n    this.isLeft = isLeft; // this.segment, this.otherSE set by factory\n  }\n\n  _createClass(SweepEvent, [{\n    key: \"link\",\n    value: function link(other) {\n      if (other.point === this.point) {\n        throw new Error('Tried to link already linked events');\n      }\n\n      var otherEvents = other.point.events;\n\n      for (var i = 0, iMax = otherEvents.length; i < iMax; i++) {\n        var evt = otherEvents[i];\n        this.point.events.push(evt);\n        evt.point = this.point;\n      }\n\n      this.checkForConsuming();\n    }\n    /* Do a pass over our linked events and check to see if any pair\n     * of segments match, and should be consumed. */\n\n  }, {\n    key: \"checkForConsuming\",\n    value: function checkForConsuming() {\n      // FIXME: The loops in this method run O(n^2) => no good.\n      //        Maintain little ordered sweep event trees?\n      //        Can we maintaining an ordering that avoids the need\n      //        for the re-sorting with getLeftmostComparator in geom-out?\n      // Compare each pair of events to see if other events also match\n      var numEvents = this.point.events.length;\n\n      for (var i = 0; i < numEvents; i++) {\n        var evt1 = this.point.events[i];\n        if (evt1.segment.consumedBy !== undefined) continue;\n\n        for (var j = i + 1; j < numEvents; j++) {\n          var evt2 = this.point.events[j];\n          if (evt2.consumedBy !== undefined) continue;\n          if (evt1.otherSE.point.events !== evt2.otherSE.point.events) continue;\n          evt1.segment.consume(evt2.segment);\n        }\n      }\n    }\n  }, {\n    key: \"getAvailableLinkedEvents\",\n    value: function getAvailableLinkedEvents() {\n      // point.events is always of length 2 or greater\n      var events = [];\n\n      for (var i = 0, iMax = this.point.events.length; i < iMax; i++) {\n        var evt = this.point.events[i];\n\n        if (evt !== this && !evt.segment.ringOut && evt.segment.isInResult()) {\n          events.push(evt);\n        }\n      }\n\n      return events;\n    }\n    /**\n     * Returns a comparator function for sorting linked events that will\n     * favor the event that will give us the smallest left-side angle.\n     * All ring construction starts as low as possible heading to the right,\n     * so by always turning left as sharp as possible we'll get polygons\n     * without uncessary loops & holes.\n     *\n     * The comparator function has a compute cache such that it avoids\n     * re-computing already-computed values.\n     */\n\n  }, {\n    key: \"getLeftmostComparator\",\n    value: function getLeftmostComparator(baseEvent) {\n      var _this = this;\n\n      var cache = new Map();\n\n      var fillCache = function fillCache(linkedEvent) {\n        var nextEvent = linkedEvent.otherSE;\n        cache.set(linkedEvent, {\n          sine: sineOfAngle(_this.point, baseEvent.point, nextEvent.point),\n          cosine: cosineOfAngle(_this.point, baseEvent.point, nextEvent.point)\n        });\n      };\n\n      return function (a, b) {\n        if (!cache.has(a)) fillCache(a);\n        if (!cache.has(b)) fillCache(b);\n\n        var _cache$get = cache.get(a),\n            asine = _cache$get.sine,\n            acosine = _cache$get.cosine;\n\n        var _cache$get2 = cache.get(b),\n            bsine = _cache$get2.sine,\n            bcosine = _cache$get2.cosine; // both on or above x-axis\n\n\n        if (asine >= 0 && bsine >= 0) {\n          if (acosine < bcosine) return 1;\n          if (acosine > bcosine) return -1;\n          return 0;\n        } // both below x-axis\n\n\n        if (asine < 0 && bsine < 0) {\n          if (acosine < bcosine) return -1;\n          if (acosine > bcosine) return 1;\n          return 0;\n        } // one above x-axis, one below\n\n\n        if (bsine < asine) return -1;\n        if (bsine > asine) return 1;\n        return 0;\n      };\n    }\n  }]);\n\n  return SweepEvent;\n}();\n\n// segments and sweep events when all else is identical\n\nvar segmentId = 0;\n\nvar Segment = /*#__PURE__*/function () {\n  _createClass(Segment, null, [{\n    key: \"compare\",\n\n    /* This compare() function is for ordering segments in the sweep\n     * line tree, and does so according to the following criteria:\n     *\n     * Consider the vertical line that lies an infinestimal step to the\n     * right of the right-more of the two left endpoints of the input\n     * segments. Imagine slowly moving a point up from negative infinity\n     * in the increasing y direction. Which of the two segments will that\n     * point intersect first? That segment comes 'before' the other one.\n     *\n     * If neither segment would be intersected by such a line, (if one\n     * or more of the segments are vertical) then the line to be considered\n     * is directly on the right-more of the two left inputs.\n     */\n    value: function compare(a, b) {\n      var alx = a.leftSE.point.x;\n      var blx = b.leftSE.point.x;\n      var arx = a.rightSE.point.x;\n      var brx = b.rightSE.point.x; // check if they're even in the same vertical plane\n\n      if (brx < alx) return 1;\n      if (arx < blx) return -1;\n      var aly = a.leftSE.point.y;\n      var bly = b.leftSE.point.y;\n      var ary = a.rightSE.point.y;\n      var bry = b.rightSE.point.y; // is left endpoint of segment B the right-more?\n\n      if (alx < blx) {\n        // are the two segments in the same horizontal plane?\n        if (bly < aly && bly < ary) return 1;\n        if (bly > aly && bly > ary) return -1; // is the B left endpoint colinear to segment A?\n\n        var aCmpBLeft = a.comparePoint(b.leftSE.point);\n        if (aCmpBLeft < 0) return 1;\n        if (aCmpBLeft > 0) return -1; // is the A right endpoint colinear to segment B ?\n\n        var bCmpARight = b.comparePoint(a.rightSE.point);\n        if (bCmpARight !== 0) return bCmpARight; // colinear segments, consider the one with left-more\n        // left endpoint to be first (arbitrary?)\n\n        return -1;\n      } // is left endpoint of segment A the right-more?\n\n\n      if (alx > blx) {\n        if (aly < bly && aly < bry) return -1;\n        if (aly > bly && aly > bry) return 1; // is the A left endpoint colinear to segment B?\n\n        var bCmpALeft = b.comparePoint(a.leftSE.point);\n        if (bCmpALeft !== 0) return bCmpALeft; // is the B right endpoint colinear to segment A?\n\n        var aCmpBRight = a.comparePoint(b.rightSE.point);\n        if (aCmpBRight < 0) return 1;\n        if (aCmpBRight > 0) return -1; // colinear segments, consider the one with left-more\n        // left endpoint to be first (arbitrary?)\n\n        return 1;\n      } // if we get here, the two left endpoints are in the same\n      // vertical plane, ie alx === blx\n      // consider the lower left-endpoint to come first\n\n\n      if (aly < bly) return -1;\n      if (aly > bly) return 1; // left endpoints are identical\n      // check for colinearity by using the left-more right endpoint\n      // is the A right endpoint more left-more?\n\n      if (arx < brx) {\n        var _bCmpARight = b.comparePoint(a.rightSE.point);\n\n        if (_bCmpARight !== 0) return _bCmpARight;\n      } // is the B right endpoint more left-more?\n\n\n      if (arx > brx) {\n        var _aCmpBRight = a.comparePoint(b.rightSE.point);\n\n        if (_aCmpBRight < 0) return 1;\n        if (_aCmpBRight > 0) return -1;\n      }\n\n      if (arx !== brx) {\n        // are these two [almost] vertical segments with opposite orientation?\n        // if so, the one with the lower right endpoint comes first\n        var ay = ary - aly;\n        var ax = arx - alx;\n        var by = bry - bly;\n        var bx = brx - blx;\n        if (ay > ax && by < bx) return 1;\n        if (ay < ax && by > bx) return -1;\n      } // we have colinear segments with matching orientation\n      // consider the one with more left-more right endpoint to be first\n\n\n      if (arx > brx) return 1;\n      if (arx < brx) return -1; // if we get here, two two right endpoints are in the same\n      // vertical plane, ie arx === brx\n      // consider the lower right-endpoint to come first\n\n      if (ary < bry) return -1;\n      if (ary > bry) return 1; // right endpoints identical as well, so the segments are idential\n      // fall back on creation order as consistent tie-breaker\n\n      if (a.id < b.id) return -1;\n      if (a.id > b.id) return 1; // identical segment, ie a === b\n\n      return 0;\n    }\n    /* Warning: a reference to ringWindings input will be stored,\n     *  and possibly will be later modified */\n\n  }]);\n\n  function Segment(leftSE, rightSE, rings, windings) {\n    _classCallCheck(this, Segment);\n\n    this.id = ++segmentId;\n    this.leftSE = leftSE;\n    leftSE.segment = this;\n    leftSE.otherSE = rightSE;\n    this.rightSE = rightSE;\n    rightSE.segment = this;\n    rightSE.otherSE = leftSE;\n    this.rings = rings;\n    this.windings = windings; // left unset for performance, set later in algorithm\n    // this.ringOut, this.consumedBy, this.prev\n  }\n\n  _createClass(Segment, [{\n    key: \"replaceRightSE\",\n\n    /* When a segment is split, the rightSE is replaced with a new sweep event */\n    value: function replaceRightSE(newRightSE) {\n      this.rightSE = newRightSE;\n      this.rightSE.segment = this;\n      this.rightSE.otherSE = this.leftSE;\n      this.leftSE.otherSE = this.rightSE;\n    }\n  }, {\n    key: \"bbox\",\n    value: function bbox() {\n      var y1 = this.leftSE.point.y;\n      var y2 = this.rightSE.point.y;\n      return {\n        ll: {\n          x: this.leftSE.point.x,\n          y: y1 < y2 ? y1 : y2\n        },\n        ur: {\n          x: this.rightSE.point.x,\n          y: y1 > y2 ? y1 : y2\n        }\n      };\n    }\n    /* A vector from the left point to the right */\n\n  }, {\n    key: \"vector\",\n    value: function vector() {\n      return {\n        x: this.rightSE.point.x - this.leftSE.point.x,\n        y: this.rightSE.point.y - this.leftSE.point.y\n      };\n    }\n  }, {\n    key: \"isAnEndpoint\",\n    value: function isAnEndpoint(pt) {\n      return pt.x === this.leftSE.point.x && pt.y === this.leftSE.point.y || pt.x === this.rightSE.point.x && pt.y === this.rightSE.point.y;\n    }\n    /* Compare this segment with a point.\n     *\n     * A point P is considered to be colinear to a segment if there\n     * exists a distance D such that if we travel along the segment\n     * from one * endpoint towards the other a distance D, we find\n     * ourselves at point P.\n     *\n     * Return value indicates:\n     *\n     *   1: point lies above the segment (to the left of vertical)\n     *   0: point is colinear to segment\n     *  -1: point lies below the segment (to the right of vertical)\n     */\n\n  }, {\n    key: \"comparePoint\",\n    value: function comparePoint(point) {\n      if (this.isAnEndpoint(point)) return 0;\n      var lPt = this.leftSE.point;\n      var rPt = this.rightSE.point;\n      var v = this.vector(); // Exactly vertical segments.\n\n      if (lPt.x === rPt.x) {\n        if (point.x === lPt.x) return 0;\n        return point.x < lPt.x ? 1 : -1;\n      } // Nearly vertical segments with an intersection.\n      // Check to see where a point on the line with matching Y coordinate is.\n\n\n      var yDist = (point.y - lPt.y) / v.y;\n      var xFromYDist = lPt.x + yDist * v.x;\n      if (point.x === xFromYDist) return 0; // General case.\n      // Check to see where a point on the line with matching X coordinate is.\n\n      var xDist = (point.x - lPt.x) / v.x;\n      var yFromXDist = lPt.y + xDist * v.y;\n      if (point.y === yFromXDist) return 0;\n      return point.y < yFromXDist ? -1 : 1;\n    }\n    /**\n     * Given another segment, returns the first non-trivial intersection\n     * between the two segments (in terms of sweep line ordering), if it exists.\n     *\n     * A 'non-trivial' intersection is one that will cause one or both of the\n     * segments to be split(). As such, 'trivial' vs. 'non-trivial' intersection:\n     *\n     *   * endpoint of segA with endpoint of segB --> trivial\n     *   * endpoint of segA with point along segB --> non-trivial\n     *   * endpoint of segB with point along segA --> non-trivial\n     *   * point along segA with point along segB --> non-trivial\n     *\n     * If no non-trivial intersection exists, return null\n     * Else, return null.\n     */\n\n  }, {\n    key: \"getIntersection\",\n    value: function getIntersection(other) {\n      // If bboxes don't overlap, there can't be any intersections\n      var tBbox = this.bbox();\n      var oBbox = other.bbox();\n      var bboxOverlap = getBboxOverlap(tBbox, oBbox);\n      if (bboxOverlap === null) return null; // We first check to see if the endpoints can be considered intersections.\n      // This will 'snap' intersections to endpoints if possible, and will\n      // handle cases of colinearity.\n\n      var tlp = this.leftSE.point;\n      var trp = this.rightSE.point;\n      var olp = other.leftSE.point;\n      var orp = other.rightSE.point; // does each endpoint touch the other segment?\n      // note that we restrict the 'touching' definition to only allow segments\n      // to touch endpoints that lie forward from where we are in the sweep line pass\n\n      var touchesOtherLSE = isInBbox(tBbox, olp) && this.comparePoint(olp) === 0;\n      var touchesThisLSE = isInBbox(oBbox, tlp) && other.comparePoint(tlp) === 0;\n      var touchesOtherRSE = isInBbox(tBbox, orp) && this.comparePoint(orp) === 0;\n      var touchesThisRSE = isInBbox(oBbox, trp) && other.comparePoint(trp) === 0; // do left endpoints match?\n\n      if (touchesThisLSE && touchesOtherLSE) {\n        // these two cases are for colinear segments with matching left\n        // endpoints, and one segment being longer than the other\n        if (touchesThisRSE && !touchesOtherRSE) return trp;\n        if (!touchesThisRSE && touchesOtherRSE) return orp; // either the two segments match exactly (two trival intersections)\n        // or just on their left endpoint (one trivial intersection\n\n        return null;\n      } // does this left endpoint matches (other doesn't)\n\n\n      if (touchesThisLSE) {\n        // check for segments that just intersect on opposing endpoints\n        if (touchesOtherRSE) {\n          if (tlp.x === orp.x && tlp.y === orp.y) return null;\n        } // t-intersection on left endpoint\n\n\n        return tlp;\n      } // does other left endpoint matches (this doesn't)\n\n\n      if (touchesOtherLSE) {\n        // check for segments that just intersect on opposing endpoints\n        if (touchesThisRSE) {\n          if (trp.x === olp.x && trp.y === olp.y) return null;\n        } // t-intersection on left endpoint\n\n\n        return olp;\n      } // trivial intersection on right endpoints\n\n\n      if (touchesThisRSE && touchesOtherRSE) return null; // t-intersections on just one right endpoint\n\n      if (touchesThisRSE) return trp;\n      if (touchesOtherRSE) return orp; // None of our endpoints intersect. Look for a general intersection between\n      // infinite lines laid over the segments\n\n      var pt = intersection(tlp, this.vector(), olp, other.vector()); // are the segments parrallel? Note that if they were colinear with overlap,\n      // they would have an endpoint intersection and that case was already handled above\n\n      if (pt === null) return null; // is the intersection found between the lines not on the segments?\n\n      if (!isInBbox(bboxOverlap, pt)) return null; // round the the computed point if needed\n\n      return rounder.round(pt.x, pt.y);\n    }\n    /**\n     * Split the given segment into multiple segments on the given points.\n     *  * Each existing segment will retain its leftSE and a new rightSE will be\n     *    generated for it.\n     *  * A new segment will be generated which will adopt the original segment's\n     *    rightSE, and a new leftSE will be generated for it.\n     *  * If there are more than two points given to split on, new segments\n     *    in the middle will be generated with new leftSE and rightSE's.\n     *  * An array of the newly generated SweepEvents will be returned.\n     *\n     * Warning: input array of points is modified\n     */\n\n  }, {\n    key: \"split\",\n    value: function split(point) {\n      var newEvents = [];\n      var alreadyLinked = point.events !== undefined;\n      var newLeftSE = new SweepEvent(point, true);\n      var newRightSE = new SweepEvent(point, false);\n      var oldRightSE = this.rightSE;\n      this.replaceRightSE(newRightSE);\n      newEvents.push(newRightSE);\n      newEvents.push(newLeftSE);\n      var newSeg = new Segment(newLeftSE, oldRightSE, this.rings.slice(), this.windings.slice()); // when splitting a nearly vertical downward-facing segment,\n      // sometimes one of the resulting new segments is vertical, in which\n      // case its left and right events may need to be swapped\n\n      if (SweepEvent.comparePoints(newSeg.leftSE.point, newSeg.rightSE.point) > 0) {\n        newSeg.swapEvents();\n      }\n\n      if (SweepEvent.comparePoints(this.leftSE.point, this.rightSE.point) > 0) {\n        this.swapEvents();\n      } // in the point we just used to create new sweep events with was already\n      // linked to other events, we need to check if either of the affected\n      // segments should be consumed\n\n\n      if (alreadyLinked) {\n        newLeftSE.checkForConsuming();\n        newRightSE.checkForConsuming();\n      }\n\n      return newEvents;\n    }\n    /* Swap which event is left and right */\n\n  }, {\n    key: \"swapEvents\",\n    value: function swapEvents() {\n      var tmpEvt = this.rightSE;\n      this.rightSE = this.leftSE;\n      this.leftSE = tmpEvt;\n      this.leftSE.isLeft = true;\n      this.rightSE.isLeft = false;\n\n      for (var i = 0, iMax = this.windings.length; i < iMax; i++) {\n        this.windings[i] *= -1;\n      }\n    }\n    /* Consume another segment. We take their rings under our wing\n     * and mark them as consumed. Use for perfectly overlapping segments */\n\n  }, {\n    key: \"consume\",\n    value: function consume(other) {\n      var consumer = this;\n      var consumee = other;\n\n      while (consumer.consumedBy) {\n        consumer = consumer.consumedBy;\n      }\n\n      while (consumee.consumedBy) {\n        consumee = consumee.consumedBy;\n      }\n\n      var cmp = Segment.compare(consumer, consumee);\n      if (cmp === 0) return; // already consumed\n      // the winner of the consumption is the earlier segment\n      // according to sweep line ordering\n\n      if (cmp > 0) {\n        var tmp = consumer;\n        consumer = consumee;\n        consumee = tmp;\n      } // make sure a segment doesn't consume it's prev\n\n\n      if (consumer.prev === consumee) {\n        var _tmp = consumer;\n        consumer = consumee;\n        consumee = _tmp;\n      }\n\n      for (var i = 0, iMax = consumee.rings.length; i < iMax; i++) {\n        var ring = consumee.rings[i];\n        var winding = consumee.windings[i];\n        var index = consumer.rings.indexOf(ring);\n\n        if (index === -1) {\n          consumer.rings.push(ring);\n          consumer.windings.push(winding);\n        } else consumer.windings[index] += winding;\n      }\n\n      consumee.rings = null;\n      consumee.windings = null;\n      consumee.consumedBy = consumer; // mark sweep events consumed as to maintain ordering in sweep event queue\n\n      consumee.leftSE.consumedBy = consumer.leftSE;\n      consumee.rightSE.consumedBy = consumer.rightSE;\n    }\n    /* The first segment previous segment chain that is in the result */\n\n  }, {\n    key: \"prevInResult\",\n    value: function prevInResult() {\n      if (this._prevInResult !== undefined) return this._prevInResult;\n      if (!this.prev) this._prevInResult = null;else if (this.prev.isInResult()) this._prevInResult = this.prev;else this._prevInResult = this.prev.prevInResult();\n      return this._prevInResult;\n    }\n  }, {\n    key: \"beforeState\",\n    value: function beforeState() {\n      if (this._beforeState !== undefined) return this._beforeState;\n      if (!this.prev) this._beforeState = {\n        rings: [],\n        windings: [],\n        multiPolys: []\n      };else {\n        var seg = this.prev.consumedBy || this.prev;\n        this._beforeState = seg.afterState();\n      }\n      return this._beforeState;\n    }\n  }, {\n    key: \"afterState\",\n    value: function afterState() {\n      if (this._afterState !== undefined) return this._afterState;\n      var beforeState = this.beforeState();\n      this._afterState = {\n        rings: beforeState.rings.slice(0),\n        windings: beforeState.windings.slice(0),\n        multiPolys: []\n      };\n      var ringsAfter = this._afterState.rings;\n      var windingsAfter = this._afterState.windings;\n      var mpsAfter = this._afterState.multiPolys; // calculate ringsAfter, windingsAfter\n\n      for (var i = 0, iMax = this.rings.length; i < iMax; i++) {\n        var ring = this.rings[i];\n        var winding = this.windings[i];\n        var index = ringsAfter.indexOf(ring);\n\n        if (index === -1) {\n          ringsAfter.push(ring);\n          windingsAfter.push(winding);\n        } else windingsAfter[index] += winding;\n      } // calcualte polysAfter\n\n\n      var polysAfter = [];\n      var polysExclude = [];\n\n      for (var _i = 0, _iMax = ringsAfter.length; _i < _iMax; _i++) {\n        if (windingsAfter[_i] === 0) continue; // non-zero rule\n\n        var _ring = ringsAfter[_i];\n        var poly = _ring.poly;\n        if (polysExclude.indexOf(poly) !== -1) continue;\n        if (_ring.isExterior) polysAfter.push(poly);else {\n          if (polysExclude.indexOf(poly) === -1) polysExclude.push(poly);\n\n          var _index = polysAfter.indexOf(_ring.poly);\n\n          if (_index !== -1) polysAfter.splice(_index, 1);\n        }\n      } // calculate multiPolysAfter\n\n\n      for (var _i2 = 0, _iMax2 = polysAfter.length; _i2 < _iMax2; _i2++) {\n        var mp = polysAfter[_i2].multiPoly;\n        if (mpsAfter.indexOf(mp) === -1) mpsAfter.push(mp);\n      }\n\n      return this._afterState;\n    }\n    /* Is this segment part of the final result? */\n\n  }, {\n    key: \"isInResult\",\n    value: function isInResult() {\n      // if we've been consumed, we're not in the result\n      if (this.consumedBy) return false;\n      if (this._isInResult !== undefined) return this._isInResult;\n      var mpsBefore = this.beforeState().multiPolys;\n      var mpsAfter = this.afterState().multiPolys;\n\n      switch (operation.type) {\n        case 'union':\n          {\n            // UNION - included iff:\n            //  * On one side of us there is 0 poly interiors AND\n            //  * On the other side there is 1 or more.\n            var noBefores = mpsBefore.length === 0;\n            var noAfters = mpsAfter.length === 0;\n            this._isInResult = noBefores !== noAfters;\n            break;\n          }\n\n        case 'intersection':\n          {\n            // INTERSECTION - included iff:\n            //  * on one side of us all multipolys are rep. with poly interiors AND\n            //  * on the other side of us, not all multipolys are repsented\n            //    with poly interiors\n            var least;\n            var most;\n\n            if (mpsBefore.length < mpsAfter.length) {\n              least = mpsBefore.length;\n              most = mpsAfter.length;\n            } else {\n              least = mpsAfter.length;\n              most = mpsBefore.length;\n            }\n\n            this._isInResult = most === operation.numMultiPolys && least < most;\n            break;\n          }\n\n        case 'xor':\n          {\n            // XOR - included iff:\n            //  * the difference between the number of multipolys represented\n            //    with poly interiors on our two sides is an odd number\n            var diff = Math.abs(mpsBefore.length - mpsAfter.length);\n            this._isInResult = diff % 2 === 1;\n            break;\n          }\n\n        case 'difference':\n          {\n            // DIFFERENCE included iff:\n            //  * on exactly one side, we have just the subject\n            var isJustSubject = function isJustSubject(mps) {\n              return mps.length === 1 && mps[0].isSubject;\n            };\n\n            this._isInResult = isJustSubject(mpsBefore) !== isJustSubject(mpsAfter);\n            break;\n          }\n\n        default:\n          throw new Error(\"Unrecognized operation type found \".concat(operation.type));\n      }\n\n      return this._isInResult;\n    }\n  }], [{\n    key: \"fromRing\",\n    value: function fromRing(pt1, pt2, ring) {\n      var leftPt, rightPt, winding; // ordering the two points according to sweep line ordering\n\n      var cmpPts = SweepEvent.comparePoints(pt1, pt2);\n\n      if (cmpPts < 0) {\n        leftPt = pt1;\n        rightPt = pt2;\n        winding = 1;\n      } else if (cmpPts > 0) {\n        leftPt = pt2;\n        rightPt = pt1;\n        winding = -1;\n      } else throw new Error(\"Tried to create degenerate segment at [\".concat(pt1.x, \", \").concat(pt1.y, \"]\"));\n\n      var leftSE = new SweepEvent(leftPt, true);\n      var rightSE = new SweepEvent(rightPt, false);\n      return new Segment(leftSE, rightSE, [ring], [winding]);\n    }\n  }]);\n\n  return Segment;\n}();\n\nvar RingIn = /*#__PURE__*/function () {\n  function RingIn(geomRing, poly, isExterior) {\n    _classCallCheck(this, RingIn);\n\n    if (!Array.isArray(geomRing) || geomRing.length === 0) {\n      throw new Error('Input geometry is not a valid Polygon or MultiPolygon');\n    }\n\n    this.poly = poly;\n    this.isExterior = isExterior;\n    this.segments = [];\n\n    if (typeof geomRing[0][0] !== 'number' || typeof geomRing[0][1] !== 'number') {\n      throw new Error('Input geometry is not a valid Polygon or MultiPolygon');\n    }\n\n    var firstPoint = rounder.round(geomRing[0][0], geomRing[0][1]);\n    this.bbox = {\n      ll: {\n        x: firstPoint.x,\n        y: firstPoint.y\n      },\n      ur: {\n        x: firstPoint.x,\n        y: firstPoint.y\n      }\n    };\n    var prevPoint = firstPoint;\n\n    for (var i = 1, iMax = geomRing.length; i < iMax; i++) {\n      if (typeof geomRing[i][0] !== 'number' || typeof geomRing[i][1] !== 'number') {\n        throw new Error('Input geometry is not a valid Polygon or MultiPolygon');\n      }\n\n      var point = rounder.round(geomRing[i][0], geomRing[i][1]); // skip repeated points\n\n      if (point.x === prevPoint.x && point.y === prevPoint.y) continue;\n      this.segments.push(Segment.fromRing(prevPoint, point, this));\n      if (point.x < this.bbox.ll.x) this.bbox.ll.x = point.x;\n      if (point.y < this.bbox.ll.y) this.bbox.ll.y = point.y;\n      if (point.x > this.bbox.ur.x) this.bbox.ur.x = point.x;\n      if (point.y > this.bbox.ur.y) this.bbox.ur.y = point.y;\n      prevPoint = point;\n    } // add segment from last to first if last is not the same as first\n\n\n    if (firstPoint.x !== prevPoint.x || firstPoint.y !== prevPoint.y) {\n      this.segments.push(Segment.fromRing(prevPoint, firstPoint, this));\n    }\n  }\n\n  _createClass(RingIn, [{\n    key: \"getSweepEvents\",\n    value: function getSweepEvents() {\n      var sweepEvents = [];\n\n      for (var i = 0, iMax = this.segments.length; i < iMax; i++) {\n        var segment = this.segments[i];\n        sweepEvents.push(segment.leftSE);\n        sweepEvents.push(segment.rightSE);\n      }\n\n      return sweepEvents;\n    }\n  }]);\n\n  return RingIn;\n}();\nvar PolyIn = /*#__PURE__*/function () {\n  function PolyIn(geomPoly, multiPoly) {\n    _classCallCheck(this, PolyIn);\n\n    if (!Array.isArray(geomPoly)) {\n      throw new Error('Input geometry is not a valid Polygon or MultiPolygon');\n    }\n\n    this.exteriorRing = new RingIn(geomPoly[0], this, true); // copy by value\n\n    this.bbox = {\n      ll: {\n        x: this.exteriorRing.bbox.ll.x,\n        y: this.exteriorRing.bbox.ll.y\n      },\n      ur: {\n        x: this.exteriorRing.bbox.ur.x,\n        y: this.exteriorRing.bbox.ur.y\n      }\n    };\n    this.interiorRings = [];\n\n    for (var i = 1, iMax = geomPoly.length; i < iMax; i++) {\n      var ring = new RingIn(geomPoly[i], this, false);\n      if (ring.bbox.ll.x < this.bbox.ll.x) this.bbox.ll.x = ring.bbox.ll.x;\n      if (ring.bbox.ll.y < this.bbox.ll.y) this.bbox.ll.y = ring.bbox.ll.y;\n      if (ring.bbox.ur.x > this.bbox.ur.x) this.bbox.ur.x = ring.bbox.ur.x;\n      if (ring.bbox.ur.y > this.bbox.ur.y) this.bbox.ur.y = ring.bbox.ur.y;\n      this.interiorRings.push(ring);\n    }\n\n    this.multiPoly = multiPoly;\n  }\n\n  _createClass(PolyIn, [{\n    key: \"getSweepEvents\",\n    value: function getSweepEvents() {\n      var sweepEvents = this.exteriorRing.getSweepEvents();\n\n      for (var i = 0, iMax = this.interiorRings.length; i < iMax; i++) {\n        var ringSweepEvents = this.interiorRings[i].getSweepEvents();\n\n        for (var j = 0, jMax = ringSweepEvents.length; j < jMax; j++) {\n          sweepEvents.push(ringSweepEvents[j]);\n        }\n      }\n\n      return sweepEvents;\n    }\n  }]);\n\n  return PolyIn;\n}();\nvar MultiPolyIn = /*#__PURE__*/function () {\n  function MultiPolyIn(geom, isSubject) {\n    _classCallCheck(this, MultiPolyIn);\n\n    if (!Array.isArray(geom)) {\n      throw new Error('Input geometry is not a valid Polygon or MultiPolygon');\n    }\n\n    try {\n      // if the input looks like a polygon, convert it to a multipolygon\n      if (typeof geom[0][0][0] === 'number') geom = [geom];\n    } catch (ex) {// The input is either malformed or has empty arrays.\n      // In either case, it will be handled later on.\n    }\n\n    this.polys = [];\n    this.bbox = {\n      ll: {\n        x: Number.POSITIVE_INFINITY,\n        y: Number.POSITIVE_INFINITY\n      },\n      ur: {\n        x: Number.NEGATIVE_INFINITY,\n        y: Number.NEGATIVE_INFINITY\n      }\n    };\n\n    for (var i = 0, iMax = geom.length; i < iMax; i++) {\n      var poly = new PolyIn(geom[i], this);\n      if (poly.bbox.ll.x < this.bbox.ll.x) this.bbox.ll.x = poly.bbox.ll.x;\n      if (poly.bbox.ll.y < this.bbox.ll.y) this.bbox.ll.y = poly.bbox.ll.y;\n      if (poly.bbox.ur.x > this.bbox.ur.x) this.bbox.ur.x = poly.bbox.ur.x;\n      if (poly.bbox.ur.y > this.bbox.ur.y) this.bbox.ur.y = poly.bbox.ur.y;\n      this.polys.push(poly);\n    }\n\n    this.isSubject = isSubject;\n  }\n\n  _createClass(MultiPolyIn, [{\n    key: \"getSweepEvents\",\n    value: function getSweepEvents() {\n      var sweepEvents = [];\n\n      for (var i = 0, iMax = this.polys.length; i < iMax; i++) {\n        var polySweepEvents = this.polys[i].getSweepEvents();\n\n        for (var j = 0, jMax = polySweepEvents.length; j < jMax; j++) {\n          sweepEvents.push(polySweepEvents[j]);\n        }\n      }\n\n      return sweepEvents;\n    }\n  }]);\n\n  return MultiPolyIn;\n}();\n\nvar RingOut = /*#__PURE__*/function () {\n  _createClass(RingOut, null, [{\n    key: \"factory\",\n\n    /* Given the segments from the sweep line pass, compute & return a series\n     * of closed rings from all the segments marked to be part of the result */\n    value: function factory(allSegments) {\n      var ringsOut = [];\n\n      for (var i = 0, iMax = allSegments.length; i < iMax; i++) {\n        var segment = allSegments[i];\n        if (!segment.isInResult() || segment.ringOut) continue;\n        var prevEvent = null;\n        var event = segment.leftSE;\n        var nextEvent = segment.rightSE;\n        var events = [event];\n        var startingPoint = event.point;\n        var intersectionLEs = [];\n        /* Walk the chain of linked events to form a closed ring */\n\n        while (true) {\n          prevEvent = event;\n          event = nextEvent;\n          events.push(event);\n          /* Is the ring complete? */\n\n          if (event.point === startingPoint) break;\n\n          while (true) {\n            var availableLEs = event.getAvailableLinkedEvents();\n            /* Did we hit a dead end? This shouldn't happen. Indicates some earlier\n             * part of the algorithm malfunctioned... please file a bug report. */\n\n            if (availableLEs.length === 0) {\n              var firstPt = events[0].point;\n              var lastPt = events[events.length - 1].point;\n              throw new Error(\"Unable to complete output ring starting at [\".concat(firstPt.x, \",\") + \" \".concat(firstPt.y, \"]. Last matching segment found ends at\") + \" [\".concat(lastPt.x, \", \").concat(lastPt.y, \"].\"));\n            }\n            /* Only one way to go, so cotinue on the path */\n\n\n            if (availableLEs.length === 1) {\n              nextEvent = availableLEs[0].otherSE;\n              break;\n            }\n            /* We must have an intersection. Check for a completed loop */\n\n\n            var indexLE = null;\n\n            for (var j = 0, jMax = intersectionLEs.length; j < jMax; j++) {\n              if (intersectionLEs[j].point === event.point) {\n                indexLE = j;\n                break;\n              }\n            }\n            /* Found a completed loop. Cut that off and make a ring */\n\n\n            if (indexLE !== null) {\n              var intersectionLE = intersectionLEs.splice(indexLE)[0];\n              var ringEvents = events.splice(intersectionLE.index);\n              ringEvents.unshift(ringEvents[0].otherSE);\n              ringsOut.push(new RingOut(ringEvents.reverse()));\n              continue;\n            }\n            /* register the intersection */\n\n\n            intersectionLEs.push({\n              index: events.length,\n              point: event.point\n            });\n            /* Choose the left-most option to continue the walk */\n\n            var comparator = event.getLeftmostComparator(prevEvent);\n            nextEvent = availableLEs.sort(comparator)[0].otherSE;\n            break;\n          }\n        }\n\n        ringsOut.push(new RingOut(events));\n      }\n\n      return ringsOut;\n    }\n  }]);\n\n  function RingOut(events) {\n    _classCallCheck(this, RingOut);\n\n    this.events = events;\n\n    for (var i = 0, iMax = events.length; i < iMax; i++) {\n      events[i].segment.ringOut = this;\n    }\n\n    this.poly = null;\n  }\n\n  _createClass(RingOut, [{\n    key: \"getGeom\",\n    value: function getGeom() {\n      // Remove superfluous points (ie extra points along a straight line),\n      var prevPt = this.events[0].point;\n      var points = [prevPt];\n\n      for (var i = 1, iMax = this.events.length - 1; i < iMax; i++) {\n        var _pt = this.events[i].point;\n        var _nextPt = this.events[i + 1].point;\n        if (compareVectorAngles(_pt, prevPt, _nextPt) === 0) continue;\n        points.push(_pt);\n        prevPt = _pt;\n      } // ring was all (within rounding error of angle calc) colinear points\n\n\n      if (points.length === 1) return null; // check if the starting point is necessary\n\n      var pt = points[0];\n      var nextPt = points[1];\n      if (compareVectorAngles(pt, prevPt, nextPt) === 0) points.shift();\n      points.push(points[0]);\n      var step = this.isExteriorRing() ? 1 : -1;\n      var iStart = this.isExteriorRing() ? 0 : points.length - 1;\n      var iEnd = this.isExteriorRing() ? points.length : -1;\n      var orderedPoints = [];\n\n      for (var _i = iStart; _i != iEnd; _i += step) {\n        orderedPoints.push([points[_i].x, points[_i].y]);\n      }\n\n      return orderedPoints;\n    }\n  }, {\n    key: \"isExteriorRing\",\n    value: function isExteriorRing() {\n      if (this._isExteriorRing === undefined) {\n        var enclosing = this.enclosingRing();\n        this._isExteriorRing = enclosing ? !enclosing.isExteriorRing() : true;\n      }\n\n      return this._isExteriorRing;\n    }\n  }, {\n    key: \"enclosingRing\",\n    value: function enclosingRing() {\n      if (this._enclosingRing === undefined) {\n        this._enclosingRing = this._calcEnclosingRing();\n      }\n\n      return this._enclosingRing;\n    }\n    /* Returns the ring that encloses this one, if any */\n\n  }, {\n    key: \"_calcEnclosingRing\",\n    value: function _calcEnclosingRing() {\n      // start with the ealier sweep line event so that the prevSeg\n      // chain doesn't lead us inside of a loop of ours\n      var leftMostEvt = this.events[0];\n\n      for (var i = 1, iMax = this.events.length; i < iMax; i++) {\n        var evt = this.events[i];\n        if (SweepEvent.compare(leftMostEvt, evt) > 0) leftMostEvt = evt;\n      }\n\n      var prevSeg = leftMostEvt.segment.prevInResult();\n      var prevPrevSeg = prevSeg ? prevSeg.prevInResult() : null;\n\n      while (true) {\n        // no segment found, thus no ring can enclose us\n        if (!prevSeg) return null; // no segments below prev segment found, thus the ring of the prev\n        // segment must loop back around and enclose us\n\n        if (!prevPrevSeg) return prevSeg.ringOut; // if the two segments are of different rings, the ring of the prev\n        // segment must either loop around us or the ring of the prev prev\n        // seg, which would make us and the ring of the prev peers\n\n        if (prevPrevSeg.ringOut !== prevSeg.ringOut) {\n          if (prevPrevSeg.ringOut.enclosingRing() !== prevSeg.ringOut) {\n            return prevSeg.ringOut;\n          } else return prevSeg.ringOut.enclosingRing();\n        } // two segments are from the same ring, so this was a penisula\n        // of that ring. iterate downward, keep searching\n\n\n        prevSeg = prevPrevSeg.prevInResult();\n        prevPrevSeg = prevSeg ? prevSeg.prevInResult() : null;\n      }\n    }\n  }]);\n\n  return RingOut;\n}();\nvar PolyOut = /*#__PURE__*/function () {\n  function PolyOut(exteriorRing) {\n    _classCallCheck(this, PolyOut);\n\n    this.exteriorRing = exteriorRing;\n    exteriorRing.poly = this;\n    this.interiorRings = [];\n  }\n\n  _createClass(PolyOut, [{\n    key: \"addInterior\",\n    value: function addInterior(ring) {\n      this.interiorRings.push(ring);\n      ring.poly = this;\n    }\n  }, {\n    key: \"getGeom\",\n    value: function getGeom() {\n      var geom = [this.exteriorRing.getGeom()]; // exterior ring was all (within rounding error of angle calc) colinear points\n\n      if (geom[0] === null) return null;\n\n      for (var i = 0, iMax = this.interiorRings.length; i < iMax; i++) {\n        var ringGeom = this.interiorRings[i].getGeom(); // interior ring was all (within rounding error of angle calc) colinear points\n\n        if (ringGeom === null) continue;\n        geom.push(ringGeom);\n      }\n\n      return geom;\n    }\n  }]);\n\n  return PolyOut;\n}();\nvar MultiPolyOut = /*#__PURE__*/function () {\n  function MultiPolyOut(rings) {\n    _classCallCheck(this, MultiPolyOut);\n\n    this.rings = rings;\n    this.polys = this._composePolys(rings);\n  }\n\n  _createClass(MultiPolyOut, [{\n    key: \"getGeom\",\n    value: function getGeom() {\n      var geom = [];\n\n      for (var i = 0, iMax = this.polys.length; i < iMax; i++) {\n        var polyGeom = this.polys[i].getGeom(); // exterior ring was all (within rounding error of angle calc) colinear points\n\n        if (polyGeom === null) continue;\n        geom.push(polyGeom);\n      }\n\n      return geom;\n    }\n  }, {\n    key: \"_composePolys\",\n    value: function _composePolys(rings) {\n      var polys = [];\n\n      for (var i = 0, iMax = rings.length; i < iMax; i++) {\n        var ring = rings[i];\n        if (ring.poly) continue;\n        if (ring.isExteriorRing()) polys.push(new PolyOut(ring));else {\n          var enclosingRing = ring.enclosingRing();\n          if (!enclosingRing.poly) polys.push(new PolyOut(enclosingRing));\n          enclosingRing.poly.addInterior(ring);\n        }\n      }\n\n      return polys;\n    }\n  }]);\n\n  return MultiPolyOut;\n}();\n\n/**\n * NOTE:  We must be careful not to change any segments while\n *        they are in the SplayTree. AFAIK, there's no way to tell\n *        the tree to rebalance itself - thus before splitting\n *        a segment that's in the tree, we remove it from the tree,\n *        do the split, then re-insert it. (Even though splitting a\n *        segment *shouldn't* change its correct position in the\n *        sweep line tree, the reality is because of rounding errors,\n *        it sometimes does.)\n */\n\nvar SweepLine = /*#__PURE__*/function () {\n  function SweepLine(queue) {\n    var comparator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Segment.compare;\n\n    _classCallCheck(this, SweepLine);\n\n    this.queue = queue;\n    this.tree = new SplayTree(comparator);\n    this.segments = [];\n  }\n\n  _createClass(SweepLine, [{\n    key: \"process\",\n    value: function process(event) {\n      var segment = event.segment;\n      var newEvents = []; // if we've already been consumed by another segment,\n      // clean up our body parts and get out\n\n      if (event.consumedBy) {\n        if (event.isLeft) this.queue.remove(event.otherSE);else this.tree.remove(segment);\n        return newEvents;\n      }\n\n      var node = event.isLeft ? this.tree.insert(segment) : this.tree.find(segment);\n      if (!node) throw new Error(\"Unable to find segment #\".concat(segment.id, \" \") + \"[\".concat(segment.leftSE.point.x, \", \").concat(segment.leftSE.point.y, \"] -> \") + \"[\".concat(segment.rightSE.point.x, \", \").concat(segment.rightSE.point.y, \"] \") + 'in SweepLine tree. Please submit a bug report.');\n      var prevNode = node;\n      var nextNode = node;\n      var prevSeg = undefined;\n      var nextSeg = undefined; // skip consumed segments still in tree\n\n      while (prevSeg === undefined) {\n        prevNode = this.tree.prev(prevNode);\n        if (prevNode === null) prevSeg = null;else if (prevNode.key.consumedBy === undefined) prevSeg = prevNode.key;\n      } // skip consumed segments still in tree\n\n\n      while (nextSeg === undefined) {\n        nextNode = this.tree.next(nextNode);\n        if (nextNode === null) nextSeg = null;else if (nextNode.key.consumedBy === undefined) nextSeg = nextNode.key;\n      }\n\n      if (event.isLeft) {\n        // Check for intersections against the previous segment in the sweep line\n        var prevMySplitter = null;\n\n        if (prevSeg) {\n          var prevInter = prevSeg.getIntersection(segment);\n\n          if (prevInter !== null) {\n            if (!segment.isAnEndpoint(prevInter)) prevMySplitter = prevInter;\n\n            if (!prevSeg.isAnEndpoint(prevInter)) {\n              var newEventsFromSplit = this._splitSafely(prevSeg, prevInter);\n\n              for (var i = 0, iMax = newEventsFromSplit.length; i < iMax; i++) {\n                newEvents.push(newEventsFromSplit[i]);\n              }\n            }\n          }\n        } // Check for intersections against the next segment in the sweep line\n\n\n        var nextMySplitter = null;\n\n        if (nextSeg) {\n          var nextInter = nextSeg.getIntersection(segment);\n\n          if (nextInter !== null) {\n            if (!segment.isAnEndpoint(nextInter)) nextMySplitter = nextInter;\n\n            if (!nextSeg.isAnEndpoint(nextInter)) {\n              var _newEventsFromSplit = this._splitSafely(nextSeg, nextInter);\n\n              for (var _i = 0, _iMax = _newEventsFromSplit.length; _i < _iMax; _i++) {\n                newEvents.push(_newEventsFromSplit[_i]);\n              }\n            }\n          }\n        } // For simplicity, even if we find more than one intersection we only\n        // spilt on the 'earliest' (sweep-line style) of the intersections.\n        // The other intersection will be handled in a future process().\n\n\n        if (prevMySplitter !== null || nextMySplitter !== null) {\n          var mySplitter = null;\n          if (prevMySplitter === null) mySplitter = nextMySplitter;else if (nextMySplitter === null) mySplitter = prevMySplitter;else {\n            var cmpSplitters = SweepEvent.comparePoints(prevMySplitter, nextMySplitter);\n            mySplitter = cmpSplitters <= 0 ? prevMySplitter : nextMySplitter;\n          } // Rounding errors can cause changes in ordering,\n          // so remove afected segments and right sweep events before splitting\n\n          this.queue.remove(segment.rightSE);\n          newEvents.push(segment.rightSE);\n\n          var _newEventsFromSplit2 = segment.split(mySplitter);\n\n          for (var _i2 = 0, _iMax2 = _newEventsFromSplit2.length; _i2 < _iMax2; _i2++) {\n            newEvents.push(_newEventsFromSplit2[_i2]);\n          }\n        }\n\n        if (newEvents.length > 0) {\n          // We found some intersections, so re-do the current event to\n          // make sure sweep line ordering is totally consistent for later\n          // use with the segment 'prev' pointers\n          this.tree.remove(segment);\n          newEvents.push(event);\n        } else {\n          // done with left event\n          this.segments.push(segment);\n          segment.prev = prevSeg;\n        }\n      } else {\n        // event.isRight\n        // since we're about to be removed from the sweep line, check for\n        // intersections between our previous and next segments\n        if (prevSeg && nextSeg) {\n          var inter = prevSeg.getIntersection(nextSeg);\n\n          if (inter !== null) {\n            if (!prevSeg.isAnEndpoint(inter)) {\n              var _newEventsFromSplit3 = this._splitSafely(prevSeg, inter);\n\n              for (var _i3 = 0, _iMax3 = _newEventsFromSplit3.length; _i3 < _iMax3; _i3++) {\n                newEvents.push(_newEventsFromSplit3[_i3]);\n              }\n            }\n\n            if (!nextSeg.isAnEndpoint(inter)) {\n              var _newEventsFromSplit4 = this._splitSafely(nextSeg, inter);\n\n              for (var _i4 = 0, _iMax4 = _newEventsFromSplit4.length; _i4 < _iMax4; _i4++) {\n                newEvents.push(_newEventsFromSplit4[_i4]);\n              }\n            }\n          }\n        }\n\n        this.tree.remove(segment);\n      }\n\n      return newEvents;\n    }\n    /* Safely split a segment that is currently in the datastructures\n     * IE - a segment other than the one that is currently being processed. */\n\n  }, {\n    key: \"_splitSafely\",\n    value: function _splitSafely(seg, pt) {\n      // Rounding errors can cause changes in ordering,\n      // so remove afected segments and right sweep events before splitting\n      // removeNode() doesn't work, so have re-find the seg\n      // https://github.com/w8r/splay-tree/pull/5\n      this.tree.remove(seg);\n      var rightSE = seg.rightSE;\n      this.queue.remove(rightSE);\n      var newEvents = seg.split(pt);\n      newEvents.push(rightSE); // splitting can trigger consumption\n\n      if (seg.consumedBy === undefined) this.tree.insert(seg);\n      return newEvents;\n    }\n  }]);\n\n  return SweepLine;\n}();\n\nvar POLYGON_CLIPPING_MAX_QUEUE_SIZE = typeof process !== 'undefined' && process.env.POLYGON_CLIPPING_MAX_QUEUE_SIZE || 1000000;\nvar POLYGON_CLIPPING_MAX_SWEEPLINE_SEGMENTS = typeof process !== 'undefined' && process.env.POLYGON_CLIPPING_MAX_SWEEPLINE_SEGMENTS || 1000000;\nvar Operation = /*#__PURE__*/function () {\n  function Operation() {\n    _classCallCheck(this, Operation);\n  }\n\n  _createClass(Operation, [{\n    key: \"run\",\n    value: function run(type, geom, moreGeoms) {\n      operation.type = type;\n      rounder.reset();\n      /* Convert inputs to MultiPoly objects */\n\n      var multipolys = [new MultiPolyIn(geom, true)];\n\n      for (var i = 0, iMax = moreGeoms.length; i < iMax; i++) {\n        multipolys.push(new MultiPolyIn(moreGeoms[i], false));\n      }\n\n      operation.numMultiPolys = multipolys.length;\n      /* BBox optimization for difference operation\n       * If the bbox of a multipolygon that's part of the clipping doesn't\n       * intersect the bbox of the subject at all, we can just drop that\n       * multiploygon. */\n\n      if (operation.type === 'difference') {\n        // in place removal\n        var subject = multipolys[0];\n        var _i = 1;\n\n        while (_i < multipolys.length) {\n          if (getBboxOverlap(multipolys[_i].bbox, subject.bbox) !== null) _i++;else multipolys.splice(_i, 1);\n        }\n      }\n      /* BBox optimization for intersection operation\n       * If we can find any pair of multipolygons whose bbox does not overlap,\n       * then the result will be empty. */\n\n\n      if (operation.type === 'intersection') {\n        // TODO: this is O(n^2) in number of polygons. By sorting the bboxes,\n        //       it could be optimized to O(n * ln(n))\n        for (var _i2 = 0, _iMax = multipolys.length; _i2 < _iMax; _i2++) {\n          var mpA = multipolys[_i2];\n\n          for (var j = _i2 + 1, jMax = multipolys.length; j < jMax; j++) {\n            if (getBboxOverlap(mpA.bbox, multipolys[j].bbox) === null) return [];\n          }\n        }\n      }\n      /* Put segment endpoints in a priority queue */\n\n\n      var queue = new SplayTree(SweepEvent.compare);\n\n      for (var _i3 = 0, _iMax2 = multipolys.length; _i3 < _iMax2; _i3++) {\n        var sweepEvents = multipolys[_i3].getSweepEvents();\n\n        for (var _j = 0, _jMax = sweepEvents.length; _j < _jMax; _j++) {\n          queue.insert(sweepEvents[_j]);\n\n          if (queue.size > POLYGON_CLIPPING_MAX_QUEUE_SIZE) {\n            // prevents an infinite loop, an otherwise common manifestation of bugs\n            throw new Error('Infinite loop when putting segment endpoints in a priority queue ' + '(queue size too big). Please file a bug report.');\n          }\n        }\n      }\n      /* Pass the sweep line over those endpoints */\n\n\n      var sweepLine = new SweepLine(queue);\n      var prevQueueSize = queue.size;\n      var node = queue.pop();\n\n      while (node) {\n        var evt = node.key;\n\n        if (queue.size === prevQueueSize) {\n          // prevents an infinite loop, an otherwise common manifestation of bugs\n          var seg = evt.segment;\n          throw new Error(\"Unable to pop() \".concat(evt.isLeft ? 'left' : 'right', \" SweepEvent \") + \"[\".concat(evt.point.x, \", \").concat(evt.point.y, \"] from segment #\").concat(seg.id, \" \") + \"[\".concat(seg.leftSE.point.x, \", \").concat(seg.leftSE.point.y, \"] -> \") + \"[\".concat(seg.rightSE.point.x, \", \").concat(seg.rightSE.point.y, \"] from queue. \") + 'Please file a bug report.');\n        }\n\n        if (queue.size > POLYGON_CLIPPING_MAX_QUEUE_SIZE) {\n          // prevents an infinite loop, an otherwise common manifestation of bugs\n          throw new Error('Infinite loop when passing sweep line over endpoints ' + '(queue size too big). Please file a bug report.');\n        }\n\n        if (sweepLine.segments.length > POLYGON_CLIPPING_MAX_SWEEPLINE_SEGMENTS) {\n          // prevents an infinite loop, an otherwise common manifestation of bugs\n          throw new Error('Infinite loop when passing sweep line over endpoints ' + '(too many sweep line segments). Please file a bug report.');\n        }\n\n        var newEvents = sweepLine.process(evt);\n\n        for (var _i4 = 0, _iMax3 = newEvents.length; _i4 < _iMax3; _i4++) {\n          var _evt = newEvents[_i4];\n          if (_evt.consumedBy === undefined) queue.insert(_evt);\n        }\n\n        prevQueueSize = queue.size;\n        node = queue.pop();\n      } // free some memory we don't need anymore\n\n\n      rounder.reset();\n      /* Collect and compile segments we're keeping into a multipolygon */\n\n      var ringsOut = RingOut.factory(sweepLine.segments);\n      var result = new MultiPolyOut(ringsOut);\n      return result.getGeom();\n    }\n  }]);\n\n  return Operation;\n}(); // singleton available by import\n\nvar operation = new Operation();\n\nvar union = function union(geom) {\n  for (var _len = arguments.length, moreGeoms = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    moreGeoms[_key - 1] = arguments[_key];\n  }\n\n  return operation.run('union', geom, moreGeoms);\n};\n\nvar intersection$1 = function intersection(geom) {\n  for (var _len2 = arguments.length, moreGeoms = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n    moreGeoms[_key2 - 1] = arguments[_key2];\n  }\n\n  return operation.run('intersection', geom, moreGeoms);\n};\n\nvar xor = function xor(geom) {\n  for (var _len3 = arguments.length, moreGeoms = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n    moreGeoms[_key3 - 1] = arguments[_key3];\n  }\n\n  return operation.run('xor', geom, moreGeoms);\n};\n\nvar difference = function difference(subjectGeom) {\n  for (var _len4 = arguments.length, clippingGeoms = new Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {\n    clippingGeoms[_key4 - 1] = arguments[_key4];\n  }\n\n  return operation.run('difference', subjectGeom, clippingGeoms);\n};\n\nvar index = {\n  union: union,\n  intersection: intersection$1,\n  xor: xor,\n  difference: difference\n};\n\nexport default index;\n","import polygonClipping from 'polygon-clipping';\nimport { polygon, multiPolygon } from '@turf/helpers';\nimport { getGeom } from '@turf/invariant';\n\n/**\n * Finds the difference between two {@link Polygon|polygons} by clipping the second polygon from the first.\n *\n * @name difference\n * @param {Feature<Polygon|MultiPolygon>} polygon1 input Polygon feature\n * @param {Feature<Polygon|MultiPolygon>} polygon2 Polygon feature to difference from polygon1\n * @returns {Feature<Polygon|MultiPolygon>|null} a Polygon or MultiPolygon feature showing the area of `polygon1` excluding the area of `polygon2` (if empty returns `null`)\n * @example\n * var polygon1 = turf.polygon([[\n *   [128, -26],\n *   [141, -26],\n *   [141, -21],\n *   [128, -21],\n *   [128, -26]\n * ]], {\n *   \"fill\": \"#F00\",\n *   \"fill-opacity\": 0.1\n * });\n * var polygon2 = turf.polygon([[\n *   [126, -28],\n *   [140, -28],\n *   [140, -20],\n *   [126, -20],\n *   [126, -28]\n * ]], {\n *   \"fill\": \"#00F\",\n *   \"fill-opacity\": 0.1\n * });\n *\n * var difference = turf.difference(polygon1, polygon2);\n *\n * //addToMap\n * var addToMap = [polygon1, polygon2, difference];\n */\nfunction difference(polygon1, polygon2) {\n  var geom1 = getGeom(polygon1);\n  var geom2 = getGeom(polygon2);\n  var properties = polygon1.properties || {};\n\n  var differenced = polygonClipping.difference(\n    geom1.coordinates,\n    geom2.coordinates\n  );\n  if (differenced.length === 0) return null;\n  if (differenced.length === 1) return polygon(differenced[0], properties);\n  return multiPolygon(differenced, properties);\n}\n\nexport default difference;\n","export const modeName = \"split_polygon\";\n\n/// This mode uses the `mapbox-gl-draw-passing-mode` mode to draw the spilitting lineString.\n/// here is the name used to add that mode:\nexport const passingModeName = `${modeName}_passing_draw_line_string`;\n\n/// when a (multi-)polygon feature is selected to be splitted, it gets highlighted.\n/// here is the name of the property indicating the highlight.\nexport const highlightPropertyName = `${modeName}_highlight`;\n\nexport const defaultOptions = {\n  highlightColor: \"#222\",\n  lineWidth: 0,\n  lineWidthUnit: \"kilometers\",\n  onSelectFeatureRequest() {\n    throw new Error(\"no Feature is selected to split.\");\n  },\n};\n","import polygonSplitter from \"polygon-splitter\";\n\nimport MapboxDraw from '@mapbox/mapbox-gl-draw';\nimport lineIntersect from \"@turf/line-intersect\";\nimport booleanDisjoint from \"@turf/boolean-disjoint\";\nimport lineOffset from \"@turf/line-offset\";\nimport lineToPolygon from \"@turf/line-to-polygon\";\nimport difference from \"@turf/difference\";\nimport { lineString } from \"@turf/helpers\";\n\nimport {\n  modeName,\n  passingModeName,\n  highlightPropertyName,\n  defaultOptions,\n} from \"./constants\";\n\nconst SplitPolygonMode = {};\n\nSplitPolygonMode.onSetup = function (opt) {\n  const {\n    featureIds = [],\n    highlightColor = defaultOptions.highlightColor,\n    lineWidth = defaultOptions.lineWidth,\n    lineWidthUnit = defaultOptions.lineWidthUnit,\n    onSelectFeatureRequest = defaultOptions.onSelectFeatureRequest,\n  } = opt || {};\n\n  const api = this._ctx.api;\n\n  const featuresToSplit = [];\n  const selectedFeatures = this.getSelected();\n\n  if (featureIds.length !== 0) {\n    featuresToSplit.push.apply(\n      featuresToSplit,\n      featureIds.map((id) => api.get(id))\n    );\n  } else if (selectedFeatures.length !== 0) {\n    featuresToSplit.push.apply(\n      featuresToSplit,\n      selectedFeatures\n        .filter(\n          (f) =>\n            f.type === MapboxDraw.constants.geojsonTypes.POLYGON ||\n            f.type === MapboxDraw.constants.geojsonTypes.MULTI_POLYGON\n        )\n        .map((f) => f.toGeoJSON())\n    );\n  } else {\n    return onSelectFeatureRequest();\n  }\n\n  const state = {\n    options: {\n      highlightColor,\n      lineWidth,\n      lineWidthUnit,\n    },\n    featuresToSplit,\n    api,\n  };\n\n  /// `onSetup` job should complete for this mode to work.\n  /// so `setTimeout` is used to bupass mode change after `onSetup` is done executing.\n  setTimeout(this.drawAndSplit.bind(this, state), 0);\n  this.highlighFeatures(state);\n\n  return state;\n};\n\nSplitPolygonMode.drawAndSplit = function (state) {\n  const { api, options } = state;\n  const { lineWidth, lineWidthUnit } = options;\n\n  try {\n    this.changeMode(passingModeName, {\n      onDraw: (cuttingLineString) => {\n        const newPolygons = [];\n        state.featuresToSplit.forEach((el) => {\n          if (booleanDisjoint(el, cuttingLineString)) {\n            console.info(`Line was outside of Polygon ${el.id}`);\n            newPolygons.push(el);\n            return;\n          } else if (lineWidth === 0) {\n            const polycut = polygonCut(el.geometry, cuttingLineString.geometry);\n            polycut.id = el.id;\n            api.add(polycut);\n            newPolygons.push(polycut);\n          } else {\n            const polycut = polygonCutWithSpacing(\n              el.geometry,\n              cuttingLineString.geometry,\n              {\n                line_width: lineWidth,\n                line_width_unit: lineWidthUnit,\n              }\n            );\n            polycut.id = el.id;\n            api.add(polycut);\n            newPolygons.push(polycut);\n          }\n        });\n\n        this.fireUpdate(newPolygons);\n        this.highlighFeatures(state, false);\n      },\n      onCancel: () => {\n        this.highlighFeatures(state, false);\n      },\n    });\n  } catch (err) {\n    console.error(\"🚀 ~ file: mode.js ~ line 116 ~ err\", err);\n  }\n};\n\nSplitPolygonMode.highlighFeatures = function (state, shouldHighlight = true) {\n  const color = shouldHighlight ? state.options.highlightColor : undefined;\n\n  state.featuresToSplit.forEach((f) => {\n    state.api.setFeatureProperty(f.id, highlightPropertyName, color);\n  });\n};\n\nSplitPolygonMode.toDisplayFeatures = function (state, geojson, display) {\n  display(geojson);\n};\n\nSplitPolygonMode.fireUpdate = function (newF) {\n  this.map.fire(MapboxDraw.constants.events.UPDATE, {\n    action: modeName,\n    features: newF,\n  });\n};\n\n// SplitPolygonMode.onStop = function ({ main }) {\n//   console.log(\"🚀 ~ file: mode.js ~ line 60 ~ onStop\");\n// };\n\nexport default SplitPolygonMode;\n\n/// Note: currently has some issues, but generally is a better approach\nfunction polygonCut(poly, line) {\n  return polygonSplitter(poly, line);\n}\n\n/// Adopted from https://gis.stackexchange.com/a/344277/145409\nfunction polygonCutWithSpacing(poly, line, options) {\n  const { line_width, line_width_unit } = options || {};\n\n  const offsetLine = [];\n  const retVal = null;\n  let i, j, intersectPoints, forCut, forSelect;\n  let thickLineString, thickLinePolygon, clipped;\n\n  if (\n    typeof line_width === \"undefined\" ||\n    typeof line_width_unit === \"undefined\" ||\n    (poly.type != MapboxDraw.constants.geojsonTypes.POLYGON &&\n      poly.type != MapboxDraw.constants.geojsonTypes.MULTI_POLYGON) ||\n    line.type != MapboxDraw.constants.geojsonTypes.LINE_STRING\n  ) {\n    return retVal;\n  }\n\n  /// if line and polygon don't intersect return.\n  if (booleanDisjoint(line, poly)) {\n    return retVal;\n  }\n\n  intersectPoints = lineIntersect(poly, line);\n  if (intersectPoints.features.length === 0) {\n    return retVal;\n  }\n\n  /// Creating two new lines at sides of the splitting lineString\n  offsetLine[0] = lineOffset(line, line_width, {\n    units: line_width_unit,\n  });\n  offsetLine[1] = lineOffset(line, -line_width, {\n    units: line_width_unit,\n  });\n\n  for (i = 0; i <= 1; i++) {\n    forCut = i;\n    forSelect = (i + 1) % 2;\n    const polyCoords = [];\n    for (j = 0; j < line.coordinates.length; j++) {\n      polyCoords.push(line.coordinates[j]);\n    }\n    for (j = offsetLine[forCut].geometry.coordinates.length - 1; j >= 0; j--) {\n      polyCoords.push(offsetLine[forCut].geometry.coordinates[j]);\n    }\n    polyCoords.push(line.coordinates[0]);\n\n    thickLineString = lineString(polyCoords);\n    thickLinePolygon = lineToPolygon(thickLineString);\n    clipped = difference(poly, thickLinePolygon);\n  }\n\n  return clipped;\n}\n","import {\n  modeName,\n  highlightPropertyName as _highlightPropertyName,\n} from \"./constants\";\n\nconst highlightPropertyName = `user_${_highlightPropertyName}`;\n\nconst customDrawStyles = (defaultStyle) =>\n  defaultStyle\n    .map((style) => {\n      if (style.id.endsWith(\"inactive\")) {\n        return {\n          ...style,\n          /// here \"!has\" is used cause the gl-draw supported that instead of ['!', ['has', ...]]\n          filter: [...style.filter, [\"!has\", highlightPropertyName]],\n        };\n      }\n\n      return style;\n    })\n    .concat([\n      {\n        id: `${modeName}-fill-active`,\n        type: \"fill\",\n        filter: [\n          \"all\",\n          [\"==\", \"active\", \"false\"],\n          [\"==\", \"$type\", \"Polygon\"],\n          [\"has\", highlightPropertyName],\n        ],\n        paint: {\n          \"fill-color\": [\"get\", highlightPropertyName],\n          \"fill-outline-color\": [\"get\", highlightPropertyName],\n          \"fill-opacity\": 0.1,\n        },\n      },\n      {\n        id: `${modeName}-stroke-active`,\n        type: \"line\",\n        filter: [\n          \"all\",\n          [\"==\", \"active\", \"false\"],\n          [\"==\", \"$type\", \"Polygon\"],\n          [\"has\", highlightPropertyName],\n        ],\n        layout: {\n          \"line-cap\": \"round\",\n          \"line-join\": \"round\",\n        },\n        paint: {\n          \"line-color\": [\"get\", highlightPropertyName],\n          \"line-dasharray\": [0.2, 2],\n          \"line-width\": 2,\n        },\n      },\n    ]);\n\nexport default customDrawStyles;\n","import * as MapboxDraw from \"@mapbox/mapbox-gl-draw\";\n\nconst { draw_point } = MapboxDraw.modes;\nconst Constants = MapboxDraw.constants;\n\nconst {\n  onSetup: originOnSetup,\n  onClick: originOnClick,\n  ...restOriginMethods\n} = draw_point;\n\nconst passing_draw_point = {\n  originOnSetup,\n  originOnClick,\n  ...restOriginMethods,\n};\n\npassing_draw_point.onSetup = function (opt) {\n  const state = this.originOnSetup();\n  const { onDraw, onCancel } = opt;\n  state.onDraw = onDraw;\n  state.onCancel = onCancel;\n  return state;\n};\n\npassing_draw_point.onTap = passing_draw_point.onClick = function (state, e) {\n  this.updateUIClasses({ mouse: Constants.cursors.MOVE });\n  state.point.updateCoordinate(\"\", e.lngLat.lng, e.lngLat.lat);\n\n  if (typeof state.onDraw === \"function\") state.onDraw(state.point.toGeoJSON());\n  else\n    this.map.fire(\"draw.passing-create\", {\n      features: [state.point.toGeoJSON()],\n    });\n\n  this.changeMode(Constants.modes.SIMPLE_SELECT, {}, { silent: true });\n};\n\npassing_draw_point.onMouseMove = function (state, e) {\n  this.updateUIClasses({ mouse: Constants.cursors.ADD });\n  state.point.updateCoordinate(e.lngLat.lng, e.lngLat.lat);\n};\n\npassing_draw_point.onStop = function (state) {\n  const f = state.point;\n\n  /// check to see if we've deleted this feature\n  const drawnFeature = this.getFeature(f.id);\n  if (drawnFeature === undefined) {\n    /// Call `onCancel` if exists.\n    if (typeof state.onCancel === \"function\") state.onCancel();\n    return;\n  }\n\n  this.activateUIButton();\n  this.deleteFeature([state.point.id], { silent: true });\n};\n\nexport default passing_draw_point;\n","import * as MapboxDraw from \"@mapbox/mapbox-gl-draw\";\n\nconst { draw_line_string } = MapboxDraw.modes;\nconst { doubleClickZoom } = MapboxDraw.lib;\nconst Constants = MapboxDraw.constants;\n\nconst {\n  onSetup: originOnSetup,\n  onMouseMove: originOnMouseMove,\n  ...restOriginMethods\n} = draw_line_string;\n\nconst passing_draw_line_string = {\n  originOnSetup,\n  originOnMouseMove,\n  ...restOriginMethods,\n};\n\npassing_draw_line_string.onSetup = function (opt) {\n  const state = this.originOnSetup();\n  const { onDraw, onCancel } = opt;\n  state.onDraw = onDraw;\n  state.onCancel = onCancel;\n  return state;\n};\n\npassing_draw_line_string.onMouseMove = function (state, e) {\n  this.updateUIClasses({ mouse: Constants.cursors.ADD });\n  this.originOnMouseMove(state, e);\n};\n\npassing_draw_line_string.onStop = function (state) {\n  const f = state.line;\n\n  this.updateUIClasses({ mouse: Constants.cursors.NONE });\n  doubleClickZoom.enable(this);\n  this.activateUIButton();\n\n  /// check to see if we've deleted this feature\n  const drawnFeature = this.getFeature(f.id);\n  if (drawnFeature === undefined) {\n    /// Call `onCancel` if exists.\n    if (typeof state.onCancel === \"function\") state.onCancel();\n    return;\n  }\n  /// remove last added coordinate\n  else f.removeCoordinate(`${state.currentVertexPosition}`);\n\n  if (f.isValid()) {\n    if (typeof state.onDraw === \"function\") state.onDraw(f.toGeoJSON());\n    else\n      this.map.fire(\"draw.passing-create\", {\n        features: [f.toGeoJSON()],\n      });\n  }\n  this.deleteFeature([f.id], { silent: true });\n  this.changeMode(Constants.modes.SIMPLE_SELECT, {}, { silent: true });\n};\n\nexport default passing_draw_line_string;\n","import MapboxDraw from \"@mapbox/mapbox-gl-draw\";\n\nconst { draw_polygon } = MapboxDraw.modes;\nconst { doubleClickZoom } = MapboxDraw.lib;\nconst Constants = MapboxDraw.constants;\n\nconst {\n  onSetup: originOnSetup,\n  onMouseMove: originOnMouseMove,\n  ...restOriginMethods\n} = draw_polygon;\n\nconst passing_draw_polygon = {\n  originOnSetup,\n  originOnMouseMove,\n  ...restOriginMethods,\n};\n\npassing_draw_polygon.onSetup = function (opt) {\n  const state = this.originOnSetup();\n  const { onDraw, onCancel } = opt;\n  state.onDraw = onDraw;\n  state.onCancel = onCancel;\n  return state;\n};\n\npassing_draw_polygon.onMouseMove = function (state, e) {\n  this.updateUIClasses({ mouse: Constants.cursors.ADD });\n  this.originOnMouseMove(state, e);\n};\n\npassing_draw_polygon.onStop = function (state) {\n  const f = state.polygon;\n\n  this.updateUIClasses({ mouse: Constants.cursors.NONE });\n  doubleClickZoom.enable(this);\n  this.activateUIButton();\n\n  /// check to see if we've deleted this feature\n  const drawnFeature = this.getFeature(f.id);\n  if (drawnFeature === undefined) {\n    /// Call `onCancel` if exists.\n    if (typeof state.onCancel === \"function\") state.onCancel();\n    return;\n  }\n  /// remove last added coordinate\n  else f.removeCoordinate(`${state.currentVertexPosition}`);\n\n  if (f.isValid()) {\n    if (typeof state.onDraw === \"function\") state.onDraw(f.toGeoJSON());\n    else\n      this.map.fire(\"draw.passing-create\", {\n        features: [f.toGeoJSON()],\n      });\n  }\n  this.deleteFeature([f.id], { silent: true });\n  this.changeMode(Constants.modes.SIMPLE_SELECT, {}, { silent: true });\n};\n\nexport default passing_draw_polygon;\n","export const modeName = \"select_feature\";\n\n/// when a (multi-)polygon feature is hovered to be selected, it gets highlighted.\n/// here is the name of the property indicating the highlight.\nexport const highlightPropertyName = `${modeName}_highlight`;\n\nexport const defaultOptions = {\n  highlightColor: \"#222\",\n};\n","import MapboxDraw from \"@mapbox/mapbox-gl-draw\";\n\nconst Constants = MapboxDraw.constants;\nconst lib = MapboxDraw.lib;\n\nimport { defaultOptions, highlightPropertyName } from \"./constants\";\n\nconst select_mode = {};\n\nselect_mode.onSetup = function (opt) {\n  const { selectHighlightColor, onSelect, onCancel } = opt;\n  const state = {};\n  state.hoveredFeatureID = null;\n  state.selectedFeatureID = null;\n  state.onSelect = onSelect;\n  state.onCancel = onCancel;\n  state.api = this._ctx.api;\n  const {\n    selectHighlightColor:\n      defaultSelectHighlightColor = defaultOptions.highlightColor,\n  } = this._ctx.options;\n  state.options = {\n    selectHighlightColor: selectHighlightColor || defaultSelectHighlightColor,\n  };\n\n  return state;\n};\n\nselect_mode.onMouseMove = function (state, e) {\n  const { api } = state;\n  const { featureTarget } = e;\n  // this.originOnMouseMove(state, e);\n\n  if (featureTarget) {\n    this.updateUIClasses({ mouse: Constants.cursors.POINTER });\n    const hoveringFeatureID = featureTarget.properties.id;\n    if (\n      state.hoveredFeatureID !== null &&\n      state.hoveredFeatureID !== hoveringFeatureID\n    ) {\n      api.setFeatureProperty(\n        state.hoveredFeatureID,\n        highlightPropertyName,\n        undefined\n      );\n    }\n    state.hoveredFeatureID = hoveringFeatureID;\n    api.setFeatureProperty(\n      state.hoveredFeatureID,\n      highlightPropertyName,\n      state.options.selectHighlightColor\n    );\n  } else {\n    if (state.hoveredFeatureID)\n      api.setFeatureProperty(\n        state.hoveredFeatureID,\n        highlightPropertyName,\n        undefined\n      );\n    state.hoveredFeatureID = null;\n  }\n};\n\nselect_mode.onClick = function (state, e) {\n  state.selectedFeatureID = state.hoveredFeatureID;\n  this.onStop(state, e);\n};\n\nselect_mode.toDisplayFeatures = function (state, geojson, display) {\n  display(geojson);\n};\n\nselect_mode.onKeyUp = function (state, e) {\n  if (CommonSelectors.isEscapeKey(e)) {\n    // this.changeMode(Constants.modes.SIMPLE_SELECT);\n    if (typeof state.onCancel === \"function\") setTimeout(state.onCancel, 0);\n  }\n};\n\nselect_mode.onStop = function (state) {\n  this.updateUIClasses({ mouse: Constants.cursors.NONE });\n  lib.doubleClickZoom.enable(this);\n  this.activateUIButton();\n\n  if (state.selectedFeatureID) {\n    if (typeof state.onSelect === \"function\")\n      setTimeout(state.onSelect.bind(null, state.selectedFeatureID), 0);\n    else\n      this.map.fire(\"draw.select_mode.select\", {\n        featureID: state.selectedFeatureID,\n      });\n\n    state.selectedFeatureID = null;\n    // this.changeMode(Constants.modes.SIMPLE_SELECT, {}, { silent: true });\n  } else {\n    /// Call `onCancel` if exists.\n    if (typeof state.onCancel === \"function\") setTimeout(state.onCancel, 0);\n  }\n\n  if (state.hoveredFeatureID) {\n    this._ctx.api.setFeatureProperty(\n      state.hoveredFeatureID,\n      highlightPropertyName,\n      undefined\n    );\n    state.hoveredFeatureID = null;\n  }\n};\n\nexport default select_mode;\n","import { default as selectFeatureMode } from \"./mode.js\";\nimport { default as drawStyles } from \"./customDrawStyles.js\";\n\nimport { modeName } from \"./constants\";\n\nexport { selectFeatureMode };\nexport { drawStyles };\n\nexport default function SelectFeatureMode(modes) {\n  return {\n    ...modes,\n    [modeName]: selectFeatureMode,\n  };\n}\n","import { default as splitPolygonMode } from \"./mode.js\";\nimport { default as drawStyles } from \"./customDrawStyles.js\";\nimport * as Constants from \"./constants\";\n\nimport { passing_draw_line_string } from \"mapbox-gl-draw-passing-mode\";\nimport SelectFeatureMode from \"mapbox-gl-draw-select-mode\";\nimport { modeName, passingModeName } from \"./constants\";\n\nexport { splitPolygonMode };\nexport { drawStyles };\nexport { Constants };\n\nexport default function SplitPolygonMode(modes) {\n  return {\n    ...SelectFeatureMode(modes),\n    [passingModeName]: passing_draw_line_string,\n    [modeName]: splitPolygonMode,\n  };\n}\n"],"names":["clone","geojson","Error","type","cloneFeature","cloned","Object","keys","forEach","key","features","map","feature","cloneFeatureCollection","cloneGeometry","properties","cloneProperties","geometry","value","Array","isArray","item","geom","bbox","geometries","g","coordinates","deepSlice","coords","slice","coord","earthRadius","factors","centimeters","centimetres","degrees","feet","inches","kilometers","kilometres","meters","metres","miles","millimeters","millimetres","nauticalmiles","radians","yards","options","feat","id","polygon","_i","coordinates_1","length","ring","j","lineString","featureCollection","fc","multiLineString","multiPolygon","lengthToDegrees","distance","units","factor","lengthToRadians","Math","PI","isNumber","num","isNaN","isObject","input","constructor","getCoords","getGeom","booleanClockwise","line","prev","cur","sum","i","coordEach","callback","excludeWrapCoord","k","l","stopG","geometryMaybeCollection","isGeometryCollection","wrapShrink","coordIndex","isFeatureCollection","isFeature","stop","featureIndex","geomIndex","multiFeatureIndex","geometryIndex","geomType","featureEach","geomEach","featureProperties","featureBBox","featureId","undefined","flattenEach","coordinate","rewindFeature","reverse","rewindLineString","rewindPolygon","lineCoords","pointInPolygon","p","ii","f","u1","v1","u2","v2","currentP","nextP","x","y","numContours","contourLen","contour","splitter","elen","e","flen","h","Q","Qnew","hh","bvirt","enow","fnow","eindex","findex","hindex","vec","n","Float64Array","B","C1","C2","D","u","orient2d","ax","ay","bx","by","cx","cy","detleft","detright","det","detsum","abs","acxtail","acytail","bcxtail","bcytail","c","ahi","alo","bhi","blo","_j","_0","s1","s0","t1","t0","u3","acx","bcx","acy","bcy","estimate","errbound","C1len","C2len","Dlen","orient2dadapt","Edge","p1","p2","edgeType","index","contourId","this","originalIndex","polygonContourId","interiorRing","minX","min","minY","maxX","max","maxY","intersectionPoints","nextEdge","Point","Contour","rawCoords","edgeIntersectsBbox","edge","IntersectionPoint","edge1","edge2","isHeadingIn","polylineEdge","polygonEdge","distanceFromPolylineEdgeStart","distanceFromPolygonEdgeStart","push","visitCount","xs","ys","sqrt","prototype","incrementVisitCount","crossProduct","a","b","dotProduct","toPoint","s","d","getEdgeIntersection","lineEdge","potentialEdge","noEndpointTouch","va","vb","kross","sqrKross","sqrLenA","t","sqrLenE","sa","sb","smin","smax","poly","mutate","results","result","rewind","intersections","polygonEdges","polylineEdges","contours","polyEdges","lineEdges","polylineBbox","numberOfRingsInPolygon","linegeom","linecoords","edgeCount","lineLength","prevEdge","nextPoint","prevPoint","polygeom","polycoords","polyLength","i$1","polyLenth2","ii$1","polygonSet","polyLenth3","firstPoint","p1$1","p2$1","e$1","prevEdge$1","firstEdge","iii","intersectPolylineBbox","fillQueue","Infinity","intersectingPoints","count","polyCount","intersection","ip","sort","findIntersectionPoints","numberIntersectionsByRing","infiniteLoopGuard","outPolys","firstPolyStart","pe","polyStart","nextPolyStart","unvisitedPolyFound","index$1","outPoly","nextIntersection","walkPolygonForwards","override","index$2","walkPolylineForwards","walkPolylineBackwards","unvisitedPolyFound$1","index$3","intersection$2","outCoordinates","index$4","createAsHoleOrAddAsNewOuterRing","findRingFromEdge","findFirstPolygonEdge","parseInt","find","unusedRing","existingRing","inside","intersectionPoint","currentIndex","findIndexOfIntersectionPoint","nextIp","condition","lastPointOnEdge","nextIntersection$1","lastIntersection","module","exports","drag","click","mousemove","mousedown","mouseup","mouseout","keydown","keyup","touchstart","touchmove","touchend","tap","o","on","selector","fn","render","store","featureChanged","r","call","ui","updateMapClasses","start","trash","combineFeatures","uncombineFeatures","__esModule","hasOwnProperty","default","apply","arguments","Function","bind","defineProperty","getOwnPropertyDescriptor","get","enumerable","RADIUS","FLATTENING","POLAR_RADIUS","sin","CONTROL_BASE","CONTROL_PREFIX","CONTROL_BUTTON","CONTROL_BUTTON_LINE","CONTROL_BUTTON_POLYGON","CONTROL_BUTTON_POINT","CONTROL_BUTTON_TRASH","CONTROL_BUTTON_COMBINE_FEATURES","CONTROL_BUTTON_UNCOMBINE_FEATURES","CONTROL_GROUP","ATTRIBUTION","ACTIVE_BUTTON","BOX_SELECT","HOT","COLD","ADD","MOVE","DRAG","POINTER","NONE","POLYGON","LINE","POINT","FEATURE","LINE_STRING","FEATURE_COLLECTION","MULTI_PREFIX","MULTI_POINT","MULTI_LINE_STRING","MULTI_POLYGON","DRAW_LINE_STRING","DRAW_POLYGON","DRAW_POINT","SIMPLE_SELECT","DIRECT_SELECT","STATIC","CREATE","DELETE","UPDATE","SELECTION_CHANGE","MODE_CHANGE","ACTIONABLE","RENDER","COMBINE_FEATURES","UNCOMBINE_FEATURES","CHANGE_COORDINATES","v","MIDPOINT","VERTEX","m","ACTIVE","INACTIVE","_","E","freeze","__proto__","classes","sources","cursors","types","geojsonTypes","modes","events","updateActions","meta","activeStates","interactions","LAT_MIN","LAT_RENDERED_MIN","LAT_MAX","LAT_RENDERED_MAX","LNG_MIN","LNG_MAX","T","LineString","MultiLineString","Polygon","C","area","O","property","S","point","I","_items","_nums","_length","add","has","delete","values","JSON","parse","clear","M","L","clickBuffer","touch","touchBuffer","styles","layers","filter","getLayer","queryRenderedFeatures","indexOf","N","mouse","active","currentModeName","queueMapClasses","A","P","fineTolerance","grossTolerance","interval","time","F","tolerance","w","R","log","pow","floor","random","toString","rack","hats","set","bits","base","ctx","changed","incomingCoords","setCoordinates","getCoordinates","stringify","setProperty","toGeoJSON","internal","mode","userProperties","U","create","isValid","updateCoordinate","getCoordinate","addCoordinate","splice","removeCoordinate","V","every","split","concat","MultiPoint","MultiPolygon","G","join","J","model","TypeError","_coordinatesToFeatures","z","drawConfig","_ctx","replace","getFeatures","setSelected","setSelectedCoordinates","reduce","feature_id","getSelected","getSelectedIds","isSelected","getFeature","select","deselect","deleteFeature","addFeature","clearSelectedFeatures","clearSelected","clearSelectedCoordinates","setActionableState","actionable","changeMode","updateUIClasses","activateUIButton","setActiveButton","featuresAt","newFeature","isInstanceOf","doRender","onSetup","onDrag","onClick","onMouseMove","onMouseDown","onMouseUp","onMouseOut","onKeyUp","onKeyDown","onTouchStart","onTouchMove","onTouchEnd","onTap","onStop","onTrash","onCombineFeature","onUncombineFeature","toDisplayFeatures","Y","$","q","onCombineFeatures","onUncombineFeatures","H","X","getSource","isDirty","getAllIds","getChangedIds","hot","cold","parent","currentModeRender","setData","_emitSelectionChange","fire","points","getSelectedCoordinates","_deletedFeaturesToEmit","clearChangedIds","Z","_features","_featureIds","_selectedFeatureIds","_selectedCoordinates","_changedFeatureIds","_mapInitialConfig","requestAnimationFrame","W","silent","createRenderBatch","setDirty","getAll","coord_path","setFeatureProperty","storeMapConfig","isEnabled","restoreMapConfig","enable","disable","getInitialConfigValue","K","tt","et","nt","onRemove","off","connect","clearInterval","removeLayers","removeButtons","removeEventListeners","clearMapClasses","boxZoomInitial","boxZoom","container","parentNode","removeChild","addLayers","addEventListeners","onAdd","Date","getTime","originalEvent","stopPropagation","mousedrag","touchdrag","buttons","which","featureTarget","touchEnabled","preventDefault","srcElement","target","classList","contains","keyCode","controls","line_string","zoomend","changeZoom","data","dataType","setup","some","defaultMode","actions","addEventListener","keybindings","removeEventListener","getMode","remove","document","createElement","className","setAttribute","title","appendChild","onDeactivate","onActivate","addButtons","combine_features","uncombine_features","getContainer","boxSelect","dragPan","loaded","setInterval","addSource","addLayer","removeLayer","removeSource","ot","paint","layout","rt","it","shiftKey","button","at","st","ut","ct","lt","dt","pt","ft","ht","isOfMetaType","isShiftMousedown","isActiveFeature","isInactiveFeature","noTarget","isVertex","isShiftDown","isEscapeKey","isEnterKey","isTrue","gt","yt","_add","sub","_sub","multByPoint","_multByPoint","divByPoint","_divByPoint","mult","_mult","div","_div","rotate","_rotate","rotateAround","_rotateAround","matMult","_matMult","unit","_unit","perp","_perp","round","_round","mag","equals","dist","distSqr","angle","atan2","angleTo","angleWith","angleWithSep","cos","convert","vt","mt","getBoundingClientRect","clientX","left","clientLeft","clientY","top","clientTop","_t","bt","lng","lat","Et","String","midpoints","selectedPaths","Tt","setTimeout","doubleClickZoom","Ct","Ot","St","GeometryCollection","Feature","FeatureCollection","It","xt","Mt","Lt","Nt","At","Pt","Ft","wt","Rt","node","node_","path","parents","isRoot","level","circular","update","Ut","before","after","pre","post","block","kt","isLeaf","notLeaf","notRoot","jt","Vt","isLast","isFirst","pop","Dt","RegExp","message","Boolean","Number","getPrototypeOf","paths","nodes","Bt","Gt","Jt","_bbox","_valid","include","center","union","_fastContains","intersect","zt","Yt","$t","qt","Ht","Xt","bboxify","Zt","Wt","Kt","ceil","Qt","te","dragMoveLocation","boxSelectStartLocation","boxSelectElement","boxSelecting","canBoxSelect","dragMoving","canDragMove","initiallySelectedFeatureIds","featureIds","fireActionable","fireUpdate","action","getUniqueIds","stopExtendedInteractions","clickAnywhere","clickOnVertex","clickOnFeature","coordPath","startPos","lngLat","startOnActiveFeature","startBoxSelect","dragMove","whileBoxSelect","style","transform","WebkitTransform","width","height","includes","createdFeatures","deletedFeatures","ee","ne","oe","selectedCoordPaths","startDragging","stopDragging","onVertex","pathsToCoordinates","onMidpoint","onFeature","dragFeature","dragVertex","clickNoTarget","clickInactive","clickActiveFeature","localeCompare","numeric","re","ie","stopDrawingAndRemove","ae","currentVertexPosition","se","from","direction","ue","simple_select","direct_select","draw_point","draw_polygon","draw_line_string","ce","displayControlsDefault","le","de","source","fe","global","self","nodeType","process","binding","isTypedArray","size","exec","IE_PROTO","Buffer","Symbol","Uint8Array","propertyIsEnumerable","toStringTag","getOwnPropertySymbols","isBuffer","valueOf","__data__","byteLength","byteOffset","buffer","name","test","hash","string","ArrayBuffer","resolve","he","ge","ye","ve","CommonSelectors","constrainFeatureMovement","createMidPoint","createSupplementaryPoints","createVertex","euclideanDistance","getFeatureAtAndSetCursors","isClick","isEventAtCoordinates","isTap","mapEventToBoundingBox","ModeHandler","moveFeatures","sortFeatures","stringSetsAreEqual","StringSet","theme","toDenseArray","me","getFeatureIdsAt","getSelectedPoints","deleteAll","api","_e","constants","lib","lineSegment","segments","previousCoords","currentCoords","coords1","coords2","x1","y1","x2","y2","segment","createSegments","lineSegmentFeature","quickselect","arr","right","compare","quickselectStep","defaultCompare","exp","sd","swap","tmp","findItem","items","equalsFn","calcBBox","toBBox","distBBox","children","destNode","createNode","child","extend","leaf","compareNodeMinX","compareNodeMinY","bboxArea","bboxMargin","intersectionArea","intersects","multiSelect","stack","mid","maxEntries","_maxEntries","_minEntries","all","_all","search","nodesToSearch","childBBox","collides","load","insert","_build","_splitRoot","tmpNode","_insert","indexes","goingUp","_condense","compareMinX","compareMinY","toJSON","fromJSON","N2","N1","right2","right3","_chooseSubtree","targetNode","minArea","minEnlargement","enlargement","isNode","insertPath","_split","_adjustParentBBoxes","_chooseSplitAxis","splitIndex","_chooseSplitIndex","newNode","minOverlap","bbox1","bbox2","overlap","_allDistMargin","leftBBox","rightBBox","margin","siblings","multiPoint","radiansToLength","radiansToDegrees","unitsFactors","areaFactors","acres","hectares","_options","polygons","lineStrings","geometryCollection","precision","multiplier","bearingToAzimuth","bearing","degreesToRadians","convertLength","originalUnit","finalUnit","convertArea","startFactor","finalFactor","validateBBox","validateId","js","helpers","require$$0","propEach","segmentEach","segmentIndex","previousFeatureIndex","previousMultiIndex","prevGeomIndex","currentCoord","featureIndexCoord","multiPartIndexCoord","currentSegment","lineEach","js$1","coordAll","coordReduce","initialValue","previousValue","featureReduce","currentFeature","findPoint","findSegment","flattenReduce","geomReduce","currentGeometry","lineReduce","currentLine","propReduce","currentProperties","segmentReduce","started","meta_1","rbush","require$$1","require$$2","turfBBox","require$$3","geojsonRbush","tree","json","lineIntersect","line1","line2","unique","match","x3","y3","x4","y4","denom","numeA","numeB","uA","uB","booleanPointInPolygon","getCoord","polys","inBBox","insidePoly","inRing","ignoreBoundary","inHole","isInside","xi","yi","xj","yj","polygonToLine","coordsToLine","multiPoly","lines","multiPolygonToLine","booleanDisjoint","feature1","feature2","bool","flatten1","flatten2","geom1","geom2","pair1","pair2","isPointOnLine","lineString1","lineString2","isLineOnLine","isLineInPoly","_a","_b","_c","isPolyInPoly","disjoint","isPointOnLineSegment","lineSegmentStart","lineSegmentEnd","dxc","dyc","dxl","dyl","ab","end","isParallel","cross","scalarMult","intersectSegments","lineOffset","_name","getType","lineOffsetFeature","offsetDegrees","finalCoords","point1","point2","offset","out1x","out2x","out1y","out2y","seg2Coords","lineToPolygon","autoComplete","orderCoords","lineStringToPolygon","autoCompleteCoords","multiCoords","largestArea","west","south","east","north","calculateArea","unshift","first","last","__generator","thisArg","body","label","sent","trys","ops","next","verb","throw","return","iterator","op","done","step","geojsonRbushModule","geojsonRbush$1","Node","DEFAULT_COMPARE","splay","comparator","cmp","printRow","root","prefix","isTail","out","printNode","indent","Tree","_root","_size","_comparator","_remove","findStatic","current","visitor","range","low","high","minNode","maxNode","successor","predecessor","toList","head","presort","loadRecursive","mergedList","l1","l2","mergeLists","createList","sortedListToBST","isEmpty","configurable","newKey","newData","merge","middle","list","pivot","_classCallCheck","instance","Constructor","_defineProperties","props","descriptor","writable","_createClass","protoProps","staticProps","isInBbox","ll","ur","getBboxOverlap","b1","b2","lowerX","upperX","epsilon","EPSILON","EPSILON_SQ","PtRounder","reset","xRounder","CoordRounder","yRounder","SplayTree","prevNode","nextNode","rounder","compareVectorAngles","basePt","endPt1","endPt2","cosineOfAngle","pShared","pBase","pAngle","vBase","vAngle","horizontalIntersection","verticalIntersection","SweepEvent","isLeft","ptCmp","comparePoints","link","Segment","aPt","bPt","other","otherEvents","iMax","evt","checkForConsuming","numEvents","evt1","consumedBy","evt2","otherSE","consume","ringOut","isInResult","baseEvent","_this","cache","Map","fillCache","linkedEvent","nextEvent","sine","cosine","_cache$get","asine","acosine","_cache$get2","bsine","bcosine","segmentId","leftSE","rightSE","rings","windings","alx","blx","arx","brx","aly","bly","ary","bry","aCmpBLeft","comparePoint","bCmpARight","bCmpALeft","aCmpBRight","_bCmpARight","_aCmpBRight","newRightSE","isAnEndpoint","lPt","rPt","vector","yDist","xFromYDist","xDist","yFromXDist","tBbox","oBbox","bboxOverlap","tlp","trp","olp","orp","touchesOtherLSE","touchesThisLSE","touchesOtherRSE","touchesThisRSE","pt1","pt2","d1","d2","newEvents","alreadyLinked","newLeftSE","oldRightSE","replaceRightSE","newSeg","swapEvents","tmpEvt","consumer","consumee","_tmp","winding","_prevInResult","prevInResult","_beforeState","seg","afterState","multiPolys","_afterState","beforeState","ringsAfter","windingsAfter","mpsAfter","polysAfter","polysExclude","_iMax","_ring","isExterior","_index","_i2","_iMax2","mp","_isInResult","mpsBefore","operation","noBefores","noAfters","least","most","numMultiPolys","diff","isJustSubject","mps","isSubject","leftPt","rightPt","cmpPts","RingIn","geomRing","fromRing","sweepEvents","PolyIn","geomPoly","exteriorRing","interiorRings","getSweepEvents","ringSweepEvents","jMax","MultiPolyIn","ex","POSITIVE_INFINITY","NEGATIVE_INFINITY","polySweepEvents","RingOut","allSegments","ringsOut","prevEvent","event","startingPoint","intersectionLEs","availableLEs","getAvailableLinkedEvents","firstPt","lastPt","indexLE","getLeftmostComparator","intersectionLE","ringEvents","prevPt","_pt","_nextPt","nextPt","shift","isExteriorRing","iStart","iEnd","orderedPoints","_isExteriorRing","enclosing","enclosingRing","_enclosingRing","_calcEnclosingRing","leftMostEvt","prevSeg","prevPrevSeg","PolyOut","ringGeom","MultiPolyOut","_composePolys","polyGeom","addInterior","SweepLine","queue","nextSeg","prevMySplitter","prevInter","getIntersection","newEventsFromSplit","_splitSafely","nextMySplitter","nextInter","_newEventsFromSplit","mySplitter","_newEventsFromSplit2","inter","_newEventsFromSplit3","_i3","_iMax3","_newEventsFromSplit4","_i4","_iMax4","POLYGON_CLIPPING_MAX_QUEUE_SIZE","env","POLYGON_CLIPPING_MAX_SWEEPLINE_SEGMENTS","Operation","moreGeoms","multipolys","subject","mpA","_jMax","sweepLine","prevQueueSize","_evt","factory","subjectGeom","_len4","clippingGeoms","_key4","run","difference","polygon1","polygon2","differenced","polygonClipping","modeName","passingModeName","highlightPropertyName","defaultOptions","highlightColor","lineWidth","lineWidthUnit","onSelectFeatureRequest","SplitPolygonMode","opt","featuresToSplit","selectedFeatures","MapboxDraw","state","drawAndSplit","highlighFeatures","onDraw","cuttingLineString","newPolygons","el","console","info","polycut","polygonSplitter","line_width","line_width_unit","offsetLine","retVal","intersectPoints","forCut","thickLineString","thickLinePolygon","clipped","polyCoords","polygonCutWithSpacing","onCancel","err","error","SplitPolygonMode$1","shouldHighlight","color","display","newF","MapboxDraw.modes","originOnSetup","originOnClick","restOriginMethods","MapboxDraw.lib","Constants","MapboxDraw.constants","originOnMouseMove","passing_draw_line_string","select_mode","SelectFeatureMode","selectFeatureMode","selectHighlightColor","onSelect","defaultSelectHighlightColor","hoveringFeatureID","hoveredFeatureID","selectedFeatureID","featureID","modeName$1","splitPolygonMode","defaultStyle","endsWith"],"mappings":"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"}